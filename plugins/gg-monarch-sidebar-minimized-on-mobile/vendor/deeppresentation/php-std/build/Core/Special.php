<?php namespace MSMoMDP\Std\Core;

class Special {

	// SECTION Public
	public static function url_exists( $url ) {
		if ( ! $fp = curl_init( $url ) ) {
			return false;
		}
		return true;
	}

	public static function get_months_names_array() {
		return array( 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December' );
	}

	public static function pseudo_json_encode( $dataToEncode, $bitmapMask = 0 ) {
		$result = json_encode( $dataToEncode, $bitmapMask );
		$result = '(@#' . str_replace( '"', '``', $result ) . '#@)';
		return $result;
	}

	public static function pseudo_json_decode( $pseudoJsonString, $assoc = true ) {
		if ( Str::starts_with( $pseudoJsonString, '(@#' ) ) {
			$pseudoJsonString = '"' . $pseudoJsonString;
		}
		if ( Str::ends_with( $pseudoJsonString, '#@)' ) ) {
			$pseudoJsonString = $pseudoJsonString . '"';
		}
		$tmp = str_replace( '"(@#', '', $pseudoJsonString );
		$tmp = str_replace( '#@)"', '', $tmp );
		$tmp = str_replace( '``', '"', $tmp );
		return json_decode( $tmp, $assoc );
	}

	public static function UR_exists( string $url ) {
		$headers = get_headers( $url, null, null );
		return stripos( $headers[0], '200 OK' ) ? true : false;
	}

	/* GET CACHE-BUSTED CSS FILE
	/––––––––––––––––––––––––––––––*/
	// get the url to the busted css-file
	// the busted css file is generated by `gulp cachebust` and is located through dist/wp-content/themes/salient-child/assets/stylesrev-manifest.json
	public static function get_cachebusted_css_url( string $styleFileDir, string $styleDirURL, string $styleSheetName, string $manifestName = 'rev-manifest.json' ) : string {
		$res                    = Path::combine_url( $styleDirURL, $styleSheetName );
		$css_manifest_url       = Path::combine_url( $styleDirURL, $manifestName );
		$css_manifest_file_path = Path::combine( $styleFileDir, $manifestName );
		if ( file_exists( $css_manifest_file_path ) ) {
			$rawManifestContent = file_get_contents( $css_manifest_file_path );
			if ( $rawManifestContent ) {
				$css_manifest_content = json_decode( $rawManifestContent, true );
				if ( $css_manifest_content && array_key_exists( $styleSheetName, $css_manifest_content ) ) {
					$caseBustedCssName = $css_manifest_content[ $styleSheetName ];
					if ( $caseBustedCssName ) {
						$res = Path::combine_url( $styleDirURL, $caseBustedCssName );
					}
				}
			}
		}

		return $res;
	}

	public static function get_asset_version( $distVersion ) {
		//if ( defined('G_DEV') && G_DEV )
		//  return microtime();
		return $distVersion;
	}

	// !SECTION End - Public


	// SECTION Private

	// !SECTION End - Private
}
