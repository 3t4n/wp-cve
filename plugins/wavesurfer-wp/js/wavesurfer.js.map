{"version":3,"sources":["webpack://WaveSurfer/webpack/universalModuleDefinition","webpack://WaveSurfer/webpack/bootstrap","webpack://WaveSurfer/./node_modules/debounce/index.js","webpack://WaveSurfer/./src/drawer.canvasentry.js","webpack://WaveSurfer/./src/drawer.js","webpack://WaveSurfer/./src/drawer.multicanvas.js","webpack://WaveSurfer/./src/mediaelement-webaudio.js","webpack://WaveSurfer/./src/mediaelement.js","webpack://WaveSurfer/./src/peakcache.js","webpack://WaveSurfer/./src/util/ajax.js","webpack://WaveSurfer/./src/util/fetch.js","webpack://WaveSurfer/./src/util/frame.js","webpack://WaveSurfer/./src/util/get-id.js","webpack://WaveSurfer/./src/util/index.js","webpack://WaveSurfer/./src/util/max.js","webpack://WaveSurfer/./src/util/min.js","webpack://WaveSurfer/./src/util/observer.js","webpack://WaveSurfer/./src/util/prevent-click.js","webpack://WaveSurfer/./src/util/request-animation-frame.js","webpack://WaveSurfer/./src/util/style.js","webpack://WaveSurfer/./src/wavesurfer.js","webpack://WaveSurfer/./src/webaudio.js"],"names":["CanvasEntry","wave","waveCtx","progress","progressCtx","start","end","id","constructor","name","toLowerCase","canvasContextAttributes","element","getContext","elementWidth","totalWidth","width","height","offsetLeft","elementSize","hasProgressCanvas","clearRect","canvas","waveColor","progressColor","fillStyle","x","y","radius","fillRectToContext","ctx","drawRoundedRect","fillRect","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","fill","peaks","absmax","halfH","offsetY","drawLineToContext","length","first","Math","round","last","canvasStart","canvasEnd","scale","halfOffset","absmaxHalf","i","peak","h","halfPixel","j","format","quality","type","Promise","resolve","toBlob","toDataURL","Drawer","container","params","pixelRatio","lastPos","wrapper","el","styles","util","style","appendChild","document","createElement","display","position","userSelect","webkitUserSelect","fillParent","scrollParent","overflowX","hideScrollbar","overflowY","setupWrapperEvents","e","noPrevent","preventDefault","clientX","targetTouches","bbox","getBoundingClientRect","nominalWidth","parentWidth","getWidth","rtl","right","left","scrollLeft","scrollWidth","addEventListener","scrollbarHeight","offsetHeight","clientHeight","clientY","bottom","interact","fireEvent","handleEvent","setWidth","clearWave","barWidth","drawBars","drawWave","percent","recenterOnPosition","immediate","half","clientWidth","maxScroll","target","offset","rate","autoCenterRate","max","min","updateSize","minPxDelta","pos","autoCenter","newPos","autoCenterImmediately","updateProgress","unAll","parentNode","removeChild","channelIndex","Observer","MultiCanvas","maxCanvasWidth","maxCanvasElementWidth","canvases","progressWave","EntryClass","drawingContextAttributes","overlap","ceil","barRadius","createWrapper","createElements","zIndex","top","overflow","boxSizing","borderRightStyle","pointerEvents","addCanvas","updateCursor","borderRightWidth","cursorWidth","borderRightColor","cursorColor","requiredCanvases","removeCanvas","canvasWidth","lastCanvas","forEach","entry","updateDimensions","leftOffset","initWave","initProgress","push","lastEntry","parentElement","destroy","pop","frame","prepareDraw","hasMinVals","undefined","peakIndexScale","bar","gap","barGap","step","floor","barMinHeight","reflectedPeaks","len","drawLine","splitChannelsOptions","channelColors","setFillStyles","drawLines","startCanvas","endCanvas","intersection","x1","y1","x2","y2","fillRects","splitChannels","filterChannels","includes","fn","drawIndex","Array","channels","filteredChannels","filter","c","hideChannel","overlay","setHeight","channelPeaks","indexOf","barHeight","normalize","some","call","val","all","map","getImage","images","MediaElementWebAudio","sourceMediaElement","setPlaybackRate","audioRate","createTimer","createVolumeNode","createScriptNode","createAnalyserNode","media","preload","createMediaElementSource","mediaElement","ac","connect","analyser","resumeAudioContext","destroyWebAudio","MediaElement","currentTime","duration","paused","playbackRate","play","pause","volume","mediaType","elementPosition","isMuted","buffer","onPlayEnd","mediaListeners","error","canplay","ended","seeked","event","volumechange","muted","Object","keys","removeEventListener","onAudioProcess","isPaused","getCurrentTime","on","url","controls","mediaControls","autoplay","src","prevMedia","querySelector","_load","elt","HTMLMediaElement","Error","load","_setupMediaListeners","setVolume","explicitDuration","Infinity","seekable","getDuration","value","clearPlayEnd","seekTo","promise","setPlayEnd","_onPlayEnd","time","un","deviceId","setSinkId","reject","destroyed","removeMediaElementOnDestroy","WebAudio","PeakCache","clearPeakCache","peakCacheRanges","peakCacheLength","uncachedRanges","item","arr","concat","sort","a","b","uncachedRangePairs","peakCacheRangePairs","ajax","options","instance","xhr","XMLHttpRequest","fired100","open","method","responseType","requestHeaders","header","setRequestHeader","key","withCredentials","lengthComputable","loaded","total","status","response","send","ProgressHandler","contentLength","_reader","body","getReader","parseInt","controller","read","then","done","onProgress","close","byteLength","enqueue","catch","fetchFile","fetchHeaders","Headers","fetchRequest","Request","AbortController","append","fetchOptions","headers","mode","credentials","cache","redirect","referrer","signal","fetch","progressAvailable","get","Response","ReadableStream","errMsg","ok","arrayBuffer","json","blob","text","func","args","getId","prefix","random","toString","substring","values","largest","smallest","Number","_disabledEventEmissions","handlers","callback","splice","handler","apply","setTimeout","eventNames","_isDisabledEventEmission","preventClickHandler","stopPropagation","preventClick","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","bind","prop","PluginClass","ws","WaveSurfer","wavesurfer","init","defaultParams","audioContext","audioScriptProcessor","backend","backgroundColor","dragSelection","desynchronized","forceDecode","loopSelection","mediaContainer","minPxPerSec","partialRender","devicePixelRatio","screen","deviceXDPI","logicalXDPI","plugins","renderer","responsive","skipLength","backends","assign","transform","setBackgroundColor","savedVolume","tmpEvents","currentRequest","arraybuffer","drawer","peakCache","prototype","supportsWebAudio","Backend","initialisedPluginList","isDestroyed","isReady","prevWidth","_onResize","debounce","registerPlugins","createDrawer","createBackend","createPeakCache","plugin","addPlugin","deferInit","initPlugin","staticProps","pluginStaticProp","Instance","observerPrototypeKeys","getOwnPropertyNames","destroyPlugin","drawBuffer","getPlayedPercents","newVolume","getVolume","seconds","skip","seekAndCenter","recenter","isFinite","oldScrollParent","getPlaybackRate","setMute","mute","filters","color","background","channelIndices","newRanges","addRangeToPeakCache","getPeaks","drawPeaks","pxPerSec","decodeArrayBuffer","data","loadDecodedBuffer","reader","FileReader","loadArrayBuffer","result","readAsArrayBuffer","empty","preloadIgnoreReasons","activeReasons","reason","console","warn","join","loadBuffer","loadMediaElement","action","once","getArrayBuffer","setPeaks","urlOrElt","loadElt","err","request","percentComplete","accuracy","noWindow","JSON","stringify","encodeURIComponent","abort","stop","disconnectSource","cancelAjax","clearTmpEvents","destroyAllPlugins","VERSION","__VERSION__","PLAYING","PAUSED","FINISHED","AudioContext","webkitAudioContext","WaveSurferAudioContext","sampleRate","WaveSurferOfflineAudioContext","OfflineAudioContext","webkitOfflineAudioContext","offlineAudioContext","stateBehaviors","addOnAudioProcess","startPosition","getPlayedTime","removeOnAudioProcess","getAudioContext","lastPlay","scheduledPause","states","create","gainNode","mergedPeaks","offlineAc","scriptNode","source","splitPeaks","state","setState","setLength","disconnect","setFilters","disconnectFilters","reduce","prev","curr","createScriptProcessor","scriptBufferSize","createJavaScriptNode","destination","onaudioprocess","createAnalyser","createGain","createGainNode","audio","Audio","dest","createMediaStreamDestination","srcObject","stream","gain","setValueAtTime","errback","getOfflineAudioContext","decodeAudioData","numberOfChannels","newBuffer","createBuffer","sampleSize","sampleStep","chan","getChannelData","closeAudioContext","createSource","createBufferSource","noteGrainOn","noteOff","resume","adjustedTime"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;ACjEA;;AACA;;;;;;;;;;AAEA;;;;;;;IAOqBA,W;AACjB,yBAAc;AAAA;;AACV;;;;;AAKA,SAAKC,IAAL,GAAY,IAAZ;AACA;;;;;;AAKA,SAAKC,OAAL,GAAe,IAAf;AACA;;;;;;AAKA,SAAKC,QAAL,GAAgB,IAAhB;AACA;;;;;;AAKA,SAAKC,WAAL,GAAmB,IAAnB;AACA;;;;;;AAKA,SAAKC,KAAL,GAAa,CAAb;AACA;;;;;;AAKA,SAAKC,GAAL,GAAW,CAAX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","file":"wavesurfer.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/wavesurfer.js\");\n","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n","/**\r\n * @since 3.0.0\r\n */\r\n\r\nimport style from './util/style';\r\nimport getId from './util/get-id';\r\n\r\n/**\r\n * The `CanvasEntry` class represents an element consisting of a wave `canvas`\r\n * and an (optional) progress wave `canvas`.\r\n *\r\n * The `MultiCanvas` renderer uses one or more `CanvasEntry` instances to\r\n * render a waveform, depending on the zoom level.\r\n */\r\nexport default class CanvasEntry {\r\n    constructor() {\r\n        /**\r\n         * The wave node\r\n         *\r\n         * @type {HTMLCanvasElement}\r\n         */\r\n        this.wave = null;\r\n        /**\r\n         * The wave canvas rendering context\r\n         *\r\n         * @type {CanvasRenderingContext2D}\r\n         */\r\n        this.waveCtx = null;\r\n        /**\r\n         * The (optional) progress wave node\r\n         *\r\n         * @type {HTMLCanvasElement}\r\n         */\r\n        this.progress = null;\r\n        /**\r\n         * The (optional) progress wave canvas rendering context\r\n         *\r\n         * @type {CanvasRenderingContext2D}\r\n         */\r\n        this.progressCtx = null;\r\n        /**\r\n         * Start of the area the canvas should render, between 0 and 1\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.start = 0;\r\n        /**\r\n         * End of the area the canvas should render, between 0 and 1\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.end = 1;\r\n        /**\r\n         * Unique identifier for this entry\r\n         *\r\n         * @type {string}\r\n         */\r\n        this.id = getId(\r\n            typeof this.constructor.name !== 'undefined'\r\n                ? this.constructor.name.toLowerCase() + '_'\r\n                : 'canvasentry_'\r\n        );\r\n        /**\r\n         * Canvas 2d context attributes\r\n         *\r\n         * @type {object}\r\n         */\r\n        this.canvasContextAttributes = {};\r\n    }\r\n\r\n    /**\r\n     * Store the wave canvas element and create the 2D rendering context\r\n     *\r\n     * @param {HTMLCanvasElement} element The wave `canvas` element.\r\n     */\r\n    initWave(element) {\r\n        this.wave = element;\r\n        this.waveCtx = this.wave.getContext('2d', this.canvasContextAttributes);\r\n    }\r\n\r\n    /**\r\n     * Store the progress wave canvas element and create the 2D rendering\r\n     * context\r\n     *\r\n     * @param {HTMLCanvasElement} element The progress wave `canvas` element.\r\n     */\r\n    initProgress(element) {\r\n        this.progress = element;\r\n        this.progressCtx = this.progress.getContext(\r\n            '2d',\r\n            this.canvasContextAttributes\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Update the dimensions\r\n     *\r\n     * @param {number} elementWidth Width of the entry\r\n     * @param {number} totalWidth Total width of the multi canvas renderer\r\n     * @param {number} width The new width of the element\r\n     * @param {number} height The new height of the element\r\n     */\r\n    updateDimensions(elementWidth, totalWidth, width, height) {\r\n        // where the canvas starts and ends in the waveform, represented as a\r\n        // decimal between 0 and 1\r\n        this.start = this.wave.offsetLeft / totalWidth || 0;\r\n        this.end = this.start + elementWidth / totalWidth;\r\n\r\n        // set wave canvas dimensions\r\n        this.wave.width = width;\r\n        this.wave.height = height;\r\n        let elementSize = { width: elementWidth + 'px' };\r\n        style(this.wave, elementSize);\r\n\r\n        if (this.hasProgressCanvas) {\r\n            // set progress canvas dimensions\r\n            this.progress.width = width;\r\n            this.progress.height = height;\r\n            style(this.progress, elementSize);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clear the wave and progress rendering contexts\r\n     */\r\n    clearWave() {\r\n        // wave\r\n        this.waveCtx.clearRect(\r\n            0,\r\n            0,\r\n            this.waveCtx.canvas.width,\r\n            this.waveCtx.canvas.height\r\n        );\r\n\r\n        // progress\r\n        if (this.hasProgressCanvas) {\r\n            this.progressCtx.clearRect(\r\n                0,\r\n                0,\r\n                this.progressCtx.canvas.width,\r\n                this.progressCtx.canvas.height\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set the fill styles for wave and progress\r\n     *\r\n     * @param {string} waveColor Fill color for the wave canvas\r\n     * @param {?string} progressColor Fill color for the progress canvas\r\n     */\r\n    setFillStyles(waveColor, progressColor) {\r\n        this.waveCtx.fillStyle = waveColor;\r\n\r\n        if (this.hasProgressCanvas) {\r\n            this.progressCtx.fillStyle = progressColor;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draw a rectangle for wave and progress\r\n     *\r\n     * @param {number} x X start position\r\n     * @param {number} y Y start position\r\n     * @param {number} width Width of the rectangle\r\n     * @param {number} height Height of the rectangle\r\n     * @param {number} radius Radius of the rectangle\r\n     */\r\n    fillRects(x, y, width, height, radius) {\r\n        this.fillRectToContext(this.waveCtx, x, y, width, height, radius);\r\n\r\n        if (this.hasProgressCanvas) {\r\n            this.fillRectToContext(\r\n                this.progressCtx,\r\n                x,\r\n                y,\r\n                width,\r\n                height,\r\n                radius\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draw the actual rectangle on a `canvas` element\r\n     *\r\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\r\n     * @param {number} x X start position\r\n     * @param {number} y Y start position\r\n     * @param {number} width Width of the rectangle\r\n     * @param {number} height Height of the rectangle\r\n     * @param {number} radius Radius of the rectangle\r\n     */\r\n    fillRectToContext(ctx, x, y, width, height, radius) {\r\n        if (!ctx) {\r\n            return;\r\n        }\r\n\r\n        if (radius) {\r\n            this.drawRoundedRect(ctx, x, y, width, height, radius);\r\n        } else {\r\n            ctx.fillRect(x, y, width, height);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draw a rounded rectangle on Canvas\r\n     *\r\n     * @param {CanvasRenderingContext2D} ctx Canvas context\r\n     * @param {number} x X-position of the rectangle\r\n     * @param {number} y Y-position of the rectangle\r\n     * @param {number} width Width of the rectangle\r\n     * @param {number} height Height of the rectangle\r\n     * @param {number} radius Radius of the rectangle\r\n     *\r\n     * @return {void}\r\n     * @example drawRoundedRect(ctx, 50, 50, 5, 10, 3)\r\n     */\r\n    drawRoundedRect(ctx, x, y, width, height, radius) {\r\n        if (height === 0) {\r\n            return;\r\n        }\r\n        // peaks are float values from -1 to 1. Use absolute height values in\r\n        // order to correctly calculate rounded rectangle coordinates\r\n        if (height < 0) {\r\n            height *= -1;\r\n            y -= height;\r\n        }\r\n        ctx.beginPath();\r\n        ctx.moveTo(x + radius, y);\r\n        ctx.lineTo(x + width - radius, y);\r\n        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n        ctx.lineTo(x + width, y + height - radius);\r\n        ctx.quadraticCurveTo(\r\n            x + width,\r\n            y + height,\r\n            x + width - radius,\r\n            y + height\r\n        );\r\n        ctx.lineTo(x + radius, y + height);\r\n        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n        ctx.lineTo(x, y + radius);\r\n        ctx.quadraticCurveTo(x, y, x + radius, y);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n\r\n    /**\r\n     * Render the actual wave and progress lines\r\n     *\r\n     * @param {number[]} peaks Array with peaks data\r\n     * @param {number} absmax Maximum peak value (absolute)\r\n     * @param {number} halfH Half the height of the waveform\r\n     * @param {number} offsetY Offset to the top\r\n     * @param {number} start The x-offset of the beginning of the area that\r\n     * should be rendered\r\n     * @param {number} end The x-offset of the end of the area that\r\n     * should be rendered\r\n     */\r\n    drawLines(peaks, absmax, halfH, offsetY, start, end) {\r\n        this.drawLineToContext(\r\n            this.waveCtx,\r\n            peaks,\r\n            absmax,\r\n            halfH,\r\n            offsetY,\r\n            start,\r\n            end\r\n        );\r\n\r\n        if (this.hasProgressCanvas) {\r\n            this.drawLineToContext(\r\n                this.progressCtx,\r\n                peaks,\r\n                absmax,\r\n                halfH,\r\n                offsetY,\r\n                start,\r\n                end\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Render the actual waveform line on a `canvas` element\r\n     *\r\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\r\n     * @param {number[]} peaks Array with peaks data\r\n     * @param {number} absmax Maximum peak value (absolute)\r\n     * @param {number} halfH Half the height of the waveform\r\n     * @param {number} offsetY Offset to the top\r\n     * @param {number} start The x-offset of the beginning of the area that\r\n     * should be rendered\r\n     * @param {number} end The x-offset of the end of the area that\r\n     * should be rendered\r\n     */\r\n    drawLineToContext(ctx, peaks, absmax, halfH, offsetY, start, end) {\r\n        if (!ctx) {\r\n            return;\r\n        }\r\n\r\n        const length = peaks.length / 2;\r\n        const first = Math.round(length * this.start);\r\n\r\n        // use one more peak value to make sure we join peaks at ends -- unless,\r\n        // of course, this is the last canvas\r\n        const last = Math.round(length * this.end) + 1;\r\n\r\n        const canvasStart = first;\r\n        const canvasEnd = last;\r\n        const scale = this.wave.width / (canvasEnd - canvasStart - 1);\r\n\r\n        // optimization\r\n        const halfOffset = halfH + offsetY;\r\n        const absmaxHalf = absmax / halfH;\r\n\r\n        ctx.beginPath();\r\n        ctx.moveTo((canvasStart - first) * scale, halfOffset);\r\n\r\n        ctx.lineTo(\r\n            (canvasStart - first) * scale,\r\n            halfOffset - Math.round((peaks[2 * canvasStart] || 0) / absmaxHalf)\r\n        );\r\n\r\n        let i, peak, h;\r\n        for (i = canvasStart; i < canvasEnd; i++) {\r\n            peak = peaks[2 * i] || 0;\r\n            h = Math.round(peak / absmaxHalf);\r\n            ctx.lineTo((i - first) * scale + this.halfPixel, halfOffset - h);\r\n        }\r\n\r\n        // draw the bottom edge going backwards, to make a single\r\n        // closed hull to fill\r\n        let j = canvasEnd - 1;\r\n        for (j; j >= canvasStart; j--) {\r\n            peak = peaks[2 * j + 1] || 0;\r\n            h = Math.round(peak / absmaxHalf);\r\n            ctx.lineTo((j - first) * scale + this.halfPixel, halfOffset - h);\r\n        }\r\n\r\n        ctx.lineTo(\r\n            (canvasStart - first) * scale,\r\n            halfOffset -\r\n                Math.round((peaks[2 * canvasStart + 1] || 0) / absmaxHalf)\r\n        );\r\n\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n\r\n    /**\r\n     * Destroys this entry\r\n     */\r\n    destroy() {\r\n        this.waveCtx = null;\r\n        this.wave = null;\r\n\r\n        this.progressCtx = null;\r\n        this.progress = null;\r\n    }\r\n\r\n    /**\r\n     * Return image data of the wave `canvas` element\r\n     *\r\n     * When using a `type` of `'blob'`, this will return a `Promise` that\r\n     * resolves with a `Blob` instance.\r\n     *\r\n     * @param {string} format='image/png' An optional value of a format type.\r\n     * @param {number} quality=0.92 An optional value between 0 and 1.\r\n     * @param {string} type='dataURL' Either 'dataURL' or 'blob'.\r\n     * @return {string|Promise} When using the default `'dataURL'` `type` this\r\n     * returns a data URL. When using the `'blob'` `type` this returns a\r\n     * `Promise` that resolves with a `Blob` instance.\r\n     */\r\n    getImage(format, quality, type) {\r\n        if (type === 'blob') {\r\n            return new Promise(resolve => {\r\n                this.wave.toBlob(resolve, format, quality);\r\n            });\r\n        } else if (type === 'dataURL') {\r\n            return this.wave.toDataURL(format, quality);\r\n        }\r\n    }\r\n}\r\n","import * as util from './util';\r\n\r\n/**\r\n * Parent class for renderers\r\n *\r\n * @extends {Observer}\r\n */\r\nexport default class Drawer extends util.Observer {\r\n    /**\r\n     * @param {HTMLElement} container The container node of the wavesurfer instance\r\n     * @param {WavesurferParams} params The wavesurfer initialisation options\r\n     */\r\n    constructor(container, params) {\r\n        super();\r\n\r\n        this.container = container;\r\n        /**\r\n         * @type {WavesurferParams}\r\n         */\r\n        this.params = params;\r\n        /**\r\n         * The width of the renderer\r\n         * @type {number}\r\n         */\r\n        this.width = 0;\r\n        /**\r\n         * The height of the renderer\r\n         * @type {number}\r\n         */\r\n        this.height = params.height * this.params.pixelRatio;\r\n\r\n        this.lastPos = 0;\r\n        /**\r\n         * The `<wave>` element which is added to the container\r\n         * @type {HTMLElement}\r\n         */\r\n        this.wrapper = null;\r\n    }\r\n\r\n    /**\r\n     * Alias of `util.style`\r\n     *\r\n     * @param {HTMLElement} el The element that the styles will be applied to\r\n     * @param {Object} styles The map of propName: attribute, both are used as-is\r\n     * @return {HTMLElement} el\r\n     */\r\n    style(el, styles) {\r\n        return util.style(el, styles);\r\n    }\r\n\r\n    /**\r\n     * Create the wrapper `<wave>` element, style it and set up the events for\r\n     * interaction\r\n     */\r\n    createWrapper() {\r\n        this.wrapper = this.container.appendChild(\r\n            document.createElement('wave')\r\n        );\r\n\r\n        this.style(this.wrapper, {\r\n            display: 'block',\r\n            position: 'relative',\r\n            userSelect: 'none',\r\n            webkitUserSelect: 'none',\r\n            height: this.params.height + 'px'\r\n        });\r\n\r\n        if (this.params.fillParent || this.params.scrollParent) {\r\n            this.style(this.wrapper, {\r\n                width: '100%',\r\n                overflowX: this.params.hideScrollbar ? 'hidden' : 'auto',\r\n                overflowY: 'hidden'\r\n            });\r\n        }\r\n\r\n        this.setupWrapperEvents();\r\n    }\r\n\r\n    /**\r\n     * Handle click event\r\n     *\r\n     * @param {Event} e Click event\r\n     * @param {?boolean} noPrevent Set to true to not call `e.preventDefault()`\r\n     * @return {number} Playback position from 0 to 1\r\n     */\r\n    handleEvent(e, noPrevent) {\r\n        !noPrevent && e.preventDefault();\r\n\r\n        const clientX = e.targetTouches\r\n            ? e.targetTouches[0].clientX\r\n            : e.clientX;\r\n        const bbox = this.wrapper.getBoundingClientRect();\r\n\r\n        const nominalWidth = this.width;\r\n        const parentWidth = this.getWidth();\r\n\r\n        let progress;\r\n        if (!this.params.fillParent && nominalWidth < parentWidth) {\r\n            progress =\r\n                (this.params.rtl ? bbox.right - clientX : clientX - bbox.left) *\r\n                    (this.params.pixelRatio / nominalWidth) || 0;\r\n\r\n            if (progress > 1) {\r\n                progress = 1;\r\n            }\r\n        } else {\r\n            progress =\r\n                ((this.params.rtl\r\n                    ? bbox.right - clientX\r\n                    : clientX - bbox.left) +\r\n                    this.wrapper.scrollLeft) /\r\n                    this.wrapper.scrollWidth || 0;\r\n        }\r\n\r\n        return progress;\r\n    }\r\n\r\n    setupWrapperEvents() {\r\n        this.wrapper.addEventListener('click', e => {\r\n            const scrollbarHeight =\r\n                this.wrapper.offsetHeight - this.wrapper.clientHeight;\r\n            if (scrollbarHeight !== 0) {\r\n                // scrollbar is visible.  Check if click was on it\r\n                const bbox = this.wrapper.getBoundingClientRect();\r\n                if (e.clientY >= bbox.bottom - scrollbarHeight) {\r\n                    // ignore mousedown as it was on the scrollbar\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (this.params.interact) {\r\n                this.fireEvent('click', e, this.handleEvent(e));\r\n            }\r\n        });\r\n\r\n        this.wrapper.addEventListener('dblclick', e => {\r\n            if (this.params.interact) {\r\n                this.fireEvent('dblclick', e, this.handleEvent(e));\r\n            }\r\n        });\r\n\r\n        this.wrapper.addEventListener('scroll', e =>\r\n            this.fireEvent('scroll', e)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Draw peaks on the canvas\r\n     *\r\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\r\n     * for split channel rendering\r\n     * @param {number} length The width of the area that should be drawn\r\n     * @param {number} start The x-offset of the beginning of the area that\r\n     * should be rendered\r\n     * @param {number} end The x-offset of the end of the area that should be\r\n     * rendered\r\n     */\r\n    drawPeaks(peaks, length, start, end) {\r\n        if (!this.setWidth(length)) {\r\n            this.clearWave();\r\n        }\r\n\r\n        this.params.barWidth\r\n            ? this.drawBars(peaks, 0, start, end)\r\n            : this.drawWave(peaks, 0, start, end);\r\n    }\r\n\r\n    /**\r\n     * Scroll to the beginning\r\n     */\r\n    resetScroll() {\r\n        if (this.wrapper !== null) {\r\n            this.wrapper.scrollLeft = 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Recenter the view-port at a certain percent of the waveform\r\n     *\r\n     * @param {number} percent Value from 0 to 1 on the waveform\r\n     */\r\n    recenter(percent) {\r\n        const position = this.wrapper.scrollWidth * percent;\r\n        this.recenterOnPosition(position, true);\r\n    }\r\n\r\n    /**\r\n     * Recenter the view-port on a position, either scroll there immediately or\r\n     * in steps of 5 pixels\r\n     *\r\n     * @param {number} position X-offset in pixels\r\n     * @param {boolean} immediate Set to true to immediately scroll somewhere\r\n     */\r\n    recenterOnPosition(position, immediate) {\r\n        const scrollLeft = this.wrapper.scrollLeft;\r\n        const half = ~~(this.wrapper.clientWidth / 2);\r\n        const maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\r\n        let target = position - half;\r\n        let offset = target - scrollLeft;\r\n\r\n        if (maxScroll == 0) {\r\n            // no need to continue if scrollbar is not there\r\n            return;\r\n        }\r\n\r\n        // if the cursor is currently visible...\r\n        if (!immediate && -half <= offset && offset < half) {\r\n            // set rate at which waveform is centered\r\n            let rate = this.params.autoCenterRate;\r\n\r\n            // make rate depend on width of view and length of waveform\r\n            rate /= half;\r\n            rate *= maxScroll;\r\n\r\n            offset = Math.max(-rate, Math.min(rate, offset));\r\n            target = scrollLeft + offset;\r\n        }\r\n\r\n        // limit target to valid range (0 to maxScroll)\r\n        target = Math.max(0, Math.min(maxScroll, target));\r\n        // no use attempting to scroll if we're not moving\r\n        if (target != scrollLeft) {\r\n            this.wrapper.scrollLeft = target;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the current scroll position in pixels\r\n     *\r\n     * @return {number} Horizontal scroll position in pixels\r\n     */\r\n    getScrollX() {\r\n        let x = 0;\r\n        if (this.wrapper) {\r\n            const pixelRatio = this.params.pixelRatio;\r\n            x = Math.round(this.wrapper.scrollLeft * pixelRatio);\r\n\r\n            // In cases of elastic scroll (safari with mouse wheel) you can\r\n            // scroll beyond the limits of the container\r\n            // Calculate and floor the scrollable extent to make sure an out\r\n            // of bounds value is not returned\r\n            // Ticket #1312\r\n            if (this.params.scrollParent) {\r\n                const maxScroll = ~~(\r\n                    this.wrapper.scrollWidth * pixelRatio -\r\n                    this.getWidth()\r\n                );\r\n                x = Math.min(maxScroll, Math.max(0, x));\r\n            }\r\n        }\r\n        return x;\r\n    }\r\n\r\n    /**\r\n     * Get the width of the container\r\n     *\r\n     * @return {number} The width of the container\r\n     */\r\n    getWidth() {\r\n        return Math.round(this.container.clientWidth * this.params.pixelRatio);\r\n    }\r\n\r\n    /**\r\n     * Set the width of the container\r\n     *\r\n     * @param {number} width The new width of the container\r\n     * @return {boolean} Whether the width of the container was updated or not\r\n     */\r\n    setWidth(width) {\r\n        if (this.width == width) {\r\n            return false;\r\n        }\r\n\r\n        this.width = width;\r\n\r\n        if (this.params.fillParent || this.params.scrollParent) {\r\n            this.style(this.wrapper, {\r\n                width: ''\r\n            });\r\n        } else {\r\n            this.style(this.wrapper, {\r\n                width: ~~(this.width / this.params.pixelRatio) + 'px'\r\n            });\r\n        }\r\n\r\n        this.updateSize();\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Set the height of the container\r\n     *\r\n     * @param {number} height The new height of the container.\r\n     * @return {boolean} Whether the height of the container was updated or not\r\n     */\r\n    setHeight(height) {\r\n        if (height == this.height) {\r\n            return false;\r\n        }\r\n        this.height = height;\r\n\r\n        this.style(this.wrapper, {\r\n            height: ~~(this.height / this.params.pixelRatio) + 'px'\r\n        });\r\n\r\n        this.updateSize();\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Called by wavesurfer when progress should be rendered\r\n     *\r\n     * @param {number} progress From 0 to 1\r\n     */\r\n    progress(progress) {\r\n        const minPxDelta = 1 / this.params.pixelRatio;\r\n        const pos = Math.round(progress * this.width) * minPxDelta;\r\n\r\n        if (pos < this.lastPos || pos - this.lastPos >= minPxDelta) {\r\n            this.lastPos = pos;\r\n\r\n            if (this.params.scrollParent && this.params.autoCenter) {\r\n                const newPos = ~~(this.wrapper.scrollWidth * progress);\r\n                this.recenterOnPosition(\r\n                    newPos,\r\n                    this.params.autoCenterImmediately\r\n                );\r\n            }\r\n\r\n            this.updateProgress(pos);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This is called when wavesurfer is destroyed\r\n     */\r\n    destroy() {\r\n        this.unAll();\r\n        if (this.wrapper) {\r\n            if (this.wrapper.parentNode == this.container) {\r\n                this.container.removeChild(this.wrapper);\r\n            }\r\n            this.wrapper = null;\r\n        }\r\n    }\r\n\r\n    /* Renderer-specific methods */\r\n\r\n    /**\r\n     * Called after cursor related params have changed.\r\n     *\r\n     * @abstract\r\n     */\r\n    updateCursor() {}\r\n\r\n    /**\r\n     * Called when the size of the container changes so the renderer can adjust\r\n     *\r\n     * @abstract\r\n     */\r\n    updateSize() {}\r\n\r\n    /**\r\n     * Draw a waveform with bars\r\n     *\r\n     * @abstract\r\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for split channel\r\n     * rendering\r\n     * @param {number} channelIndex The index of the current channel. Normally\r\n     * should be 0\r\n     * @param {number} start The x-offset of the beginning of the area that\r\n     * should be rendered\r\n     * @param {number} end The x-offset of the end of the area that should be\r\n     * rendered\r\n     */\r\n    drawBars(peaks, channelIndex, start, end) {}\r\n\r\n    /**\r\n     * Draw a waveform\r\n     *\r\n     * @abstract\r\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for split channel\r\n     * rendering\r\n     * @param {number} channelIndex The index of the current channel. Normally\r\n     * should be 0\r\n     * @param {number} start The x-offset of the beginning of the area that\r\n     * should be rendered\r\n     * @param {number} end The x-offset of the end of the area that should be\r\n     * rendered\r\n     */\r\n    drawWave(peaks, channelIndex, start, end) {}\r\n\r\n    /**\r\n     * Clear the waveform\r\n     *\r\n     * @abstract\r\n     */\r\n    clearWave() {}\r\n\r\n    /**\r\n     * Render the new progress\r\n     *\r\n     * @abstract\r\n     * @param {number} position X-Offset of progress position in pixels\r\n     */\r\n    updateProgress(position) {}\r\n}\r\n","import Drawer from './drawer';\r\nimport * as util from './util';\r\nimport CanvasEntry from './drawer.canvasentry';\r\n\r\n/**\r\n * MultiCanvas renderer for wavesurfer. Is currently the default and sole\r\n * builtin renderer.\r\n *\r\n * A `MultiCanvas` consists of one or more `CanvasEntry` instances, depending\r\n * on the zoom level.\r\n */\r\nexport default class MultiCanvas extends Drawer {\r\n    /**\r\n     * @param {HTMLElement} container The container node of the wavesurfer instance\r\n     * @param {WavesurferParams} params The wavesurfer initialisation options\r\n     */\r\n    constructor(container, params) {\r\n        super(container, params);\r\n\r\n        /**\r\n         * @type {number}\r\n         */\r\n        this.maxCanvasWidth = params.maxCanvasWidth;\r\n\r\n        /**\r\n         * @type {number}\r\n         */\r\n        this.maxCanvasElementWidth = Math.round(\r\n            params.maxCanvasWidth / params.pixelRatio\r\n        );\r\n\r\n        /**\r\n         * Whether or not the progress wave is rendered. If the `waveColor`\r\n         * and `progressColor` are the same color it is not.\r\n         *\r\n         * @type {boolean}\r\n         */\r\n        this.hasProgressCanvas = params.waveColor != params.progressColor;\r\n\r\n        /**\r\n         * @type {number}\r\n         */\r\n        this.halfPixel = 0.5 / params.pixelRatio;\r\n\r\n        /**\r\n         * List of `CanvasEntry` instances.\r\n         *\r\n         * @type {Array}\r\n         */\r\n        this.canvases = [];\r\n\r\n        /**\r\n         * @type {HTMLElement}\r\n         */\r\n        this.progressWave = null;\r\n\r\n        /**\r\n         * Class used to generate entries.\r\n         *\r\n         * @type {function}\r\n         */\r\n        this.EntryClass = CanvasEntry;\r\n\r\n        /**\r\n         * Canvas 2d context attributes.\r\n         *\r\n         * @type {object}\r\n         */\r\n        this.canvasContextAttributes = params.drawingContextAttributes;\r\n\r\n        /**\r\n         * Overlap added between entries to prevent vertical white stripes\r\n         * between `canvas` elements.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.overlap = 2 * Math.ceil(params.pixelRatio / 2);\r\n\r\n        /**\r\n         * The radius of the wave bars. Makes bars rounded\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.barRadius = params.barRadius || 0;\r\n    }\r\n\r\n    /**\r\n     * Initialize the drawer\r\n     */\r\n    init() {\r\n        this.createWrapper();\r\n        this.createElements();\r\n    }\r\n\r\n    /**\r\n     * Create the canvas elements and style them\r\n     *\r\n     */\r\n    createElements() {\r\n        this.progressWave = this.wrapper.appendChild(\r\n            this.style(document.createElement('wave'), {\r\n                position: 'absolute',\r\n                zIndex: 3,\r\n                left: 0,\r\n                top: 0,\r\n                bottom: 0,\r\n                overflow: 'hidden',\r\n                width: '0',\r\n                display: 'none',\r\n                boxSizing: 'border-box',\r\n                borderRightStyle: 'solid',\r\n                pointerEvents: 'none'\r\n            })\r\n        );\r\n\r\n        this.addCanvas();\r\n        this.updateCursor();\r\n    }\r\n\r\n    /**\r\n     * Update cursor style\r\n     */\r\n    updateCursor() {\r\n        this.style(this.progressWave, {\r\n            borderRightWidth: this.params.cursorWidth + 'px',\r\n            borderRightColor: this.params.cursorColor\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Adjust to the updated size by adding or removing canvases\r\n     */\r\n    updateSize() {\r\n        const totalWidth = Math.round(this.width / this.params.pixelRatio);\r\n        const requiredCanvases = Math.ceil(\r\n            totalWidth / (this.maxCanvasElementWidth + this.overlap)\r\n        );\r\n\r\n        // add required canvases\r\n        while (this.canvases.length < requiredCanvases) {\r\n            this.addCanvas();\r\n        }\r\n\r\n        // remove older existing canvases, if any\r\n        while (this.canvases.length > requiredCanvases) {\r\n            this.removeCanvas();\r\n        }\r\n\r\n        let canvasWidth = this.maxCanvasWidth + this.overlap;\r\n        const lastCanvas = this.canvases.length - 1;\r\n        this.canvases.forEach((entry, i) => {\r\n            if (i == lastCanvas) {\r\n                canvasWidth = this.width - this.maxCanvasWidth * lastCanvas;\r\n            }\r\n            this.updateDimensions(entry, canvasWidth, this.height);\r\n\r\n            entry.clearWave();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Add a canvas to the canvas list\r\n     *\r\n     */\r\n    addCanvas() {\r\n        const entry = new this.EntryClass();\r\n        entry.canvasContextAttributes = this.canvasContextAttributes;\r\n        entry.hasProgressCanvas = this.hasProgressCanvas;\r\n        entry.halfPixel = this.halfPixel;\r\n        const leftOffset = this.maxCanvasElementWidth * this.canvases.length;\r\n\r\n        // wave\r\n        entry.initWave(\r\n            this.wrapper.appendChild(\r\n                this.style(document.createElement('canvas'), {\r\n                    position: 'absolute',\r\n                    zIndex: 2,\r\n                    left: leftOffset + 'px',\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    height: '100%',\r\n                    pointerEvents: 'none'\r\n                })\r\n            )\r\n        );\r\n\r\n        // progress\r\n        if (this.hasProgressCanvas) {\r\n            entry.initProgress(\r\n                this.progressWave.appendChild(\r\n                    this.style(document.createElement('canvas'), {\r\n                        position: 'absolute',\r\n                        left: leftOffset + 'px',\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        height: '100%'\r\n                    })\r\n                )\r\n            );\r\n        }\r\n\r\n        this.canvases.push(entry);\r\n    }\r\n\r\n    /**\r\n     * Pop single canvas from the list\r\n     *\r\n     */\r\n    removeCanvas() {\r\n        let lastEntry = this.canvases[this.canvases.length - 1];\r\n\r\n        // wave\r\n        lastEntry.wave.parentElement.removeChild(lastEntry.wave);\r\n\r\n        // progress\r\n        if (this.hasProgressCanvas) {\r\n            lastEntry.progress.parentElement.removeChild(lastEntry.progress);\r\n        }\r\n\r\n        // cleanup\r\n        if (lastEntry) {\r\n            lastEntry.destroy();\r\n            lastEntry = null;\r\n        }\r\n\r\n        this.canvases.pop();\r\n    }\r\n\r\n    /**\r\n     * Update the dimensions of a canvas element\r\n     *\r\n     * @param {CanvasEntry} entry Target entry\r\n     * @param {number} width The new width of the element\r\n     * @param {number} height The new height of the element\r\n     */\r\n    updateDimensions(entry, width, height) {\r\n        const elementWidth = Math.round(width / this.params.pixelRatio);\r\n        const totalWidth = Math.round(this.width / this.params.pixelRatio);\r\n\r\n        // update canvas dimensions\r\n        entry.updateDimensions(elementWidth, totalWidth, width, height);\r\n\r\n        // style element\r\n        this.style(this.progressWave, { display: 'block' });\r\n    }\r\n\r\n    /**\r\n     * Clear the whole multi-canvas\r\n     */\r\n    clearWave() {\r\n        util.frame(() => {\r\n            this.canvases.forEach(entry => entry.clearWave());\r\n        })();\r\n    }\r\n\r\n    /**\r\n     * Draw a waveform with bars\r\n     *\r\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\r\n     * for split channel rendering\r\n     * @param {number} channelIndex The index of the current channel. Normally\r\n     * should be 0. Must be an integer.\r\n     * @param {number} start The x-offset of the beginning of the area that\r\n     * should be rendered\r\n     * @param {number} end The x-offset of the end of the area that should be\r\n     * rendered\r\n     * @returns {void}\r\n     */\r\n    drawBars(peaks, channelIndex, start, end) {\r\n        return this.prepareDraw(\r\n            peaks,\r\n            channelIndex,\r\n            start,\r\n            end,\r\n            ({ absmax, hasMinVals, height, offsetY, halfH, peaks }) => {\r\n                // if drawBars was called within ws.empty we don't pass a start and\r\n                // don't want anything to happen\r\n                if (start === undefined) {\r\n                    return;\r\n                }\r\n                // Skip every other value if there are negatives.\r\n                const peakIndexScale = hasMinVals ? 2 : 1;\r\n                const length = peaks.length / peakIndexScale;\r\n                const bar = this.params.barWidth * this.params.pixelRatio;\r\n                const gap =\r\n                    this.params.barGap === null\r\n                        ? Math.max(this.params.pixelRatio, ~~(bar / 2))\r\n                        : Math.max(\r\n                            this.params.pixelRatio,\r\n                            this.params.barGap * this.params.pixelRatio\r\n                        );\r\n                const step = bar + gap;\r\n\r\n                const scale = length / this.width;\r\n                const first = start;\r\n                const last = end;\r\n                let i = first;\r\n\r\n                for (i; i < last; i += step) {\r\n                    const peak =\r\n                        peaks[Math.floor(i * scale * peakIndexScale)] || 0;\r\n                    let h = Math.round((peak / absmax) * halfH);\r\n\r\n                    /* in case of silences, allow the user to specify that we\r\n                     * always draw *something* (normally a 1px high bar) */\r\n                    if (h == 0 && this.params.barMinHeight)\r\n                        h = this.params.barMinHeight;\r\n\r\n                    this.fillRect(\r\n                        i + this.halfPixel,\r\n                        halfH - h + offsetY,\r\n                        bar + this.halfPixel,\r\n                        h * 2,\r\n                        this.barRadius\r\n                    );\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Draw a waveform\r\n     *\r\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\r\n     * for split channel rendering\r\n     * @param {number} channelIndex The index of the current channel. Normally\r\n     * should be 0\r\n     * @param {number?} start The x-offset of the beginning of the area that\r\n     * should be rendered (If this isn't set only a flat line is rendered)\r\n     * @param {number?} end The x-offset of the end of the area that should be\r\n     * rendered\r\n     * @returns {void}\r\n     */\r\n    drawWave(peaks, channelIndex, start, end) {\r\n        return this.prepareDraw(\r\n            peaks,\r\n            channelIndex,\r\n            start,\r\n            end,\r\n            ({ absmax, hasMinVals, height, offsetY, halfH, peaks, channelIndex }) => {\r\n                if (!hasMinVals) {\r\n                    const reflectedPeaks = [];\r\n                    const len = peaks.length;\r\n                    let i = 0;\r\n                    for (i; i < len; i++) {\r\n                        reflectedPeaks[2 * i] = peaks[i];\r\n                        reflectedPeaks[2 * i + 1] = -peaks[i];\r\n                    }\r\n                    peaks = reflectedPeaks;\r\n                }\r\n\r\n                // if drawWave was called within ws.empty we don't pass a start and\r\n                // end and simply want a flat line\r\n                if (start !== undefined) {\r\n                    this.drawLine(peaks, absmax, halfH, offsetY, start, end, channelIndex);\r\n                }\r\n\r\n                // always draw a median line\r\n                this.fillRect(\r\n                    0,\r\n                    halfH + offsetY - this.halfPixel,\r\n                    this.width,\r\n                    this.halfPixel,\r\n                    this.barRadius\r\n                );\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Tell the canvas entries to render their portion of the waveform\r\n     *\r\n     * @param {number[]} peaks Peaks data\r\n     * @param {number} absmax Maximum peak value (absolute)\r\n     * @param {number} halfH Half the height of the waveform\r\n     * @param {number} offsetY Offset to the top\r\n     * @param {number} start The x-offset of the beginning of the area that\r\n     * should be rendered\r\n     * @param {number} end The x-offset of the end of the area that\r\n     * should be rendered\r\n     * @param {channelIndex} channelIndex The channel index of the line drawn\r\n     */\r\n    drawLine(peaks, absmax, halfH, offsetY, start, end, channelIndex) {\r\n        const { waveColor, progressColor } = this.params.splitChannelsOptions.channelColors[channelIndex] || {};\r\n        this.canvases.forEach((entry, i) => {\r\n            this.setFillStyles(entry, waveColor, progressColor);\r\n            entry.drawLines(peaks, absmax, halfH, offsetY, start, end);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Draw a rectangle on the multi-canvas\r\n     *\r\n     * @param {number} x X-position of the rectangle\r\n     * @param {number} y Y-position of the rectangle\r\n     * @param {number} width Width of the rectangle\r\n     * @param {number} height Height of the rectangle\r\n     * @param {number} radius Radius of the rectangle\r\n     */\r\n    fillRect(x, y, width, height, radius) {\r\n        const startCanvas = Math.floor(x / this.maxCanvasWidth);\r\n        const endCanvas = Math.min(\r\n            Math.ceil((x + width) / this.maxCanvasWidth) + 1,\r\n            this.canvases.length\r\n        );\r\n        let i = startCanvas;\r\n        for (i; i < endCanvas; i++) {\r\n            const entry = this.canvases[i];\r\n            const leftOffset = i * this.maxCanvasWidth;\r\n\r\n            const intersection = {\r\n                x1: Math.max(x, i * this.maxCanvasWidth),\r\n                y1: y,\r\n                x2: Math.min(\r\n                    x + width,\r\n                    i * this.maxCanvasWidth + entry.wave.width\r\n                ),\r\n                y2: y + height\r\n            };\r\n\r\n            if (intersection.x1 < intersection.x2) {\r\n                this.setFillStyles(entry);\r\n\r\n                entry.fillRects(\r\n                    intersection.x1 - leftOffset,\r\n                    intersection.y1,\r\n                    intersection.x2 - intersection.x1,\r\n                    intersection.y2 - intersection.y1,\r\n                    radius\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns whether to hide the channel from being drawn based on params.\r\n     *\r\n     * @param {number} channelIndex The index of the current channel.\r\n     * @returns {bool} True to hide the channel, false to draw.\r\n     */\r\n    hideChannel(channelIndex) {\r\n        return this.params.splitChannels && this.params.splitChannelsOptions.filterChannels.includes(channelIndex);\r\n    }\r\n\r\n    /**\r\n     * Performs preparation tasks and calculations which are shared by `drawBars`\r\n     * and `drawWave`\r\n     *\r\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for\r\n     * split channel rendering\r\n     * @param {number} channelIndex The index of the current channel. Normally\r\n     * should be 0\r\n     * @param {number?} start The x-offset of the beginning of the area that\r\n     * should be rendered. If this isn't set only a flat line is rendered\r\n     * @param {number?} end The x-offset of the end of the area that should be\r\n     * rendered\r\n     * @param {function} fn The render function to call, e.g. `drawWave`\r\n     * @param {number} drawIndex The index of the current channel after filtering.\r\n     * @returns {void}\r\n     */\r\n    prepareDraw(peaks, channelIndex, start, end, fn, drawIndex) {\r\n        return util.frame(() => {\r\n            // Split channels and call this function with the channelIndex set\r\n            if (peaks[0] instanceof Array) {\r\n                const channels = peaks;\r\n\r\n                if (this.params.splitChannels) {\r\n                    const filteredChannels =  channels.filter((c, i) => !this.hideChannel(i));\r\n                    if (!this.params.splitChannelsOptions.overlay) {\r\n                        this.setHeight(\r\n                            Math.max(filteredChannels.length, 1) *\r\n                                this.params.height *\r\n                                this.params.pixelRatio\r\n                        );\r\n                    }\r\n\r\n                    return channels.forEach((channelPeaks, i) =>\r\n                        this.prepareDraw(channelPeaks, i, start, end, fn, filteredChannels.indexOf(channelPeaks))\r\n                    );\r\n                }\r\n                peaks = channels[0];\r\n            }\r\n\r\n            // Return and do not draw channel peaks if hidden.\r\n            if (this.hideChannel(channelIndex)) {\r\n                return;\r\n            }\r\n\r\n            // calculate maximum modulation value, either from the barHeight\r\n            // parameter or if normalize=true from the largest value in the peak\r\n            // set\r\n            let absmax = 1 / this.params.barHeight;\r\n            if (this.params.normalize) {\r\n                const max = util.max(peaks);\r\n                const min = util.min(peaks);\r\n                absmax = -min > max ? -min : max;\r\n            }\r\n\r\n            // Bar wave draws the bottom only as a reflection of the top,\r\n            // so we don't need negative values\r\n            const hasMinVals = [].some.call(peaks, val => val < 0);\r\n            const height = this.params.height * this.params.pixelRatio;\r\n            const offsetY = height * drawIndex || 0;\r\n            const halfH = height / 2;\r\n\r\n            return fn({\r\n                absmax: absmax,\r\n                hasMinVals: hasMinVals,\r\n                height: height,\r\n                offsetY: offsetY,\r\n                halfH: halfH,\r\n                peaks: peaks,\r\n                channelIndex: channelIndex\r\n            });\r\n        })();\r\n    }\r\n\r\n    /**\r\n     * Set the fill styles for a certain entry (wave and progress)\r\n     *\r\n     * @param {CanvasEntry} entry Target entry\r\n     * @param {string} waveColor Wave color to draw this entry\r\n     * @param {string} progressColor Progress color to draw this entry\r\n     */\r\n    setFillStyles(entry, waveColor = this.params.waveColor, progressColor = this.params.progressColor) {\r\n        entry.setFillStyles(waveColor, progressColor);\r\n    }\r\n\r\n    /**\r\n     * Return image data of the multi-canvas\r\n     *\r\n     * When using a `type` of `'blob'`, this will return a `Promise`.\r\n     *\r\n     * @param {string} format='image/png' An optional value of a format type.\r\n     * @param {number} quality=0.92 An optional value between 0 and 1.\r\n     * @param {string} type='dataURL' Either 'dataURL' or 'blob'.\r\n     * @return {string|string[]|Promise} When using the default `'dataURL'`\r\n     * `type` this returns a single data URL or an array of data URLs,\r\n     * one for each canvas. When using the `'blob'` `type` this returns a\r\n     * `Promise` that resolves with an array of `Blob` instances, one for each\r\n     * canvas.\r\n     */\r\n    getImage(format, quality, type) {\r\n        if (type === 'blob') {\r\n            return Promise.all(\r\n                this.canvases.map(entry => {\r\n                    return entry.getImage(format, quality, type);\r\n                })\r\n            );\r\n        } else if (type === 'dataURL') {\r\n            let images = this.canvases.map(entry =>\r\n                entry.getImage(format, quality, type)\r\n            );\r\n            return images.length > 1 ? images : images[0];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Render the new progress\r\n     *\r\n     * @param {number} position X-offset of progress position in pixels\r\n     */\r\n    updateProgress(position) {\r\n        this.style(this.progressWave, { width: position + 'px' });\r\n    }\r\n}\r\n","import MediaElement from './mediaelement';\r\n\r\n/**\r\n * MediaElementWebAudio backend: load audio via an HTML5 audio tag, but playback with the WebAudio API.\r\n * The advantage here is that the html5 <audio> tag can perform range requests on the server and not\r\n * buffer the entire file in one request, and you still get the filtering and scripting functionality\r\n * of the webaudio API.\r\n * Note that in order to use range requests and prevent buffering, you must provide peak data.\r\n *\r\n * @since 3.2.0\r\n */\r\nexport default class MediaElementWebAudio extends MediaElement {\r\n    /**\r\n     * Construct the backend\r\n     *\r\n     * @param {WavesurferParams} params Wavesurfer parameters\r\n     */\r\n    constructor(params) {\r\n        super(params);\r\n        /** @private */\r\n        this.params = params;\r\n        /** @private */\r\n        this.sourceMediaElement = null;\r\n    }\r\n\r\n    /**\r\n     * Initialise the backend, called in `wavesurfer.createBackend()`\r\n     */\r\n    init() {\r\n        this.setPlaybackRate(this.params.audioRate);\r\n        this.createTimer();\r\n        this.createVolumeNode();\r\n        this.createScriptNode();\r\n        this.createAnalyserNode();\r\n    }\r\n    /**\r\n     * Private method called by both `load` (from url)\r\n     * and `loadElt` (existing media element) methods.\r\n     *\r\n     * @param {HTMLMediaElement} media HTML5 Audio or Video element\r\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\r\n     * @param {string} preload HTML 5 preload attribute value\r\n     * @private\r\n     */\r\n    _load(media, peaks, preload) {\r\n        super._load(media, peaks, preload);\r\n        this.createMediaElementSource(media);\r\n    }\r\n\r\n    /**\r\n     * Create MediaElementSource node\r\n     *\r\n     * @since 3.2.0\r\n     * @param {HTMLMediaElement} mediaElement HTML5 Audio to load\r\n     */\r\n    createMediaElementSource(mediaElement) {\r\n        this.sourceMediaElement = this.ac.createMediaElementSource(\r\n            mediaElement\r\n        );\r\n        this.sourceMediaElement.connect(this.analyser);\r\n    }\r\n\r\n    play(start, end) {\r\n        this.resumeAudioContext();\r\n        return super.play(start, end);\r\n    }\r\n\r\n    /**\r\n     * This is called when wavesurfer is destroyed\r\n     *\r\n     */\r\n    destroy() {\r\n        super.destroy();\r\n\r\n        this.destroyWebAudio();\r\n    }\r\n}\r\n","import WebAudio from './webaudio';\r\nimport * as util from './util';\r\n\r\n/**\r\n * MediaElement backend\r\n */\r\nexport default class MediaElement extends WebAudio {\r\n    /**\r\n     * Construct the backend\r\n     *\r\n     * @param {WavesurferParams} params Wavesurfer parameters\r\n     */\r\n    constructor(params) {\r\n        super(params);\r\n        /** @private */\r\n        this.params = params;\r\n\r\n        /**\r\n         * Initially a dummy media element to catch errors. Once `_load` is\r\n         * called, this will contain the actual `HTMLMediaElement`.\r\n         * @private\r\n         */\r\n        this.media = {\r\n            currentTime: 0,\r\n            duration: 0,\r\n            paused: true,\r\n            playbackRate: 1,\r\n            play() {},\r\n            pause() {},\r\n            volume: 0\r\n        };\r\n\r\n        /** @private */\r\n        this.mediaType = params.mediaType.toLowerCase();\r\n        /** @private */\r\n        this.elementPosition = params.elementPosition;\r\n        /** @private */\r\n        this.peaks = null;\r\n        /** @private */\r\n        this.playbackRate = 1;\r\n        /** @private */\r\n        this.volume = 1;\r\n        /** @private */\r\n        this.isMuted = false;\r\n        /** @private */\r\n        this.buffer = null;\r\n        /** @private */\r\n        this.onPlayEnd = null;\r\n        /** @private */\r\n        this.mediaListeners = {};\r\n    }\r\n\r\n    /**\r\n     * Initialise the backend, called in `wavesurfer.createBackend()`\r\n     */\r\n    init() {\r\n        this.setPlaybackRate(this.params.audioRate);\r\n        this.createTimer();\r\n    }\r\n\r\n    /**\r\n     * Attach event listeners to media element.\r\n     */\r\n    _setupMediaListeners() {\r\n        this.mediaListeners.error = () => {\r\n            this.fireEvent('error', 'Error loading media element');\r\n        };\r\n        this.mediaListeners.canplay = () => {\r\n            this.fireEvent('canplay');\r\n        };\r\n        this.mediaListeners.ended = () => {\r\n            this.fireEvent('finish');\r\n        };\r\n        // listen to and relay play, pause and seeked events to enable\r\n        // playback control from the external media element\r\n        this.mediaListeners.play = () => {\r\n            this.fireEvent('play');\r\n        };\r\n        this.mediaListeners.pause = () => {\r\n            this.fireEvent('pause');\r\n        };\r\n        this.mediaListeners.seeked = event => {\r\n            this.fireEvent('seek');\r\n        };\r\n        this.mediaListeners.volumechange = event => {\r\n            this.isMuted = this.media.muted;\r\n            if (this.isMuted) {\r\n                this.volume = 0;\r\n            } else {\r\n                this.volume = this.media.volume;\r\n            }\r\n            this.fireEvent('volume');\r\n        };\r\n\r\n        // reset event listeners\r\n        Object.keys(this.mediaListeners).forEach(id => {\r\n            this.media.removeEventListener(id, this.mediaListeners[id]);\r\n            this.media.addEventListener(id, this.mediaListeners[id]);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Create a timer to provide a more precise `audioprocess` event.\r\n     */\r\n    createTimer() {\r\n        const onAudioProcess = () => {\r\n            if (this.isPaused()) {\r\n                return;\r\n            }\r\n            this.fireEvent('audioprocess', this.getCurrentTime());\r\n\r\n            // Call again in the next frame\r\n            util.frame(onAudioProcess)();\r\n        };\r\n\r\n        this.on('play', onAudioProcess);\r\n\r\n        // Update the progress one more time to prevent it from being stuck in\r\n        // case of lower framerates\r\n        this.on('pause', () => {\r\n            this.fireEvent('audioprocess', this.getCurrentTime());\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Create media element with url as its source,\r\n     * and append to container element.\r\n     *\r\n     * @param {string} url Path to media file\r\n     * @param {HTMLElement} container HTML element\r\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\r\n     * @param {string} preload HTML 5 preload attribute value\r\n     * @throws Will throw an error if the `url` argument is not a valid media\r\n     * element.\r\n     */\r\n    load(url, container, peaks, preload) {\r\n        const media = document.createElement(this.mediaType);\r\n        media.controls = this.params.mediaControls;\r\n        media.autoplay = this.params.autoplay || false;\r\n        media.preload = preload == null ? 'auto' : preload;\r\n        media.src = url;\r\n        media.style.width = '100%';\r\n\r\n        const prevMedia = container.querySelector(this.mediaType);\r\n        if (prevMedia) {\r\n            container.removeChild(prevMedia);\r\n        }\r\n        container.appendChild(media);\r\n\r\n        this._load(media, peaks, preload);\r\n    }\r\n\r\n    /**\r\n     * Load existing media element.\r\n     *\r\n     * @param {HTMLMediaElement} elt HTML5 Audio or Video element\r\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\r\n     */\r\n    loadElt(elt, peaks) {\r\n        elt.controls = this.params.mediaControls;\r\n        elt.autoplay = this.params.autoplay || false;\r\n\r\n        this._load(elt, peaks, elt.preload);\r\n    }\r\n\r\n    /**\r\n     * Method called by both `load` (from url)\r\n     * and `loadElt` (existing media element) methods.\r\n     *\r\n     * @param {HTMLMediaElement} media HTML5 Audio or Video element\r\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\r\n     * @param {string} preload HTML 5 preload attribute value\r\n     * @throws Will throw an error if the `media` argument is not a valid media\r\n     * element.\r\n     * @private\r\n     */\r\n    _load(media, peaks, preload) {\r\n        // verify media element is valid\r\n        if (\r\n            !(media instanceof HTMLMediaElement) ||\r\n            typeof media.addEventListener === 'undefined'\r\n        ) {\r\n            throw new Error('media parameter is not a valid media element');\r\n        }\r\n\r\n        // load must be called manually on iOS, otherwise peaks won't draw\r\n        // until a user interaction triggers load --> 'ready' event\r\n        //\r\n        // note that we avoid calling media.load here when given peaks and preload == 'none'\r\n        // as this almost always triggers some browser fetch of the media.\r\n        if (typeof media.load == 'function' && !(peaks && preload == 'none')) {\r\n            // Resets the media element and restarts the media resource. Any\r\n            // pending events are discarded. How much media data is fetched is\r\n            // still affected by the preload attribute.\r\n            media.load();\r\n        }\r\n\r\n        this.media = media;\r\n        this._setupMediaListeners();\r\n        this.peaks = peaks;\r\n        this.onPlayEnd = null;\r\n        this.buffer = null;\r\n        this.isMuted = media.muted;\r\n        this.setPlaybackRate(this.playbackRate);\r\n        this.setVolume(this.volume);\r\n    }\r\n\r\n    /**\r\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\r\n     *\r\n     * @return {boolean} Media paused or not\r\n     */\r\n    isPaused() {\r\n        return !this.media || this.media.paused;\r\n    }\r\n\r\n    /**\r\n     * Used by `wavesurfer.getDuration()`\r\n     *\r\n     * @return {number} Duration\r\n     */\r\n    getDuration() {\r\n        if (this.explicitDuration) {\r\n            return this.explicitDuration;\r\n        }\r\n        let duration = (this.buffer || this.media).duration;\r\n        if (duration >= Infinity) {\r\n            // streaming audio\r\n            duration = this.media.seekable.end(0);\r\n        }\r\n        return duration;\r\n    }\r\n\r\n    /**\r\n     * Returns the current time in seconds relative to the audio-clip's\r\n     * duration.\r\n     *\r\n     * @return {number} Current time\r\n     */\r\n    getCurrentTime() {\r\n        return this.media && this.media.currentTime;\r\n    }\r\n\r\n    /**\r\n     * Get the position from 0 to 1\r\n     *\r\n     * @return {number} Current position\r\n     */\r\n    getPlayedPercents() {\r\n        return this.getCurrentTime() / this.getDuration() || 0;\r\n    }\r\n\r\n    /**\r\n     * Get the audio source playback rate.\r\n     *\r\n     * @return {number} Playback rate\r\n     */\r\n    getPlaybackRate() {\r\n        return this.playbackRate || this.media.playbackRate;\r\n    }\r\n\r\n    /**\r\n     * Set the audio source playback rate.\r\n     *\r\n     * @param {number} value Playback rate\r\n     */\r\n    setPlaybackRate(value) {\r\n        this.playbackRate = value || 1;\r\n        this.media.playbackRate = this.playbackRate;\r\n    }\r\n\r\n    /**\r\n     * Used by `wavesurfer.seekTo()`\r\n     *\r\n     * @param {number} start Position to start at in seconds\r\n     */\r\n    seekTo(start) {\r\n        if (start != null) {\r\n            this.media.currentTime = start;\r\n        }\r\n        this.clearPlayEnd();\r\n    }\r\n\r\n    /**\r\n     * Plays the loaded audio region.\r\n     *\r\n     * @param {number} start Start offset in seconds, relative to the beginning\r\n     * of a clip.\r\n     * @param {number} end When to stop, relative to the beginning of a clip.\r\n     * @emits MediaElement#play\r\n     * @return {Promise} Result\r\n     */\r\n    play(start, end) {\r\n        this.seekTo(start);\r\n        const promise = this.media.play();\r\n        end && this.setPlayEnd(end);\r\n\r\n        return promise;\r\n    }\r\n\r\n    /**\r\n     * Pauses the loaded audio.\r\n     *\r\n     * @emits MediaElement#pause\r\n     * @return {Promise} Result\r\n     */\r\n    pause() {\r\n        let promise;\r\n\r\n        if (this.media) {\r\n            promise = this.media.pause();\r\n        }\r\n        this.clearPlayEnd();\r\n\r\n        return promise;\r\n    }\r\n\r\n    /**\r\n     * Set the play end\r\n     *\r\n     * @param {number} end Where to end\r\n     */\r\n    setPlayEnd(end) {\r\n        this.clearPlayEnd();\r\n\r\n        this._onPlayEnd = time => {\r\n            if (time >= end) {\r\n                this.pause();\r\n                this.seekTo(end);\r\n            }\r\n        };\r\n        this.on('audioprocess', this._onPlayEnd);\r\n    }\r\n\r\n    /** @private */\r\n    clearPlayEnd() {\r\n        if (this._onPlayEnd) {\r\n            this.un('audioprocess', this._onPlayEnd);\r\n            this._onPlayEnd = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Compute the max and min value of the waveform when broken into\r\n     * <length> subranges.\r\n     *\r\n     * @param {number} length How many subranges to break the waveform into.\r\n     * @param {number} first First sample in the required range.\r\n     * @param {number} last Last sample in the required range.\r\n     * @return {number[]|Number.<Array[]>} Array of 2*<length> peaks or array of\r\n     * arrays of peaks consisting of (max, min) values for each subrange.\r\n     */\r\n    getPeaks(length, first, last) {\r\n        if (this.buffer) {\r\n            return super.getPeaks(length, first, last);\r\n        }\r\n        return this.peaks || [];\r\n    }\r\n\r\n    /**\r\n     * Set the sink id for the media player\r\n     *\r\n     * @param {string} deviceId String value representing audio device id.\r\n     * @returns {Promise} A Promise that resolves to `undefined` when there\r\n     * are no errors.\r\n     */\r\n    setSinkId(deviceId) {\r\n        if (deviceId) {\r\n            if (!this.media.setSinkId) {\r\n                return Promise.reject(\r\n                    new Error('setSinkId is not supported in your browser')\r\n                );\r\n            }\r\n            return this.media.setSinkId(deviceId);\r\n        }\r\n\r\n        return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\r\n    }\r\n\r\n    /**\r\n     * Get the current volume\r\n     *\r\n     * @return {number} value A floating point value between 0 and 1.\r\n     */\r\n    getVolume() {\r\n        return this.volume;\r\n    }\r\n\r\n    /**\r\n     * Set the audio volume\r\n     *\r\n     * @param {number} value A floating point value between 0 and 1.\r\n     */\r\n    setVolume(value) {\r\n        this.volume = value;\r\n        // no need to change when it's already at that volume\r\n        if (this.media.volume !== this.volume) {\r\n            this.media.volume = this.volume;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Enable or disable muted audio\r\n     *\r\n     * @since 4.0.0\r\n     * @param {boolean} muted Specify `true` to mute audio.\r\n     */\r\n    setMute(muted) {\r\n        // This causes a volume change to be emitted too through the\r\n        // volumechange event listener.\r\n        this.isMuted = this.media.muted = muted;\r\n    }\r\n\r\n    /**\r\n     * This is called when wavesurfer is destroyed\r\n     *\r\n     */\r\n    destroy() {\r\n        this.pause();\r\n        this.unAll();\r\n        this.destroyed = true;\r\n\r\n        // cleanup media event listeners\r\n        Object.keys(this.mediaListeners).forEach(id => {\r\n            if (this.media) {\r\n                this.media.removeEventListener(id, this.mediaListeners[id]);\r\n            }\r\n        });\r\n\r\n        if (\r\n            this.params.removeMediaElementOnDestroy &&\r\n            this.media &&\r\n            this.media.parentNode\r\n        ) {\r\n            this.media.parentNode.removeChild(this.media);\r\n        }\r\n\r\n        this.media = null;\r\n    }\r\n}\r\n","/**\r\n * Caches the decoded peaks data to improve rendering speed for large audio\r\n *\r\n * Is used if the option parameter `partialRender` is set to `true`\r\n */\r\nexport default class PeakCache {\r\n    /**\r\n     * Instantiate cache\r\n     */\r\n    constructor() {\r\n        this.clearPeakCache();\r\n    }\r\n\r\n    /**\r\n     * Empty the cache\r\n     */\r\n    clearPeakCache() {\r\n        /**\r\n         * Flat array with entries that are always in pairs to mark the\r\n         * beginning and end of each subrange.  This is a convenience so we can\r\n         * iterate over the pairs for easy set difference operations.\r\n         * @private\r\n         */\r\n        this.peakCacheRanges = [];\r\n        /**\r\n         * Length of the entire cachable region, used for resetting the cache\r\n         * when this changes (zoom events, for instance).\r\n         * @private\r\n         */\r\n        this.peakCacheLength = -1;\r\n    }\r\n\r\n    /**\r\n     * Add a range of peaks to the cache\r\n     *\r\n     * @param {number} length The length of the range\r\n     * @param {number} start The x offset of the start of the range\r\n     * @param {number} end The x offset of the end of the range\r\n     * @return {Number.<Array[]>} Array with arrays of numbers\r\n     */\r\n    addRangeToPeakCache(length, start, end) {\r\n        if (length != this.peakCacheLength) {\r\n            this.clearPeakCache();\r\n            this.peakCacheLength = length;\r\n        }\r\n\r\n        // Return ranges that weren't in the cache before the call.\r\n        let uncachedRanges = [];\r\n        let i = 0;\r\n        // Skip ranges before the current start.\r\n        while (\r\n            i < this.peakCacheRanges.length &&\r\n            this.peakCacheRanges[i] < start\r\n        ) {\r\n            i++;\r\n        }\r\n        // If |i| is even, |start| falls after an existing range.  Otherwise,\r\n        // |start| falls between an existing range, and the uncached region\r\n        // starts when we encounter the next node in |peakCacheRanges| or\r\n        // |end|, whichever comes first.\r\n        if (i % 2 == 0) {\r\n            uncachedRanges.push(start);\r\n        }\r\n        while (\r\n            i < this.peakCacheRanges.length &&\r\n            this.peakCacheRanges[i] <= end\r\n        ) {\r\n            uncachedRanges.push(this.peakCacheRanges[i]);\r\n            i++;\r\n        }\r\n        // If |i| is even, |end| is after all existing ranges.\r\n        if (i % 2 == 0) {\r\n            uncachedRanges.push(end);\r\n        }\r\n\r\n        // Filter out the 0-length ranges.\r\n        uncachedRanges = uncachedRanges.filter((item, pos, arr) => {\r\n            if (pos == 0) {\r\n                return item != arr[pos + 1];\r\n            } else if (pos == arr.length - 1) {\r\n                return item != arr[pos - 1];\r\n            }\r\n            return item != arr[pos - 1] && item != arr[pos + 1];\r\n        });\r\n\r\n        // Merge the two ranges together, uncachedRanges will either contain\r\n        // wholly new points, or duplicates of points in peakCacheRanges.  If\r\n        // duplicates are detected, remove both and extend the range.\r\n        this.peakCacheRanges = this.peakCacheRanges.concat(uncachedRanges);\r\n        this.peakCacheRanges = this.peakCacheRanges\r\n            .sort((a, b) => a - b)\r\n            .filter((item, pos, arr) => {\r\n                if (pos == 0) {\r\n                    return item != arr[pos + 1];\r\n                } else if (pos == arr.length - 1) {\r\n                    return item != arr[pos - 1];\r\n                }\r\n                return item != arr[pos - 1] && item != arr[pos + 1];\r\n            });\r\n\r\n        // Push the uncached ranges into an array of arrays for ease of\r\n        // iteration in the functions that call this.\r\n        const uncachedRangePairs = [];\r\n        for (i = 0; i < uncachedRanges.length; i += 2) {\r\n            uncachedRangePairs.push([uncachedRanges[i], uncachedRanges[i + 1]]);\r\n        }\r\n\r\n        return uncachedRangePairs;\r\n    }\r\n\r\n    /**\r\n     * For testing\r\n     *\r\n     * @return {Number.<Array[]>} Array with arrays of numbers\r\n     */\r\n    getCacheRanges() {\r\n        const peakCacheRangePairs = [];\r\n        let i;\r\n        for (i = 0; i < this.peakCacheRanges.length; i += 2) {\r\n            peakCacheRangePairs.push([\r\n                this.peakCacheRanges[i],\r\n                this.peakCacheRanges[i + 1]\r\n            ]);\r\n        }\r\n        return peakCacheRangePairs;\r\n    }\r\n}\r\n","import Observer from './observer';\r\n\r\n/**\r\n * Perform an ajax request using `XMLHttpRequest`.\r\n *\r\n * @deprecated Use `util.fetchFile` instead.\r\n *\r\n * @param {Object} options AJAX options to use. See example below for options.\r\n * @returns {Observer} Observer instance\r\n * @example\r\n * // default options\r\n * let options = {\r\n *     method: 'GET',\r\n *     url: undefined,\r\n *     responseType: 'json',\r\n *     xhr: {}\r\n * };\r\n *\r\n * // override default options\r\n * options.url = '../media/demo.wav';\r\n * options.responseType = 'arraybuffer';\r\n * options.xhr = {\r\n *     requestHeaders: [\r\n *         {\r\n *             key: 'Authorization',\r\n *             value: 'my-token'\r\n *         }\r\n *     ],\r\n *     withCredentials: true\r\n * };\r\n *\r\n * // make ajax call\r\n * let ajaxCall = util.ajax(options);\r\n * ajaxCall.on('progress', e => {\r\n *     console.log('progress', e);\r\n * });\r\n * ajaxCall.on('success', (data, e) => {\r\n *     console.log('success!', data);\r\n * });\r\n * ajaxCall.on('error', e => {\r\n *     console.warn('ajax error: ' + e.target.statusText);\r\n * });\r\n */\r\nexport default function ajax(options) {\r\n    const instance = new Observer();\r\n    const xhr = new XMLHttpRequest();\r\n    let fired100 = false;\r\n    xhr.open(options.method || 'GET', options.url, true);\r\n    xhr.responseType = options.responseType || 'json';\r\n\r\n    if (options.xhr) {\r\n        if (options.xhr.requestHeaders) {\r\n            // add custom request headers\r\n            options.xhr.requestHeaders.forEach(header => {\r\n                xhr.setRequestHeader(header.key, header.value);\r\n            });\r\n        }\r\n        if (options.xhr.withCredentials) {\r\n            // use credentials\r\n            xhr.withCredentials = true;\r\n        }\r\n    }\r\n\r\n    xhr.addEventListener('progress', e => {\r\n        instance.fireEvent('progress', e);\r\n        if (e.lengthComputable && e.loaded == e.total) {\r\n            fired100 = true;\r\n        }\r\n    });\r\n    xhr.addEventListener('load', e => {\r\n        if (!fired100) {\r\n            instance.fireEvent('progress', e);\r\n        }\r\n        instance.fireEvent('load', e);\r\n        if (200 == xhr.status || 206 == xhr.status) {\r\n            instance.fireEvent('success', xhr.response, e);\r\n        } else {\r\n            instance.fireEvent('error', e);\r\n        }\r\n    });\r\n    xhr.addEventListener('error', e => instance.fireEvent('error', e));\r\n    xhr.send();\r\n    instance.xhr = xhr;\r\n    return instance;\r\n}\r\n","/**\r\n * @since 3.0.0\r\n */\r\n\r\nimport Observer from './observer';\r\n\r\nclass ProgressHandler {\r\n    /**\r\n     * Instantiate ProgressHandler\r\n     *\r\n     * @param {Observer} instance The `fetchFile` observer instance.\r\n     * @param {Number} contentLength Content length.\r\n     * @param {Response} response Response object.\r\n     */\r\n    constructor(instance, contentLength, response) {\r\n        this.instance = instance;\r\n        this.instance._reader = response.body.getReader();\r\n\r\n        this.total = parseInt(contentLength, 10);\r\n        this.loaded = 0;\r\n    }\r\n\r\n    /**\r\n     * A method that is called once, immediately after the `ReadableStream``\r\n     * is constructed.\r\n     *\r\n     * @param {ReadableStreamDefaultController} controller Controller instance\r\n     *     used to control the stream.\r\n     */\r\n    start(controller) {\r\n        const read = () => {\r\n            // instance._reader.read() returns a promise that resolves\r\n            // when a value has been received\r\n            this.instance._reader\r\n                .read()\r\n                .then(({ done, value }) => {\r\n                    // result objects contain two properties:\r\n                    // done  - true if the stream has already given you all its data.\r\n                    // value - some data. Always undefined when done is true.\r\n                    if (done) {\r\n                        // ensure onProgress called when content-length=0\r\n                        if (this.total === 0) {\r\n                            this.instance.onProgress.call(this.instance, {\r\n                                loaded: this.loaded,\r\n                                total: this.total,\r\n                                lengthComputable: false\r\n                            });\r\n                        }\r\n                        // no more data needs to be consumed, close the stream\r\n                        controller.close();\r\n                        return;\r\n                    }\r\n\r\n                    this.loaded += value.byteLength;\r\n                    this.instance.onProgress.call(this.instance, {\r\n                        loaded: this.loaded,\r\n                        total: this.total,\r\n                        lengthComputable: !(this.total === 0)\r\n                    });\r\n                    // enqueue the next data chunk into our target stream\r\n                    controller.enqueue(value);\r\n                    read();\r\n                })\r\n                .catch(error => {\r\n                    controller.error(error);\r\n                });\r\n        };\r\n\r\n        read();\r\n    }\r\n}\r\n\r\n/**\r\n * Load a file using `fetch`.\r\n *\r\n * @param {object} options Request options to use. See example below.\r\n * @returns {Observer} Observer instance\r\n * @example\r\n * // default options\r\n * let options = {\r\n *     url: undefined,\r\n *     method: 'GET',\r\n *     mode: 'cors',\r\n *     credentials: 'same-origin',\r\n *     cache: 'default',\r\n *     responseType: 'json',\r\n *     requestHeaders: [],\r\n *     redirect: 'follow',\r\n *     referrer: 'client'\r\n * };\r\n *\r\n * // override some options\r\n * options.url = '../media/demo.wav';\r\n\r\n * // available types: 'arraybuffer', 'blob', 'json' or 'text'\r\n * options.responseType = 'arraybuffer';\r\n *\r\n * // make fetch call\r\n * let request = util.fetchFile(options);\r\n *\r\n * // listen for events\r\n * request.on('progress', e => {\r\n *     console.log('progress', e);\r\n * });\r\n *\r\n * request.on('success', data => {\r\n *     console.log('success!', data);\r\n * });\r\n *\r\n * request.on('error', e => {\r\n *     console.warn('fetchFile error: ', e);\r\n * });\r\n */\r\nexport default function fetchFile(options) {\r\n    if (!options) {\r\n        throw new Error('fetch options missing');\r\n    } else if (!options.url) {\r\n        throw new Error('fetch url missing');\r\n    }\r\n    const instance = new Observer();\r\n    const fetchHeaders = new Headers();\r\n    const fetchRequest = new Request(options.url);\r\n\r\n    // add ability to abort\r\n    instance.controller = new AbortController();\r\n\r\n    // check if headers have to be added\r\n    if (options && options.requestHeaders) {\r\n        // add custom request headers\r\n        options.requestHeaders.forEach(header => {\r\n            fetchHeaders.append(header.key, header.value);\r\n        });\r\n    }\r\n\r\n    // parse fetch options\r\n    const responseType = options.responseType || 'json';\r\n    const fetchOptions = {\r\n        method: options.method || 'GET',\r\n        headers: fetchHeaders,\r\n        mode: options.mode || 'cors',\r\n        credentials: options.credentials || 'same-origin',\r\n        cache: options.cache || 'default',\r\n        redirect: options.redirect || 'follow',\r\n        referrer: options.referrer || 'client',\r\n        signal: instance.controller.signal\r\n    };\r\n\r\n    fetch(fetchRequest, fetchOptions)\r\n        .then(response => {\r\n            // store response reference\r\n            instance.response = response;\r\n\r\n            let progressAvailable = true;\r\n            if (!response.body) {\r\n                // ReadableStream is not yet supported in this browser\r\n                // see https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream\r\n                progressAvailable = false;\r\n            }\r\n\r\n            // Server must send CORS header \"Access-Control-Expose-Headers: content-length\"\r\n            const contentLength = response.headers.get('content-length');\r\n            if (contentLength === null) {\r\n                // Content-Length server response header missing.\r\n                // Don't evaluate download progress if we can't compare against a total size\r\n                // see https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Access-Control-Expose-Headers\r\n                progressAvailable = false;\r\n            }\r\n\r\n            if (!progressAvailable) {\r\n                // not able to check download progress so skip it\r\n                return response;\r\n            }\r\n\r\n            // fire progress event when during load\r\n            instance.onProgress = e => {\r\n                instance.fireEvent('progress', e);\r\n            };\r\n\r\n            return new Response(\r\n                new ReadableStream(\r\n                    new ProgressHandler(instance, contentLength, response)\r\n                ),\r\n                fetchOptions\r\n            );\r\n        })\r\n        .then(response => {\r\n            let errMsg;\r\n            if (response.ok) {\r\n                switch (responseType) {\r\n                    case 'arraybuffer':\r\n                        return response.arrayBuffer();\r\n\r\n                    case 'json':\r\n                        return response.json();\r\n\r\n                    case 'blob':\r\n                        return response.blob();\r\n\r\n                    case 'text':\r\n                        return response.text();\r\n\r\n                    default:\r\n                        errMsg = 'Unknown responseType: ' + responseType;\r\n                        break;\r\n                }\r\n            }\r\n            if (!errMsg) {\r\n                errMsg = 'HTTP error status: ' + response.status;\r\n            }\r\n            throw new Error(errMsg);\r\n        })\r\n        .then(response => {\r\n            instance.fireEvent('success', response);\r\n        })\r\n        .catch(error => {\r\n            instance.fireEvent('error', error);\r\n        });\r\n\r\n    // return the fetch request\r\n    instance.fetchRequest = fetchRequest;\r\n    return instance;\r\n}\r\n","import reqAnimationFrame from './request-animation-frame';\r\n\r\n/**\r\n * Create a function which will be called at the next requestAnimationFrame\r\n * cycle\r\n *\r\n * @param {function} func The function to call\r\n *\r\n * @return {func} The function wrapped within a requestAnimationFrame\r\n */\r\nexport default function frame(func) {\r\n    return (...args) => reqAnimationFrame(() => func(...args));\r\n}\r\n","/**\r\n * Get a random prefixed ID\r\n *\r\n * @param {String} prefix Prefix to use. Default is `'wavesurfer_'`.\r\n * @returns {String} Random prefixed ID\r\n * @example\r\n * console.log(getId()); // logs 'wavesurfer_b5pors4ru6g'\r\n *\r\n * let prefix = 'foo-';\r\n * console.log(getId(prefix)); // logs 'foo-b5pors4ru6g'\r\n */\r\nexport default function getId(prefix) {\r\n    if (prefix === undefined) {\r\n        prefix = 'wavesurfer_';\r\n    }\r\n    return (\r\n        prefix +\r\n        Math.random()\r\n            .toString(32)\r\n            .substring(2)\r\n    );\r\n}\r\n","export { default as ajax } from './ajax';\r\nexport { default as getId } from './get-id';\r\nexport { default as max } from './max';\r\nexport { default as min } from './min';\r\nexport { default as Observer } from './observer';\r\nexport { default as style } from './style';\r\nexport { default as requestAnimationFrame } from './request-animation-frame';\r\nexport { default as frame } from './frame';\r\nexport { default as debounce } from 'debounce';\r\nexport { default as preventClick } from './prevent-click';\r\nexport { default as fetchFile } from './fetch';\r\n","/**\r\n * Get the largest value\r\n *\r\n * @param   {Array} values Array of numbers\r\n * @returns {Number} Largest number found\r\n * @example console.log(max([1, 2, 3])); // logs 3\r\n */\r\nexport default function max(values) {\r\n    let largest = -Infinity;\r\n    Object.keys(values).forEach(i => {\r\n        if (values[i] > largest) {\r\n            largest = values[i];\r\n        }\r\n    });\r\n    return largest;\r\n}\r\n","/**\r\n * Get the smallest value\r\n *\r\n * @param   {Array} values Array of numbers\r\n * @returns {Number} Smallest number found\r\n * @example console.log(min([1, 2, 3])); // logs 1\r\n */\r\nexport default function min(values) {\r\n    let smallest = Number(Infinity);\r\n    Object.keys(values).forEach(i => {\r\n        if (values[i] < smallest) {\r\n            smallest = values[i];\r\n        }\r\n    });\r\n    return smallest;\r\n}\r\n","/**\r\n * @typedef {Object} ListenerDescriptor\r\n * @property {string} name The name of the event\r\n * @property {function} callback The callback\r\n * @property {function} un The function to call to remove the listener\r\n */\r\n\r\n/**\r\n * Observer class\r\n */\r\nexport default class Observer {\r\n    /**\r\n     * Instantiate Observer\r\n     */\r\n    constructor() {\r\n        /**\r\n         * @private\r\n         * @todo Initialise the handlers here already and remove the conditional\r\n         * assignment in `on()`\r\n         */\r\n        this._disabledEventEmissions = [];\r\n        this.handlers = null;\r\n    }\r\n    /**\r\n     * Attach a handler function for an event.\r\n     *\r\n     * @param {string} event Name of the event to listen to\r\n     * @param {function} fn The callback to trigger when the event is fired\r\n     * @return {ListenerDescriptor} The event descriptor\r\n     */\r\n    on(event, fn) {\r\n        if (!this.handlers) {\r\n            this.handlers = {};\r\n        }\r\n\r\n        let handlers = this.handlers[event];\r\n        if (!handlers) {\r\n            handlers = this.handlers[event] = [];\r\n        }\r\n        handlers.push(fn);\r\n\r\n        // Return an event descriptor\r\n        return {\r\n            name: event,\r\n            callback: fn,\r\n            un: (e, fn) => this.un(e, fn)\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Remove an event handler.\r\n     *\r\n     * @param {string} event Name of the event the listener that should be\r\n     * removed listens to\r\n     * @param {function} fn The callback that should be removed\r\n     */\r\n    un(event, fn) {\r\n        if (!this.handlers) {\r\n            return;\r\n        }\r\n\r\n        const handlers = this.handlers[event];\r\n        let i;\r\n        if (handlers) {\r\n            if (fn) {\r\n                for (i = handlers.length - 1; i >= 0; i--) {\r\n                    if (handlers[i] == fn) {\r\n                        handlers.splice(i, 1);\r\n                    }\r\n                }\r\n            } else {\r\n                handlers.length = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Remove all event handlers.\r\n     */\r\n    unAll() {\r\n        this.handlers = null;\r\n    }\r\n\r\n    /**\r\n     * Attach a handler to an event. The handler is executed at most once per\r\n     * event type.\r\n     *\r\n     * @param {string} event The event to listen to\r\n     * @param {function} handler The callback that is only to be called once\r\n     * @return {ListenerDescriptor} The event descriptor\r\n     */\r\n    once(event, handler) {\r\n        const fn = (...args) => {\r\n            /*  eslint-disable no-invalid-this */\r\n            handler.apply(this, args);\r\n            /*  eslint-enable no-invalid-this */\r\n            setTimeout(() => {\r\n                this.un(event, fn);\r\n            }, 0);\r\n        };\r\n        return this.on(event, fn);\r\n    }\r\n\r\n    /**\r\n     * Disable firing a list of events by name. When specified, event handlers for any event type\r\n     * passed in here will not be called.\r\n     *\r\n     * @since 4.0.0\r\n     * @param {string[]} eventNames an array of event names to disable emissions for\r\n     * @example\r\n     * // disable seek and interaction events\r\n     * wavesurfer.setDisabledEventEmissions(['seek', 'interaction']);\r\n     */\r\n    setDisabledEventEmissions(eventNames) {\r\n        this._disabledEventEmissions = eventNames;\r\n    }\r\n\r\n    /**\r\n     * plugins borrow part of this class without calling the constructor,\r\n     * so we have to be careful about _disabledEventEmissions\r\n     */\r\n\r\n    _isDisabledEventEmission(event) {\r\n        return this._disabledEventEmissions && this._disabledEventEmissions.includes(event);\r\n    }\r\n\r\n    /**\r\n     * Manually fire an event\r\n     *\r\n     * @param {string} event The event to fire manually\r\n     * @param {...any} args The arguments with which to call the listeners\r\n     */\r\n    fireEvent(event, ...args) {\r\n        if (!this.handlers || this._isDisabledEventEmission(event)) {\r\n            return;\r\n        }\r\n\r\n        const handlers = this.handlers[event];\r\n        handlers &&\r\n            handlers.forEach(fn => {\r\n                fn(...args);\r\n            });\r\n    }\r\n}\r\n","/**\r\n * Stops propagation of click event and removes event listener\r\n *\r\n * @private\r\n * @param {object} event The click event\r\n */\r\nfunction preventClickHandler(event) {\r\n    event.stopPropagation();\r\n    document.body.removeEventListener('click', preventClickHandler, true);\r\n}\r\n\r\n/**\r\n * Starts listening for click event and prevent propagation\r\n *\r\n * @param {object} values Values\r\n */\r\nexport default function preventClick(values) {\r\n    document.body.addEventListener('click', preventClickHandler, true);\r\n}\r\n","/* eslint-disable valid-jsdoc */\r\n/**\r\n * Returns the `requestAnimationFrame` function for the browser, or a shim with\r\n * `setTimeout` if the function is not found\r\n *\r\n * @return {function} Available `requestAnimationFrame` function for the browser\r\n */\r\nexport default (\r\n    window.requestAnimationFrame ||\r\n    window.webkitRequestAnimationFrame ||\r\n    window.mozRequestAnimationFrame ||\r\n    window.oRequestAnimationFrame ||\r\n    window.msRequestAnimationFrame ||\r\n    ((callback, element) => setTimeout(callback, 1000 / 60))\r\n).bind(window);\r\n","/**\r\n * Apply a map of styles to an element\r\n *\r\n * @param {HTMLElement} el The element that the styles will be applied to\r\n * @param {Object} styles The map of propName: attribute, both are used as-is\r\n *\r\n * @return {HTMLElement} el\r\n */\r\nexport default function style(el, styles) {\r\n    Object.keys(styles).forEach(prop => {\r\n        if (el.style[prop] !== styles[prop]) {\r\n            el.style[prop] = styles[prop];\r\n        }\r\n    });\r\n    return el;\r\n}\r\n","import * as util from './util';\r\nimport MultiCanvas from './drawer.multicanvas';\r\nimport WebAudio from './webaudio';\r\nimport MediaElement from './mediaelement';\r\nimport PeakCache from './peakcache';\r\nimport MediaElementWebAudio from './mediaelement-webaudio';\r\n\r\n/*\r\n * This work is licensed under a BSD-3-Clause License.\r\n */\r\n\r\n/** @external {HTMLElement} https://developer.mozilla.org/en/docs/Web/API/HTMLElement */\r\n/** @external {OfflineAudioContext} https://developer.mozilla.org/en-US/docs/Web/API/OfflineAudioContext */\r\n/** @external {File} https://developer.mozilla.org/en-US/docs/Web/API/File */\r\n/** @external {Blob} https://developer.mozilla.org/en-US/docs/Web/API/Blob */\r\n/** @external {CanvasRenderingContext2D} https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D */\r\n/** @external {MediaStreamConstraints} https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamConstraints */\r\n/** @external {AudioNode} https://developer.mozilla.org/de/docs/Web/API/AudioNode */\r\n\r\n/**\r\n * @typedef {Object} WavesurferParams\r\n * @property {AudioContext} audioContext=null Use your own previously\r\n * initialized AudioContext or leave blank.\r\n * @property {number} audioRate=1 Speed at which to play audio. Lower number is\r\n * slower.\r\n * @property {ScriptProcessorNode} audioScriptProcessor=null Use your own previously\r\n * initialized ScriptProcessorNode or leave blank.\r\n * @property {boolean} autoCenter=true If a scrollbar is present, center the\r\n * waveform on current progress\r\n * @property {number} autoCenterRate=5 If autoCenter is active, rate at which the\r\n * waveform is centered\r\n * @property {boolean} autoCenterImmediately=false If autoCenter is active, immediately\r\n * center waveform on current progress\r\n * @property {string} backend='WebAudio' `'WebAudio'|'MediaElement'|'MediaElementWebAudio'` In most cases\r\n * you don't have to set this manually. MediaElement is a fallback for unsupported browsers.\r\n * MediaElementWebAudio allows to use WebAudio API also with big audio files, loading audio like with\r\n * MediaElement backend (HTML5 audio tag). You have to use the same methods of MediaElement backend for loading and\r\n * playback, giving also peaks, so the audio data are not decoded. In this way you can use WebAudio features, like filters,\r\n * also with audio with big duration. For example:\r\n * ` wavesurfer.load(url | HTMLMediaElement, peaks, preload, duration);\r\n *   wavesurfer.play();\r\n *   wavesurfer.setFilter(customFilter);\r\n * `\r\n * @property {string} backgroundColor=null Change background color of the\r\n * waveform container.\r\n * @property {number} barHeight=1 The height of the wave bars.\r\n * @property {number} barRadius=0 The radius of the wave bars. Makes bars rounded\r\n * @property {number} barGap=null The optional spacing between bars of the wave,\r\n * if not provided will be calculated in legacy format.\r\n * @property {number} barWidth=null Draw the waveform using bars.\r\n * @property {number} barMinHeight=null If specified, draw at least a bar of this height,\r\n * eliminating waveform gaps\r\n * @property {boolean} closeAudioContext=false Close and nullify all audio\r\n * contexts when the destroy method is called.\r\n * @property {!string|HTMLElement} container CSS selector or HTML element where\r\n * the waveform should be drawn. This is the only required parameter.\r\n * @property {string} cursorColor='#333' The fill color of the cursor indicating\r\n * the playhead position.\r\n * @property {number} cursorWidth=1 Measured in pixels.\r\n * @property {object} drawingContextAttributes={desynchronized: false} Drawing context\r\n * attributes.\r\n * @property {number} duration=null Optional audio length so pre-rendered peaks\r\n * can be display immediately for example.\r\n * @property {boolean} fillParent=true Whether to fill the entire container or\r\n * draw only according to `minPxPerSec`.\r\n * @property {boolean} forceDecode=false Force decoding of audio using web audio\r\n * when zooming to get a more detailed waveform.\r\n * @property {number} height=128 The height of the waveform. Measured in\r\n * pixels.\r\n * @property {boolean} hideScrollbar=false Whether to hide the horizontal\r\n * scrollbar when one would normally be shown.\r\n * @property {boolean} interact=true Whether the mouse interaction will be\r\n * enabled at initialization. You can switch this parameter at any time later\r\n * on.\r\n * @property {boolean} loopSelection=true (Use with regions plugin) Enable\r\n * looping of selected regions\r\n * @property {number} maxCanvasWidth=4000 Maximum width of a single canvas in\r\n * pixels, excluding a small overlap (2 * `pixelRatio`, rounded up to the next\r\n * even integer). If the waveform is longer than this value, additional canvases\r\n * will be used to render the waveform, which is useful for very large waveforms\r\n * that may be too wide for browsers to draw on a single canvas.\r\n * @property {boolean} mediaControls=false (Use with backend `MediaElement` or `MediaElementWebAudio`)\r\n * this enables the native controls for the media element\r\n * @property {string} mediaType='audio' (Use with backend `MediaElement` or `MediaElementWebAudio`)\r\n * `'audio'|'video'` ('video' only for `MediaElement`)\r\n * @property {number} minPxPerSec=20 Minimum number of pixels per second of\r\n * audio.\r\n * @property {boolean} normalize=false If true, normalize by the maximum peak\r\n * instead of 1.0.\r\n * @property {boolean} partialRender=false Use the PeakCache to improve\r\n * rendering speed of large waveforms\r\n * @property {number} pixelRatio=window.devicePixelRatio The pixel ratio used to\r\n * calculate display\r\n * @property {PluginDefinition[]} plugins=[] An array of plugin definitions to\r\n * register during instantiation, they will be directly initialised unless they\r\n * are added with the `deferInit` property set to true.\r\n * @property {string} progressColor='#555' The fill color of the part of the\r\n * waveform behind the cursor. When `progressColor` and `waveColor` are the same\r\n * the progress wave is not rendered at all.\r\n * @property {boolean} removeMediaElementOnDestroy=true Set to false to keep the\r\n * media element in the DOM when the player is destroyed. This is useful when\r\n * reusing an existing media element via the `loadMediaElement` method.\r\n * @property {Object} renderer=MultiCanvas Can be used to inject a custom\r\n * renderer.\r\n * @property {boolean|number} responsive=false If set to `true` resize the\r\n * waveform, when the window is resized. This is debounced with a `100ms`\r\n * timeout by default. If this parameter is a number it represents that timeout.\r\n * @property {boolean} rtl=false If set to `true`, renders waveform from\r\n * right-to-left.\r\n * @property {boolean} scrollParent=false Whether to scroll the container with a\r\n * lengthy waveform. Otherwise the waveform is shrunk to the container width\r\n * (see fillParent).\r\n * @property {number} skipLength=2 Number of seconds to skip with the\r\n * skipForward() and skipBackward() methods.\r\n * @property {boolean} splitChannels=false Render with separate waveforms for\r\n * the channels of the audio\r\n * @property {string} waveColor='#999' The fill color of the waveform after the\r\n * cursor.\r\n * @property {object} xhr={} XHR options. For example:\r\n * `let xhr = {\r\n *     cache: 'default',\r\n *     mode: 'cors',\r\n *     method: 'GET',\r\n *     credentials: 'same-origin',\r\n *     redirect: 'follow',\r\n *     referrer: 'client',\r\n *     headers: [\r\n *         {\r\n *             key: 'Authorization',\r\n *             value: 'my-token'\r\n *         }\r\n *     ]\r\n * };`\r\n */\r\n\r\n/**\r\n * @typedef {Object} PluginDefinition\r\n * @desc The Object used to describe a plugin\r\n * @example wavesurfer.addPlugin(pluginDefinition);\r\n * @property {string} name The name of the plugin, the plugin instance will be\r\n * added as a property to the wavesurfer instance under this name\r\n * @property {?Object} staticProps The properties that should be added to the\r\n * wavesurfer instance as static properties\r\n * @property {?boolean} deferInit Don't initialise plugin\r\n * automatically\r\n * @property {Object} params={} The plugin parameters, they are the first parameter\r\n * passed to the plugin class constructor function\r\n * @property {PluginClass} instance The plugin instance factory, is called with\r\n * the dependency specified in extends. Returns the plugin class.\r\n */\r\n\r\n/**\r\n * @interface PluginClass\r\n *\r\n * @desc This is the interface which is implemented by all plugin classes. Note\r\n * that this only turns into an observer after being passed through\r\n * `wavesurfer.addPlugin`.\r\n *\r\n * @extends {Observer}\r\n */\r\nclass PluginClass {\r\n    /**\r\n     * Plugin definition factory\r\n     *\r\n     * This function must be used to create a plugin definition which can be\r\n     * used by wavesurfer to correctly instantiate the plugin.\r\n     *\r\n     * It returns a `PluginDefinition` object representing the plugin.\r\n     *\r\n     * @param {Object} params={} The plugin params (specific to the plugin)\r\n     */\r\n    create(params) {}\r\n    /**\r\n     * Construct the plugin\r\n     *\r\n     * @param {Object} params={} The plugin params (specific to the plugin)\r\n     * @param {Object} ws The wavesurfer instance\r\n     */\r\n    constructor(params, ws) {}\r\n    /**\r\n     * Initialise the plugin\r\n     *\r\n     * Start doing something. This is called by\r\n     * `wavesurfer.initPlugin(pluginName)`\r\n     */\r\n    init() {}\r\n    /**\r\n     * Destroy the plugin instance\r\n     *\r\n     * Stop doing something. This is called by\r\n     * `wavesurfer.destroyPlugin(pluginName)`\r\n     */\r\n    destroy() {}\r\n}\r\n\r\n/**\r\n * WaveSurfer core library class\r\n *\r\n * @extends {Observer}\r\n * @example\r\n * const params = {\r\n *   container: '#waveform',\r\n *   waveColor: 'violet',\r\n *   progressColor: 'purple'\r\n * };\r\n *\r\n * // initialise like this\r\n * const wavesurfer = WaveSurfer.create(params);\r\n *\r\n * // or like this ...\r\n * const wavesurfer = new WaveSurfer(params);\r\n * wavesurfer.init();\r\n *\r\n * // load audio file\r\n * wavesurfer.load('example/media/demo.wav');\r\n */\r\nexport default class WaveSurfer extends util.Observer {\r\n    /** @private */\r\n    defaultParams = {\r\n        audioContext: null,\r\n        audioScriptProcessor: null,\r\n        audioRate: 1,\r\n        autoCenter: true,\r\n        autoCenterRate: 5,\r\n        autoCenterImmediately: false,\r\n        backend: 'WebAudio',\r\n        backgroundColor: null,\r\n        barHeight: 1,\r\n        barRadius: 0,\r\n        barGap: null,\r\n        barMinHeight: null,\r\n        container: null,\r\n        cursorColor: '#333',\r\n        cursorWidth: 1,\r\n        dragSelection: true,\r\n        drawingContextAttributes: {\r\n            // Boolean that hints the user agent to reduce the latency\r\n            // by desynchronizing the canvas paint cycle from the event\r\n            // loop\r\n            desynchronized: false\r\n        },\r\n        duration: null,\r\n        fillParent: true,\r\n        forceDecode: false,\r\n        height: 128,\r\n        hideScrollbar: false,\r\n        interact: true,\r\n        loopSelection: true,\r\n        maxCanvasWidth: 4000,\r\n        mediaContainer: null,\r\n        mediaControls: false,\r\n        mediaType: 'audio',\r\n        minPxPerSec: 20,\r\n        normalize: false,\r\n        partialRender: false,\r\n        pixelRatio:\r\n            window.devicePixelRatio || screen.deviceXDPI / screen.logicalXDPI,\r\n        plugins: [],\r\n        progressColor: '#555',\r\n        removeMediaElementOnDestroy: true,\r\n        renderer: MultiCanvas,\r\n        responsive: false,\r\n        rtl: false,\r\n        scrollParent: false,\r\n        skipLength: 2,\r\n        splitChannels: false,\r\n        splitChannelsOptions: {\r\n            overlay: false,\r\n            channelColors: {},\r\n            filterChannels: []\r\n        },\r\n        waveColor: '#999',\r\n        xhr: {}\r\n    };\r\n\r\n    /** @private */\r\n    backends = {\r\n        MediaElement,\r\n        WebAudio,\r\n        MediaElementWebAudio\r\n    };\r\n\r\n    /**\r\n     * Instantiate this class, call its `init` function and returns it\r\n     *\r\n     * @param {WavesurferParams} params The wavesurfer parameters\r\n     * @return {Object} WaveSurfer instance\r\n     * @example const wavesurfer = WaveSurfer.create(params);\r\n     */\r\n    static create(params) {\r\n        const wavesurfer = new WaveSurfer(params);\r\n        return wavesurfer.init();\r\n    }\r\n\r\n    /**\r\n     * The library version number is available as a static property of the\r\n     * WaveSurfer class\r\n     *\r\n     * @type {String}\r\n     * @example\r\n     * console.log('Using wavesurfer.js ' + WaveSurfer.VERSION);\r\n     */\r\n    static VERSION = __VERSION__;\r\n\r\n    /**\r\n     * Functions in the `util` property are available as a prototype property to\r\n     * all instances\r\n     *\r\n     * @type {Object}\r\n     * @example\r\n     * const wavesurfer = WaveSurfer.create(params);\r\n     * wavesurfer.util.style(myElement, { background: 'blue' });\r\n     */\r\n    util = util;\r\n\r\n    /**\r\n     * Functions in the `util` property are available as a static property of the\r\n     * WaveSurfer class\r\n     *\r\n     * @type {Object}\r\n     * @example\r\n     * WaveSurfer.util.style(myElement, { background: 'blue' });\r\n     */\r\n    static util = util;\r\n\r\n    /**\r\n     * Initialise wavesurfer instance\r\n     *\r\n     * @param {WavesurferParams} params Instantiation options for wavesurfer\r\n     * @example\r\n     * const wavesurfer = new WaveSurfer(params);\r\n     * @returns {this} Wavesurfer instance\r\n     */\r\n    constructor(params) {\r\n        super();\r\n        /**\r\n         * Extract relevant parameters (or defaults)\r\n         * @private\r\n         */\r\n        this.params = Object.assign({}, this.defaultParams, params);\r\n\r\n        /** @private */\r\n        this.container =\r\n            'string' == typeof params.container\r\n                ? document.querySelector(this.params.container)\r\n                : this.params.container;\r\n\r\n        if (!this.container) {\r\n            throw new Error('Container element not found');\r\n        }\r\n\r\n        if (this.params.mediaContainer == null) {\r\n            /** @private */\r\n            this.mediaContainer = this.container;\r\n        } else if (typeof this.params.mediaContainer == 'string') {\r\n            /** @private */\r\n            this.mediaContainer = document.querySelector(\r\n                this.params.mediaContainer\r\n            );\r\n        } else {\r\n            /** @private */\r\n            this.mediaContainer = this.params.mediaContainer;\r\n        }\r\n\r\n        if (!this.mediaContainer) {\r\n            throw new Error('Media Container element not found');\r\n        }\r\n\r\n        if (this.params.maxCanvasWidth <= 1) {\r\n            throw new Error('maxCanvasWidth must be greater than 1');\r\n        } else if (this.params.maxCanvasWidth % 2 == 1) {\r\n            throw new Error('maxCanvasWidth must be an even number');\r\n        }\r\n\r\n        if (this.params.rtl === true) {\r\n            util.style(this.container, { transform: 'rotateY(180deg)' });\r\n        }\r\n\r\n        if (this.params.backgroundColor) {\r\n            this.setBackgroundColor(this.params.backgroundColor);\r\n        }\r\n\r\n        /**\r\n         * @private Used to save the current volume when muting so we can\r\n         * restore once unmuted\r\n         * @type {number}\r\n         */\r\n        this.savedVolume = 0;\r\n\r\n        /**\r\n         * @private The current muted state\r\n         * @type {boolean}\r\n         */\r\n        this.isMuted = false;\r\n\r\n        /**\r\n         * @private Will hold a list of event descriptors that need to be\r\n         * canceled on subsequent loads of audio\r\n         * @type {Object[]}\r\n         */\r\n        this.tmpEvents = [];\r\n\r\n        /**\r\n         * @private Holds any running audio downloads\r\n         * @type {Observer}\r\n         */\r\n        this.currentRequest = null;\r\n        /** @private */\r\n        this.arraybuffer = null;\r\n        /** @private */\r\n        this.drawer = null;\r\n        /** @private */\r\n        this.backend = null;\r\n        /** @private */\r\n        this.peakCache = null;\r\n\r\n        // cache constructor objects\r\n        if (typeof this.params.renderer !== 'function') {\r\n            throw new Error('Renderer parameter is invalid');\r\n        }\r\n        /**\r\n         * @private The uninitialised Drawer class\r\n         */\r\n        this.Drawer = this.params.renderer;\r\n        /**\r\n         * @private The uninitialised Backend class\r\n         */\r\n        // Back compat\r\n        if (this.params.backend == 'AudioElement') {\r\n            this.params.backend = 'MediaElement';\r\n        }\r\n\r\n        if (\r\n            (this.params.backend == 'WebAudio' ||\r\n                this.params.backend === 'MediaElementWebAudio') &&\r\n            !WebAudio.prototype.supportsWebAudio.call(null)\r\n        ) {\r\n            this.params.backend = 'MediaElement';\r\n        }\r\n        this.Backend = this.backends[this.params.backend];\r\n\r\n        /**\r\n         * @private map of plugin names that are currently initialised\r\n         */\r\n        this.initialisedPluginList = {};\r\n        /** @private */\r\n        this.isDestroyed = false;\r\n\r\n        /**\r\n         * Get the current ready status.\r\n         *\r\n         * @example const isReady = wavesurfer.isReady;\r\n         * @return {boolean}\r\n         */\r\n        this.isReady = false;\r\n\r\n        // responsive debounced event listener. If this.params.responsive is not\r\n        // set, this is never called. Use 100ms or this.params.responsive as\r\n        // timeout for the debounce function.\r\n        let prevWidth = 0;\r\n        this._onResize = util.debounce(\r\n            () => {\r\n                if (\r\n                    prevWidth != this.drawer.wrapper.clientWidth &&\r\n                    !this.params.scrollParent\r\n                ) {\r\n                    prevWidth = this.drawer.wrapper.clientWidth;\r\n                    this.drawer.fireEvent('redraw');\r\n                }\r\n            },\r\n            typeof this.params.responsive === 'number'\r\n                ? this.params.responsive\r\n                : 100\r\n        );\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Initialise the wave\r\n     *\r\n     * @example\r\n     * var wavesurfer = new WaveSurfer(params);\r\n     * wavesurfer.init();\r\n     * @return {this} The wavesurfer instance\r\n     */\r\n    init() {\r\n        this.registerPlugins(this.params.plugins);\r\n        this.createDrawer();\r\n        this.createBackend();\r\n        this.createPeakCache();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Add and initialise array of plugins (if `plugin.deferInit` is falsey),\r\n     * this function is called in the init function of wavesurfer\r\n     *\r\n     * @param {PluginDefinition[]} plugins An array of plugin definitions\r\n     * @emits {WaveSurfer#plugins-registered} Called with the array of plugin definitions\r\n     * @return {this} The wavesurfer instance\r\n     */\r\n    registerPlugins(plugins) {\r\n        // first instantiate all the plugins\r\n        plugins.forEach(plugin => this.addPlugin(plugin));\r\n\r\n        // now run the init functions\r\n        plugins.forEach(plugin => {\r\n            // call init function of the plugin if deferInit is falsey\r\n            // in that case you would manually use initPlugins()\r\n            if (!plugin.deferInit) {\r\n                this.initPlugin(plugin.name);\r\n            }\r\n        });\r\n        this.fireEvent('plugins-registered', plugins);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get a map of plugin names that are currently initialised\r\n     *\r\n     * @example wavesurfer.getPlugins();\r\n     * @return {Object} Object with plugin names\r\n     */\r\n    getActivePlugins() {\r\n        return this.initialisedPluginList;\r\n    }\r\n\r\n    /**\r\n     * Add a plugin object to wavesurfer\r\n     *\r\n     * @param {PluginDefinition} plugin A plugin definition\r\n     * @emits {WaveSurfer#plugin-added} Called with the name of the plugin that was added\r\n     * @example wavesurfer.addPlugin(WaveSurfer.minimap());\r\n     * @return {this} The wavesurfer instance\r\n     */\r\n    addPlugin(plugin) {\r\n        if (!plugin.name) {\r\n            throw new Error('Plugin does not have a name!');\r\n        }\r\n        if (!plugin.instance) {\r\n            throw new Error(\r\n                `Plugin ${plugin.name} does not have an instance property!`\r\n            );\r\n        }\r\n\r\n        // staticProps properties are applied to wavesurfer instance\r\n        if (plugin.staticProps) {\r\n            Object.keys(plugin.staticProps).forEach(pluginStaticProp => {\r\n                /**\r\n                 * Properties defined in a plugin definition's `staticProps` property are added as\r\n                 * staticProps properties of the WaveSurfer instance\r\n                 */\r\n                this[pluginStaticProp] = plugin.staticProps[pluginStaticProp];\r\n            });\r\n        }\r\n\r\n        const Instance = plugin.instance;\r\n\r\n        // turn the plugin instance into an observer\r\n        const observerPrototypeKeys = Object.getOwnPropertyNames(\r\n            util.Observer.prototype\r\n        );\r\n        observerPrototypeKeys.forEach(key => {\r\n            Instance.prototype[key] = util.Observer.prototype[key];\r\n        });\r\n\r\n        /**\r\n         * Instantiated plugin classes are added as a property of the wavesurfer\r\n         * instance\r\n         * @type {Object}\r\n         */\r\n        this[plugin.name] = new Instance(plugin.params || {}, this);\r\n        this.fireEvent('plugin-added', plugin.name);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Initialise a plugin\r\n     *\r\n     * @param {string} name A plugin name\r\n     * @emits WaveSurfer#plugin-initialised\r\n     * @example wavesurfer.initPlugin('minimap');\r\n     * @return {this} The wavesurfer instance\r\n     */\r\n    initPlugin(name) {\r\n        if (!this[name]) {\r\n            throw new Error(`Plugin ${name} has not been added yet!`);\r\n        }\r\n        if (this.initialisedPluginList[name]) {\r\n            // destroy any already initialised plugins\r\n            this.destroyPlugin(name);\r\n        }\r\n        this[name].init();\r\n        this.initialisedPluginList[name] = true;\r\n        this.fireEvent('plugin-initialised', name);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Destroy a plugin\r\n     *\r\n     * @param {string} name A plugin name\r\n     * @emits WaveSurfer#plugin-destroyed\r\n     * @example wavesurfer.destroyPlugin('minimap');\r\n     * @returns {this} The wavesurfer instance\r\n     */\r\n    destroyPlugin(name) {\r\n        if (!this[name]) {\r\n            throw new Error(\r\n                `Plugin ${name} has not been added yet and cannot be destroyed!`\r\n            );\r\n        }\r\n        if (!this.initialisedPluginList[name]) {\r\n            throw new Error(\r\n                `Plugin ${name} is not active and cannot be destroyed!`\r\n            );\r\n        }\r\n        if (typeof this[name].destroy !== 'function') {\r\n            throw new Error(`Plugin ${name} does not have a destroy function!`);\r\n        }\r\n\r\n        this[name].destroy();\r\n        delete this.initialisedPluginList[name];\r\n        this.fireEvent('plugin-destroyed', name);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Destroy all initialised plugins. Convenience function to use when\r\n     * wavesurfer is removed\r\n     *\r\n     * @private\r\n     */\r\n    destroyAllPlugins() {\r\n        Object.keys(this.initialisedPluginList).forEach(name =>\r\n            this.destroyPlugin(name)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Create the drawer and draw the waveform\r\n     *\r\n     * @private\r\n     * @emits WaveSurfer#drawer-created\r\n     */\r\n    createDrawer() {\r\n        this.drawer = new this.Drawer(this.container, this.params);\r\n        this.drawer.init();\r\n        this.fireEvent('drawer-created', this.drawer);\r\n\r\n        if (this.params.responsive !== false) {\r\n            window.addEventListener('resize', this._onResize, true);\r\n            window.addEventListener('orientationchange', this._onResize, true);\r\n        }\r\n\r\n        this.drawer.on('redraw', () => {\r\n            this.drawBuffer();\r\n            this.drawer.progress(this.backend.getPlayedPercents());\r\n        });\r\n\r\n        // Click-to-seek\r\n        this.drawer.on('click', (e, progress) => {\r\n            setTimeout(() => this.seekTo(progress), 0);\r\n        });\r\n\r\n        // Relay the scroll event from the drawer\r\n        this.drawer.on('scroll', e => {\r\n            if (this.params.partialRender) {\r\n                this.drawBuffer();\r\n            }\r\n            this.fireEvent('scroll', e);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Create the backend\r\n     *\r\n     * @private\r\n     * @emits WaveSurfer#backend-created\r\n     */\r\n    createBackend() {\r\n        if (this.backend) {\r\n            this.backend.destroy();\r\n        }\r\n\r\n        this.backend = new this.Backend(this.params);\r\n        this.backend.init();\r\n        this.fireEvent('backend-created', this.backend);\r\n\r\n        this.backend.on('finish', () => {\r\n            this.drawer.progress(this.backend.getPlayedPercents());\r\n            this.fireEvent('finish');\r\n        });\r\n        this.backend.on('play', () => this.fireEvent('play'));\r\n        this.backend.on('pause', () => this.fireEvent('pause'));\r\n\r\n        this.backend.on('audioprocess', time => {\r\n            this.drawer.progress(this.backend.getPlayedPercents());\r\n            this.fireEvent('audioprocess', time);\r\n        });\r\n\r\n        // only needed for MediaElement and MediaElementWebAudio backend\r\n        if (\r\n            this.params.backend === 'MediaElement' ||\r\n            this.params.backend === 'MediaElementWebAudio'\r\n        ) {\r\n            this.backend.on('seek', () => {\r\n                this.drawer.progress(this.backend.getPlayedPercents());\r\n            });\r\n\r\n            this.backend.on('volume', () => {\r\n                let newVolume = this.getVolume();\r\n                this.fireEvent('volume', newVolume);\r\n\r\n                if (this.backend.isMuted !== this.isMuted) {\r\n                    this.isMuted = this.backend.isMuted;\r\n                    this.fireEvent('mute', this.isMuted);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create the peak cache\r\n     *\r\n     * @private\r\n     */\r\n    createPeakCache() {\r\n        if (this.params.partialRender) {\r\n            this.peakCache = new PeakCache();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the duration of the audio clip\r\n     *\r\n     * @example const duration = wavesurfer.getDuration();\r\n     * @return {number} Duration in seconds\r\n     */\r\n    getDuration() {\r\n        return this.backend.getDuration();\r\n    }\r\n\r\n    /**\r\n     * Get the current playback position\r\n     *\r\n     * @example const currentTime = wavesurfer.getCurrentTime();\r\n     * @return {number} Playback position in seconds\r\n     */\r\n    getCurrentTime() {\r\n        return this.backend.getCurrentTime();\r\n    }\r\n\r\n    /**\r\n     * Set the current play time in seconds.\r\n     *\r\n     * @param {number} seconds A positive number in seconds. E.g. 10 means 10\r\n     * seconds, 60 means 1 minute\r\n     */\r\n    setCurrentTime(seconds) {\r\n        if (seconds >= this.getDuration()) {\r\n            this.seekTo(1);\r\n        } else {\r\n            this.seekTo(seconds / this.getDuration());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Starts playback from the current position. Optional start and end\r\n     * measured in seconds can be used to set the range of audio to play.\r\n     *\r\n     * @param {?number} start Position to start at\r\n     * @param {?number} end Position to end at\r\n     * @emits WaveSurfer#interaction\r\n     * @return {Promise} Result of the backend play method\r\n     * @example\r\n     * // play from second 1 to 5\r\n     * wavesurfer.play(1, 5);\r\n     */\r\n    play(start, end) {\r\n        this.fireEvent('interaction', () => this.play(start, end));\r\n        return this.backend.play(start, end);\r\n    }\r\n\r\n    /**\r\n     * Set a point in seconds for playback to stop at.\r\n     *\r\n     * @param {number} position Position (in seconds) to stop at\r\n     * @version 3.3.0\r\n     */\r\n    setPlayEnd(position) {\r\n        this.backend.setPlayEnd(position);\r\n    }\r\n\r\n    /**\r\n     * Stops and pauses playback\r\n     *\r\n     * @example wavesurfer.pause();\r\n     * @return {Promise} Result of the backend pause method\r\n     */\r\n    pause() {\r\n        if (!this.backend.isPaused()) {\r\n            return this.backend.pause();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Toggle playback\r\n     *\r\n     * @example wavesurfer.playPause();\r\n     * @return {Promise} Result of the backend play or pause method\r\n     */\r\n    playPause() {\r\n        return this.backend.isPaused() ? this.play() : this.pause();\r\n    }\r\n\r\n    /**\r\n     * Get the current playback state\r\n     *\r\n     * @example const isPlaying = wavesurfer.isPlaying();\r\n     * @return {boolean} False if paused, true if playing\r\n     */\r\n    isPlaying() {\r\n        return !this.backend.isPaused();\r\n    }\r\n\r\n    /**\r\n     * Skip backward\r\n     *\r\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\r\n     * is used\r\n     * @example wavesurfer.skipBackward();\r\n     */\r\n    skipBackward(seconds) {\r\n        this.skip(-seconds || -this.params.skipLength);\r\n    }\r\n\r\n    /**\r\n     * Skip forward\r\n     *\r\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\r\n     * is used\r\n     * @example wavesurfer.skipForward();\r\n     */\r\n    skipForward(seconds) {\r\n        this.skip(seconds || this.params.skipLength);\r\n    }\r\n\r\n    /**\r\n     * Skip a number of seconds from the current position (use a negative value\r\n     * to go backwards).\r\n     *\r\n     * @param {number} offset Amount to skip back or forwards\r\n     * @example\r\n     * // go back 2 seconds\r\n     * wavesurfer.skip(-2);\r\n     */\r\n    skip(offset) {\r\n        const duration = this.getDuration() || 1;\r\n        let position = this.getCurrentTime() || 0;\r\n        position = Math.max(0, Math.min(duration, position + (offset || 0)));\r\n        this.seekAndCenter(position / duration);\r\n    }\r\n\r\n    /**\r\n     * Seeks to a position and centers the view\r\n     *\r\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\r\n     * @example\r\n     * // seek and go to the middle of the audio\r\n     * wavesurfer.seekTo(0.5);\r\n     */\r\n    seekAndCenter(progress) {\r\n        this.seekTo(progress);\r\n        this.drawer.recenter(progress);\r\n    }\r\n\r\n    /**\r\n     * Seeks to a position\r\n     *\r\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\r\n     * @emits WaveSurfer#interaction\r\n     * @emits WaveSurfer#seek\r\n     * @example\r\n     * // seek to the middle of the audio\r\n     * wavesurfer.seekTo(0.5);\r\n     */\r\n    seekTo(progress) {\r\n        // return an error if progress is not a number between 0 and 1\r\n        if (\r\n            typeof progress !== 'number' ||\r\n            !isFinite(progress) ||\r\n            progress < 0 ||\r\n            progress > 1\r\n        ) {\r\n            throw new Error(\r\n                'Error calling wavesurfer.seekTo, parameter must be a number between 0 and 1!'\r\n            );\r\n        }\r\n        this.fireEvent('interaction', () => this.seekTo(progress));\r\n\r\n        const paused = this.backend.isPaused();\r\n        // avoid draw wrong position while playing backward seeking\r\n        if (!paused) {\r\n            this.backend.pause();\r\n        }\r\n        // avoid small scrolls while paused seeking\r\n        const oldScrollParent = this.params.scrollParent;\r\n        this.params.scrollParent = false;\r\n        this.backend.seekTo(progress * this.getDuration());\r\n        this.drawer.progress(progress);\r\n\r\n        if (!paused) {\r\n            this.backend.play();\r\n        }\r\n        this.params.scrollParent = oldScrollParent;\r\n        this.fireEvent('seek', progress);\r\n    }\r\n\r\n    /**\r\n     * Stops and goes to the beginning.\r\n     *\r\n     * @example wavesurfer.stop();\r\n     */\r\n    stop() {\r\n        this.pause();\r\n        this.seekTo(0);\r\n        this.drawer.progress(0);\r\n    }\r\n\r\n    /**\r\n     * Sets the ID of the audio device to use for output and returns a Promise.\r\n     *\r\n     * @param {string} deviceId String value representing underlying output\r\n     * device\r\n     * @returns {Promise} `Promise` that resolves to `undefined` when there are\r\n     * no errors detected.\r\n     */\r\n    setSinkId(deviceId) {\r\n        return this.backend.setSinkId(deviceId);\r\n    }\r\n\r\n    /**\r\n     * Set the playback volume.\r\n     *\r\n     * @param {number} newVolume A value between 0 and 1, 0 being no\r\n     * volume and 1 being full volume.\r\n     * @emits WaveSurfer#volume\r\n     */\r\n    setVolume(newVolume) {\r\n        this.backend.setVolume(newVolume);\r\n        this.fireEvent('volume', newVolume);\r\n    }\r\n\r\n    /**\r\n     * Get the playback volume.\r\n     *\r\n     * @return {number} A value between 0 and 1, 0 being no\r\n     * volume and 1 being full volume.\r\n     */\r\n    getVolume() {\r\n        return this.backend.getVolume();\r\n    }\r\n\r\n    /**\r\n     * Set the playback rate.\r\n     *\r\n     * @param {number} rate A positive number. E.g. 0.5 means half the normal\r\n     * speed, 2 means double speed and so on.\r\n     * @example wavesurfer.setPlaybackRate(2);\r\n     */\r\n    setPlaybackRate(rate) {\r\n        this.backend.setPlaybackRate(rate);\r\n    }\r\n\r\n    /**\r\n     * Get the playback rate.\r\n     *\r\n     * @return {number} The current playback rate.\r\n     */\r\n    getPlaybackRate() {\r\n        return this.backend.getPlaybackRate();\r\n    }\r\n\r\n    /**\r\n     * Toggle the volume on and off. If not currently muted it will save the\r\n     * current volume value and turn the volume off. If currently muted then it\r\n     * will restore the volume to the saved value, and then rest the saved\r\n     * value.\r\n     *\r\n     * @example wavesurfer.toggleMute();\r\n     */\r\n    toggleMute() {\r\n        this.setMute(!this.isMuted);\r\n    }\r\n\r\n    /**\r\n     * Enable or disable muted audio\r\n     *\r\n     * @param {boolean} mute Specify `true` to mute audio.\r\n     * @emits WaveSurfer#volume\r\n     * @emits WaveSurfer#mute\r\n     * @example\r\n     * // unmute\r\n     * wavesurfer.setMute(false);\r\n     * console.log(wavesurfer.getMute()) // logs false\r\n     */\r\n    setMute(mute) {\r\n        // ignore all muting requests if the audio is already in that state\r\n        if (mute === this.isMuted) {\r\n            this.fireEvent('mute', this.isMuted);\r\n            return;\r\n        }\r\n\r\n        if (this.backend.setMute) {\r\n            // Backends such as the MediaElement backend have their own handling\r\n            // of mute, let them handle it.\r\n            this.backend.setMute(mute);\r\n            this.isMuted = mute;\r\n        } else {\r\n            if (mute) {\r\n                // If currently not muted then save current volume,\r\n                // turn off the volume and update the mute properties\r\n                this.savedVolume = this.backend.getVolume();\r\n                this.backend.setVolume(0);\r\n                this.isMuted = true;\r\n                this.fireEvent('volume', 0);\r\n            } else {\r\n                // If currently muted then restore to the saved volume\r\n                // and update the mute properties\r\n                this.backend.setVolume(this.savedVolume);\r\n                this.isMuted = false;\r\n                this.fireEvent('volume', this.savedVolume);\r\n            }\r\n        }\r\n        this.fireEvent('mute', this.isMuted);\r\n    }\r\n\r\n    /**\r\n     * Get the current mute status.\r\n     *\r\n     * @example const isMuted = wavesurfer.getMute();\r\n     * @return {boolean} Current mute status\r\n     */\r\n    getMute() {\r\n        return this.isMuted;\r\n    }\r\n\r\n    /**\r\n     * Get the list of current set filters as an array.\r\n     *\r\n     * Filters must be set with setFilters method first\r\n     *\r\n     * @return {array} List of enabled filters\r\n     */\r\n    getFilters() {\r\n        return this.backend.filters || [];\r\n    }\r\n\r\n    /**\r\n     * Toggles `scrollParent` and redraws\r\n     *\r\n     * @example wavesurfer.toggleScroll();\r\n     */\r\n    toggleScroll() {\r\n        this.params.scrollParent = !this.params.scrollParent;\r\n        this.drawBuffer();\r\n    }\r\n\r\n    /**\r\n     * Toggle mouse interaction\r\n     *\r\n     * @example wavesurfer.toggleInteraction();\r\n     */\r\n    toggleInteraction() {\r\n        this.params.interact = !this.params.interact;\r\n    }\r\n\r\n    /**\r\n     * Get the fill color of the waveform after the cursor.\r\n     *\r\n     * @return {string} A CSS color string.\r\n     */\r\n    getWaveColor() {\r\n        return this.params.waveColor;\r\n    }\r\n\r\n    /**\r\n     * Set the fill color of the waveform after the cursor.\r\n     *\r\n     * @param {string} color A CSS color string.\r\n     * @example wavesurfer.setWaveColor('#ddd');\r\n     */\r\n    setWaveColor(color) {\r\n        this.params.waveColor = color;\r\n        this.drawBuffer();\r\n    }\r\n\r\n    /**\r\n     * Get the fill color of the waveform behind the cursor.\r\n     *\r\n     * @return {string} A CSS color string.\r\n     */\r\n    getProgressColor() {\r\n        return this.params.progressColor;\r\n    }\r\n\r\n    /**\r\n     * Set the fill color of the waveform behind the cursor.\r\n     *\r\n     * @param {string} color A CSS color string.\r\n     * @example wavesurfer.setProgressColor('#400');\r\n     */\r\n    setProgressColor(color) {\r\n        this.params.progressColor = color;\r\n        this.drawBuffer();\r\n    }\r\n\r\n    /**\r\n     * Get the background color of the waveform container.\r\n     *\r\n     * @return {string} A CSS color string.\r\n     */\r\n    getBackgroundColor() {\r\n        return this.params.backgroundColor;\r\n    }\r\n\r\n    /**\r\n     * Set the background color of the waveform container.\r\n     *\r\n     * @param {string} color A CSS color string.\r\n     * @example wavesurfer.setBackgroundColor('#FF00FF');\r\n     */\r\n    setBackgroundColor(color) {\r\n        this.params.backgroundColor = color;\r\n        util.style(this.container, { background: this.params.backgroundColor });\r\n    }\r\n\r\n    /**\r\n     * Get the fill color of the cursor indicating the playhead\r\n     * position.\r\n     *\r\n     * @return {string} A CSS color string.\r\n     */\r\n    getCursorColor() {\r\n        return this.params.cursorColor;\r\n    }\r\n\r\n    /**\r\n     * Set the fill color of the cursor indicating the playhead\r\n     * position.\r\n     *\r\n     * @param {string} color A CSS color string.\r\n     * @example wavesurfer.setCursorColor('#222');\r\n     */\r\n    setCursorColor(color) {\r\n        this.params.cursorColor = color;\r\n        this.drawer.updateCursor();\r\n    }\r\n\r\n    /**\r\n     * Get the height of the waveform.\r\n     *\r\n     * @return {number} Height measured in pixels.\r\n     */\r\n    getHeight() {\r\n        return this.params.height;\r\n    }\r\n\r\n    /**\r\n     * Set the height of the waveform.\r\n     *\r\n     * @param {number} height Height measured in pixels.\r\n     * @example wavesurfer.setHeight(200);\r\n     */\r\n    setHeight(height) {\r\n        this.params.height = height;\r\n        this.drawer.setHeight(height * this.params.pixelRatio);\r\n        this.drawBuffer();\r\n    }\r\n\r\n    /**\r\n     * Hide channels from being drawn on the waveform if splitting channels.\r\n     *\r\n     * For example, if we want to draw only the peaks for the right stereo channel:\r\n     *\r\n     * const wavesurfer = new WaveSurfer.create({...splitChannels: true});\r\n     * wavesurfer.load('stereo_audio.mp3');\r\n     *\r\n     * wavesurfer.setFilteredChannel([0]); <-- hide left channel peaks.\r\n     *\r\n     * @param {array} channelIndices Channels to be filtered out from drawing.\r\n     * @version 4.0.0\r\n     */\r\n    setFilteredChannels(channelIndices) {\r\n        this.params.splitChannelsOptions.filterChannels = channelIndices;\r\n        this.drawBuffer();\r\n    }\r\n\r\n    /**\r\n     * Get the correct peaks for current wave view-port and render wave\r\n     *\r\n     * @private\r\n     * @emits WaveSurfer#redraw\r\n     */\r\n    drawBuffer() {\r\n        const nominalWidth = Math.round(\r\n            this.getDuration() *\r\n                this.params.minPxPerSec *\r\n                this.params.pixelRatio\r\n        );\r\n        const parentWidth = this.drawer.getWidth();\r\n        let width = nominalWidth;\r\n        // always start at 0 after zooming for scrolling : issue redraw left part\r\n        let start = 0;\r\n        let end = Math.max(start + parentWidth, width);\r\n        // Fill container\r\n        if (\r\n            this.params.fillParent &&\r\n            (!this.params.scrollParent || nominalWidth < parentWidth)\r\n        ) {\r\n            width = parentWidth;\r\n            start = 0;\r\n            end = width;\r\n        }\r\n\r\n        let peaks;\r\n        if (this.params.partialRender) {\r\n            const newRanges = this.peakCache.addRangeToPeakCache(\r\n                width,\r\n                start,\r\n                end\r\n            );\r\n            let i;\r\n            for (i = 0; i < newRanges.length; i++) {\r\n                peaks = this.backend.getPeaks(\r\n                    width,\r\n                    newRanges[i][0],\r\n                    newRanges[i][1]\r\n                );\r\n                this.drawer.drawPeaks(\r\n                    peaks,\r\n                    width,\r\n                    newRanges[i][0],\r\n                    newRanges[i][1]\r\n                );\r\n            }\r\n        } else {\r\n            peaks = this.backend.getPeaks(width, start, end);\r\n            this.drawer.drawPeaks(peaks, width, start, end);\r\n        }\r\n        this.fireEvent('redraw', peaks, width);\r\n    }\r\n\r\n    /**\r\n     * Horizontally zooms the waveform in and out. It also changes the parameter\r\n     * `minPxPerSec` and enables the `scrollParent` option. Calling the function\r\n     * with a falsey parameter will reset the zoom state.\r\n     *\r\n     * @param {?number} pxPerSec Number of horizontal pixels per second of\r\n     * audio, if none is set the waveform returns to unzoomed state\r\n     * @emits WaveSurfer#zoom\r\n     * @example wavesurfer.zoom(20);\r\n     */\r\n    zoom(pxPerSec) {\r\n        if (!pxPerSec) {\r\n            this.params.minPxPerSec = this.defaultParams.minPxPerSec;\r\n            this.params.scrollParent = false;\r\n        } else {\r\n            this.params.minPxPerSec = pxPerSec;\r\n            this.params.scrollParent = true;\r\n        }\r\n\r\n        this.drawBuffer();\r\n        this.drawer.progress(this.backend.getPlayedPercents());\r\n\r\n        this.drawer.recenter(this.getCurrentTime() / this.getDuration());\r\n        this.fireEvent('zoom', pxPerSec);\r\n    }\r\n\r\n    /**\r\n     * Decode buffer and load\r\n     *\r\n     * @private\r\n     * @param {ArrayBuffer} arraybuffer Buffer to process\r\n     */\r\n    loadArrayBuffer(arraybuffer) {\r\n        this.decodeArrayBuffer(arraybuffer, data => {\r\n            if (!this.isDestroyed) {\r\n                this.loadDecodedBuffer(data);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Directly load an externally decoded AudioBuffer\r\n     *\r\n     * @private\r\n     * @param {AudioBuffer} buffer Buffer to process\r\n     * @emits WaveSurfer#ready\r\n     */\r\n    loadDecodedBuffer(buffer) {\r\n        this.backend.load(buffer);\r\n        this.drawBuffer();\r\n        this.isReady = true;\r\n        this.fireEvent('ready');\r\n    }\r\n\r\n    /**\r\n     * Loads audio data from a Blob or File object\r\n     *\r\n     * @param {Blob|File} blob Audio data\r\n     * @example\r\n     */\r\n    loadBlob(blob) {\r\n        // Create file reader\r\n        const reader = new FileReader();\r\n        reader.addEventListener('progress', e => this.onProgress(e));\r\n        reader.addEventListener('load', e =>\r\n            this.loadArrayBuffer(e.target.result)\r\n        );\r\n        reader.addEventListener('error', () =>\r\n            this.fireEvent('error', 'Error reading file')\r\n        );\r\n        reader.readAsArrayBuffer(blob);\r\n        this.empty();\r\n    }\r\n\r\n    /**\r\n     * Loads audio and re-renders the waveform.\r\n     *\r\n     * @param {string|HTMLMediaElement} url The url of the audio file or the\r\n     * audio element with the audio\r\n     * @param {number[]|Number.<Array[]>} peaks Wavesurfer does not have to decode\r\n     * the audio to render the waveform if this is specified\r\n     * @param {?string} preload (Use with backend `MediaElement` and `MediaElementWebAudio`)\r\n     * `'none'|'metadata'|'auto'` Preload attribute for the media element\r\n     * @param {?number} duration The duration of the audio. This is used to\r\n     * render the peaks data in the correct size for the audio duration (as\r\n     * befits the current `minPxPerSec` and zoom value) without having to decode\r\n     * the audio.\r\n     * @returns {void}\r\n     * @throws Will throw an error if the `url` argument is empty.\r\n     * @example\r\n     * // uses fetch or media element to load file (depending on backend)\r\n     * wavesurfer.load('http://example.com/demo.wav');\r\n     *\r\n     * // setting preload attribute with media element backend and supplying\r\n     * // peaks\r\n     * wavesurfer.load(\r\n     *   'http://example.com/demo.wav',\r\n     *   [0.0218, 0.0183, 0.0165, 0.0198, 0.2137, 0.2888],\r\n     *   true\r\n     * );\r\n     */\r\n    load(url, peaks, preload, duration) {\r\n        if (!url) {\r\n            throw new Error('url parameter cannot be empty');\r\n        }\r\n        this.empty();\r\n        if (preload) {\r\n            // check whether the preload attribute will be usable and if not log\r\n            // a warning listing the reasons why not and nullify the variable\r\n            const preloadIgnoreReasons = {\r\n                \"Preload is not 'auto', 'none' or 'metadata'\":\r\n                    ['auto', 'metadata', 'none'].indexOf(preload) === -1,\r\n                'Peaks are not provided': !peaks,\r\n                \"Backend is not of type 'MediaElement' or 'MediaElementWebAudio'\":\r\n                    ['MediaElement', 'MediaElementWebAudio'].indexOf(\r\n                        this.params.backend\r\n                    ) === -1,\r\n                'Url is not of type string': typeof url !== 'string'\r\n            };\r\n            const activeReasons = Object.keys(preloadIgnoreReasons).filter(\r\n                reason => preloadIgnoreReasons[reason]\r\n            );\r\n            if (activeReasons.length) {\r\n                // eslint-disable-next-line no-console\r\n                console.warn(\r\n                    'Preload parameter of wavesurfer.load will be ignored because:\\n\\t- ' +\r\n                        activeReasons.join('\\n\\t- ')\r\n                );\r\n                // stop invalid values from being used\r\n                preload = null;\r\n            }\r\n        }\r\n\r\n        switch (this.params.backend) {\r\n            case 'WebAudio':\r\n                return this.loadBuffer(url, peaks, duration);\r\n            case 'MediaElement':\r\n            case 'MediaElementWebAudio':\r\n                return this.loadMediaElement(url, peaks, preload, duration);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Loads audio using Web Audio buffer backend.\r\n     *\r\n     * @private\r\n     * @param {string} url URL of audio file\r\n     * @param {number[]|Number.<Array[]>} peaks Peaks data\r\n     * @param {?number} duration Optional duration of audio file\r\n     * @returns {void}\r\n     */\r\n    loadBuffer(url, peaks, duration) {\r\n        const load = action => {\r\n            if (action) {\r\n                this.tmpEvents.push(this.once('ready', action));\r\n            }\r\n            return this.getArrayBuffer(url, data => this.loadArrayBuffer(data));\r\n        };\r\n\r\n        if (peaks) {\r\n            this.backend.setPeaks(peaks, duration);\r\n            this.drawBuffer();\r\n            this.tmpEvents.push(this.once('interaction', load));\r\n        } else {\r\n            return load();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Either create a media element, or load an existing media element.\r\n     *\r\n     * @private\r\n     * @param {string|HTMLMediaElement} urlOrElt Either a path to a media file, or an\r\n     * existing HTML5 Audio/Video Element\r\n     * @param {number[]|Number.<Array[]>} peaks Array of peaks. Required to bypass web audio\r\n     * dependency\r\n     * @param {?boolean} preload Set to true if the preload attribute of the\r\n     * audio element should be enabled\r\n     * @param {?number} duration Optional duration of audio file\r\n     */\r\n    loadMediaElement(urlOrElt, peaks, preload, duration) {\r\n        let url = urlOrElt;\r\n\r\n        if (typeof urlOrElt === 'string') {\r\n            this.backend.load(url, this.mediaContainer, peaks, preload);\r\n        } else {\r\n            const elt = urlOrElt;\r\n            this.backend.loadElt(elt, peaks);\r\n\r\n            // If peaks are not provided,\r\n            // url = element.src so we can get peaks with web audio\r\n            url = elt.src;\r\n        }\r\n\r\n        this.tmpEvents.push(\r\n            this.backend.once('canplay', () => {\r\n                // ignore when backend was already destroyed\r\n                if (!this.backend.destroyed) {\r\n                    this.drawBuffer();\r\n                    this.isReady = true;\r\n                    this.fireEvent('ready');\r\n                }\r\n            }),\r\n            this.backend.once('error', err => this.fireEvent('error', err))\r\n        );\r\n\r\n        if (peaks) {\r\n            this.backend.setPeaks(peaks, duration);\r\n            this.drawBuffer();\r\n        }\r\n\r\n        // If no pre-decoded peaks are provided, or are provided with\r\n        // forceDecode flag, attempt to download the audio file and decode it\r\n        // with Web Audio.\r\n        if (\r\n            (!peaks || this.params.forceDecode) &&\r\n            this.backend.supportsWebAudio()\r\n        ) {\r\n            this.getArrayBuffer(url, arraybuffer => {\r\n                this.decodeArrayBuffer(arraybuffer, buffer => {\r\n                    this.backend.buffer = buffer;\r\n                    this.backend.setPeaks(null);\r\n                    this.drawBuffer();\r\n                    this.fireEvent('waveform-ready');\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Decode an array buffer and pass data to a callback\r\n     *\r\n     * @private\r\n     * @param {Object} arraybuffer The array buffer to decode\r\n     * @param {function} callback The function to call on complete\r\n     */\r\n    decodeArrayBuffer(arraybuffer, callback) {\r\n        this.arraybuffer = arraybuffer;\r\n        this.backend.decodeArrayBuffer(\r\n            arraybuffer,\r\n            data => {\r\n                // Only use the decoded data if we haven't been destroyed or\r\n                // another decode started in the meantime\r\n                if (!this.isDestroyed && this.arraybuffer == arraybuffer) {\r\n                    callback(data);\r\n                    this.arraybuffer = null;\r\n                }\r\n            },\r\n            () => this.fireEvent('error', 'Error decoding audiobuffer')\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Load an array buffer using fetch and pass the result to a callback\r\n     *\r\n     * @param {string} url The URL of the file object\r\n     * @param {function} callback The function to call on complete\r\n     * @returns {util.fetchFile} fetch call\r\n     * @private\r\n     */\r\n    getArrayBuffer(url, callback) {\r\n        let options = Object.assign(\r\n            {\r\n                url: url,\r\n                responseType: 'arraybuffer'\r\n            },\r\n            this.params.xhr\r\n        );\r\n        const request = util.fetchFile(options);\r\n\r\n        this.currentRequest = request;\r\n\r\n        this.tmpEvents.push(\r\n            request.on('progress', e => {\r\n                this.onProgress(e);\r\n            }),\r\n            request.on('success', data => {\r\n                callback(data);\r\n                this.currentRequest = null;\r\n            }),\r\n            request.on('error', e => {\r\n                this.fireEvent('error', e);\r\n                this.currentRequest = null;\r\n            })\r\n        );\r\n\r\n        return request;\r\n    }\r\n\r\n    /**\r\n     * Called while the audio file is loading\r\n     *\r\n     * @private\r\n     * @param {Event} e Progress event\r\n     * @emits WaveSurfer#loading\r\n     */\r\n    onProgress(e) {\r\n        let percentComplete;\r\n        if (e.lengthComputable) {\r\n            percentComplete = e.loaded / e.total;\r\n        } else {\r\n            // Approximate progress with an asymptotic\r\n            // function, and assume downloads in the 1-3 MB range.\r\n            percentComplete = e.loaded / (e.loaded + 1000000);\r\n        }\r\n        this.fireEvent('loading', Math.round(percentComplete * 100), e.target);\r\n    }\r\n\r\n    /**\r\n     * Exports PCM data into a JSON array and opens in a new window.\r\n     *\r\n     * @param {number} length=1024 The scale in which to export the peaks\r\n     * @param {number} accuracy=10000\r\n     * @param {?boolean} noWindow Set to true to disable opening a new\r\n     * window with the JSON\r\n     * @param {number} start Start index\r\n     * @param {number} end End index\r\n     * @return {Promise} Promise that resolves with array of peaks\r\n     */\r\n    exportPCM(length, accuracy, noWindow, start, end) {\r\n        length = length || 1024;\r\n        start = start || 0;\r\n        accuracy = accuracy || 10000;\r\n        noWindow = noWindow || false;\r\n        const peaks = this.backend.getPeaks(length, start, end);\r\n        const arr = [].map.call(\r\n            peaks,\r\n            val => Math.round(val * accuracy) / accuracy\r\n        );\r\n        return new Promise((resolve, reject) => {\r\n            const json = JSON.stringify(arr);\r\n\r\n            if (!noWindow) {\r\n                window.open(\r\n                    'data:application/json;charset=utf-8,' +\r\n                        encodeURIComponent(json)\r\n                );\r\n            }\r\n            resolve(json);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Save waveform image as data URI.\r\n     *\r\n     * The default format is `'image/png'`. Other supported types are\r\n     * `'image/jpeg'` and `'image/webp'`.\r\n     *\r\n     * @param {string} format='image/png' A string indicating the image format.\r\n     * The default format type is `'image/png'`.\r\n     * @param {number} quality=1 A number between 0 and 1 indicating the image\r\n     * quality to use for image formats that use lossy compression such as\r\n     * `'image/jpeg'`` and `'image/webp'`.\r\n     * @param {string} type Image data type to return. Either 'dataURL' (default)\r\n     * or 'blob'.\r\n     * @return {string|string[]|Promise} When using `'dataURL'` type this returns\r\n     * a single data URL or an array of data URLs, one for each canvas. When using\r\n     * `'blob'` type this returns a `Promise` resolving with an array of `Blob`\r\n     * instances, one for each canvas.\r\n     */\r\n    exportImage(format, quality, type) {\r\n        if (!format) {\r\n            format = 'image/png';\r\n        }\r\n        if (!quality) {\r\n            quality = 1;\r\n        }\r\n        if (!type) {\r\n            type = 'dataURL';\r\n        }\r\n\r\n        return this.drawer.getImage(format, quality, type);\r\n    }\r\n\r\n    /**\r\n     * Cancel any fetch request currently in progress\r\n     */\r\n    cancelAjax() {\r\n        if (this.currentRequest && this.currentRequest.controller) {\r\n            this.currentRequest.controller.abort();\r\n            this.currentRequest = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    clearTmpEvents() {\r\n        this.tmpEvents.forEach(e => e.un());\r\n    }\r\n\r\n    /**\r\n     * Display empty waveform.\r\n     */\r\n    empty() {\r\n        if (!this.backend.isPaused()) {\r\n            this.stop();\r\n            this.backend.disconnectSource();\r\n        }\r\n        this.isReady = false;\r\n        this.cancelAjax();\r\n        this.clearTmpEvents();\r\n\r\n        // empty drawer\r\n        this.drawer.progress(0);\r\n        this.drawer.setWidth(0);\r\n        this.drawer.drawPeaks({ length: this.drawer.getWidth() }, 0);\r\n    }\r\n\r\n    /**\r\n     * Remove events, elements and disconnect WebAudio nodes.\r\n     *\r\n     * @emits WaveSurfer#destroy\r\n     */\r\n    destroy() {\r\n        this.destroyAllPlugins();\r\n        this.fireEvent('destroy');\r\n        this.cancelAjax();\r\n        this.clearTmpEvents();\r\n        this.unAll();\r\n        if (this.params.responsive !== false) {\r\n            window.removeEventListener('resize', this._onResize, true);\r\n            window.removeEventListener(\r\n                'orientationchange',\r\n                this._onResize,\r\n                true\r\n            );\r\n        }\r\n        if (this.backend) {\r\n            this.backend.destroy();\r\n        }\r\n        if (this.drawer) {\r\n            this.drawer.destroy();\r\n        }\r\n        this.isDestroyed = true;\r\n        this.isReady = false;\r\n        this.arraybuffer = null;\r\n    }\r\n}\r\n","import * as util from './util';\r\n\r\n// using constants to prevent someone writing the string wrong\r\nconst PLAYING = 'playing';\r\nconst PAUSED = 'paused';\r\nconst FINISHED = 'finished';\r\n\r\n/**\r\n * WebAudio backend\r\n *\r\n * @extends {Observer}\r\n */\r\nexport default class WebAudio extends util.Observer {\r\n    /** scriptBufferSize: size of the processing buffer */\r\n    static scriptBufferSize = 256;\r\n    /** audioContext: allows to process audio with WebAudio API */\r\n    audioContext = null;\r\n    /** @private */\r\n    offlineAudioContext = null;\r\n    /** @private */\r\n    stateBehaviors = {\r\n        [PLAYING]: {\r\n            init() {\r\n                this.addOnAudioProcess();\r\n            },\r\n            getPlayedPercents() {\r\n                const duration = this.getDuration();\r\n                return this.getCurrentTime() / duration || 0;\r\n            },\r\n            getCurrentTime() {\r\n                return this.startPosition + this.getPlayedTime();\r\n            }\r\n        },\r\n        [PAUSED]: {\r\n            init() {\r\n                this.removeOnAudioProcess();\r\n            },\r\n            getPlayedPercents() {\r\n                const duration = this.getDuration();\r\n                return this.getCurrentTime() / duration || 0;\r\n            },\r\n            getCurrentTime() {\r\n                return this.startPosition;\r\n            }\r\n        },\r\n        [FINISHED]: {\r\n            init() {\r\n                this.removeOnAudioProcess();\r\n                this.fireEvent('finish');\r\n            },\r\n            getPlayedPercents() {\r\n                return 1;\r\n            },\r\n            getCurrentTime() {\r\n                return this.getDuration();\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Does the browser support this backend\r\n     *\r\n     * @return {boolean} Whether or not this browser supports this backend\r\n     */\r\n    supportsWebAudio() {\r\n        return !!(window.AudioContext || window.webkitAudioContext);\r\n    }\r\n\r\n    /**\r\n     * Get the audio context used by this backend or create one\r\n     *\r\n     * @return {AudioContext} Existing audio context, or creates a new one\r\n     */\r\n    getAudioContext() {\r\n        if (!window.WaveSurferAudioContext) {\r\n            window.WaveSurferAudioContext = new (window.AudioContext ||\r\n                window.webkitAudioContext)();\r\n        }\r\n        return window.WaveSurferAudioContext;\r\n    }\r\n\r\n    /**\r\n     * Get the offline audio context used by this backend or create one\r\n     *\r\n     * @param {number} sampleRate The sample rate to use\r\n     * @return {OfflineAudioContext} Existing offline audio context, or creates\r\n     * a new one\r\n     */\r\n    getOfflineAudioContext(sampleRate) {\r\n        if (!window.WaveSurferOfflineAudioContext) {\r\n            window.WaveSurferOfflineAudioContext = new (window.OfflineAudioContext ||\r\n                window.webkitOfflineAudioContext)(1, 2, sampleRate);\r\n        }\r\n        return window.WaveSurferOfflineAudioContext;\r\n    }\r\n\r\n    /**\r\n     * Construct the backend\r\n     *\r\n     * @param {WavesurferParams} params Wavesurfer parameters\r\n     */\r\n    constructor(params) {\r\n        super();\r\n        /** @private */\r\n        this.params = params;\r\n        /** ac: Audio Context instance */\r\n        this.ac =\r\n            params.audioContext ||\r\n            (this.supportsWebAudio() ? this.getAudioContext() : {});\r\n        /**@private */\r\n        this.lastPlay = this.ac.currentTime;\r\n        /** @private */\r\n        this.startPosition = 0;\r\n        /** @private */\r\n        this.scheduledPause = null;\r\n        /** @private */\r\n        this.states = {\r\n            [PLAYING]: Object.create(this.stateBehaviors[PLAYING]),\r\n            [PAUSED]: Object.create(this.stateBehaviors[PAUSED]),\r\n            [FINISHED]: Object.create(this.stateBehaviors[FINISHED])\r\n        };\r\n        /** @private */\r\n        this.buffer = null;\r\n        /** @private */\r\n        this.filters = [];\r\n        /** gainNode: allows to control audio volume */\r\n        this.gainNode = null;\r\n        /** @private */\r\n        this.mergedPeaks = null;\r\n        /** @private */\r\n        this.offlineAc = null;\r\n        /** @private */\r\n        this.peaks = null;\r\n        /** @private */\r\n        this.playbackRate = 1;\r\n        /** analyser: provides audio analysis information */\r\n        this.analyser = null;\r\n        /** scriptNode: allows processing audio */\r\n        this.scriptNode = null;\r\n        /** @private */\r\n        this.source = null;\r\n        /** @private */\r\n        this.splitPeaks = [];\r\n        /** @private */\r\n        this.state = null;\r\n        /** @private */\r\n        this.explicitDuration = params.duration;\r\n        /**\r\n         * Boolean indicating if the backend was destroyed.\r\n         */\r\n        this.destroyed = false;\r\n    }\r\n\r\n    /**\r\n     * Initialise the backend, called in `wavesurfer.createBackend()`\r\n     */\r\n    init() {\r\n        this.createVolumeNode();\r\n        this.createScriptNode();\r\n        this.createAnalyserNode();\r\n\r\n        this.setState(PAUSED);\r\n        this.setPlaybackRate(this.params.audioRate);\r\n        this.setLength(0);\r\n    }\r\n\r\n    /** @private */\r\n    disconnectFilters() {\r\n        if (this.filters) {\r\n            this.filters.forEach(filter => {\r\n                filter && filter.disconnect();\r\n            });\r\n            this.filters = null;\r\n            // Reconnect direct path\r\n            this.analyser.connect(this.gainNode);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * @param {string} state The new state\r\n     */\r\n    setState(state) {\r\n        if (this.state !== this.states[state]) {\r\n            this.state = this.states[state];\r\n            this.state.init.call(this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Unpacked `setFilters()`\r\n     *\r\n     * @param {...AudioNode} filters One or more filters to set\r\n     */\r\n    setFilter(...filters) {\r\n        this.setFilters(filters);\r\n    }\r\n\r\n    /**\r\n     * Insert custom Web Audio nodes into the graph\r\n     *\r\n     * @param {AudioNode[]} filters Packed filters array\r\n     * @example\r\n     * const lowpass = wavesurfer.backend.ac.createBiquadFilter();\r\n     * wavesurfer.backend.setFilter(lowpass);\r\n     */\r\n    setFilters(filters) {\r\n        // Remove existing filters\r\n        this.disconnectFilters();\r\n\r\n        // Insert filters if filter array not empty\r\n        if (filters && filters.length) {\r\n            this.filters = filters;\r\n\r\n            // Disconnect direct path before inserting filters\r\n            this.analyser.disconnect();\r\n\r\n            // Connect each filter in turn\r\n            filters\r\n                .reduce((prev, curr) => {\r\n                    prev.connect(curr);\r\n                    return curr;\r\n                }, this.analyser)\r\n                .connect(this.gainNode);\r\n        }\r\n    }\r\n    /** Create ScriptProcessorNode to process audio */\r\n    createScriptNode() {\r\n        if (this.params.audioScriptProcessor) {\r\n            this.scriptNode = this.params.audioScriptProcessor;\r\n        } else {\r\n            if (this.ac.createScriptProcessor) {\r\n                this.scriptNode = this.ac.createScriptProcessor(\r\n                    WebAudio.scriptBufferSize\r\n                );\r\n            } else {\r\n                this.scriptNode = this.ac.createJavaScriptNode(\r\n                    WebAudio.scriptBufferSize\r\n                );\r\n            }\r\n        }\r\n        this.scriptNode.connect(this.ac.destination);\r\n    }\r\n\r\n    /** @private */\r\n    addOnAudioProcess() {\r\n        this.scriptNode.onaudioprocess = () => {\r\n            const time = this.getCurrentTime();\r\n\r\n            if (time >= this.getDuration()) {\r\n                this.setState(FINISHED);\r\n                this.fireEvent('pause');\r\n            } else if (time >= this.scheduledPause) {\r\n                this.pause();\r\n            } else if (this.state === this.states[PLAYING]) {\r\n                this.fireEvent('audioprocess', time);\r\n            }\r\n        };\r\n    }\r\n\r\n    /** @private */\r\n    removeOnAudioProcess() {\r\n        this.scriptNode.onaudioprocess = () => {};\r\n    }\r\n    /** Create analyser node to perform audio analysis */\r\n    createAnalyserNode() {\r\n        this.analyser = this.ac.createAnalyser();\r\n        this.analyser.connect(this.gainNode);\r\n    }\r\n\r\n    /**\r\n     * Create the gain node needed to control the playback volume.\r\n     *\r\n     */\r\n    createVolumeNode() {\r\n        // Create gain node using the AudioContext\r\n        if (this.ac.createGain) {\r\n            this.gainNode = this.ac.createGain();\r\n        } else {\r\n            this.gainNode = this.ac.createGainNode();\r\n        }\r\n        // Add the gain node to the graph\r\n        this.gainNode.connect(this.ac.destination);\r\n    }\r\n\r\n    /**\r\n     * Set the sink id for the media player\r\n     *\r\n     * @param {string} deviceId String value representing audio device id.\r\n     * @returns {Promise} A Promise that resolves to `undefined` when there\r\n     * are no errors.\r\n     */\r\n    setSinkId(deviceId) {\r\n        if (deviceId) {\r\n            /**\r\n             * The webaudio API doesn't currently support setting the device\r\n             * output. Here we create an HTMLAudioElement, connect the\r\n             * webaudio stream to that element and setSinkId there.\r\n             */\r\n            let audio = new window.Audio();\r\n            if (!audio.setSinkId) {\r\n                return Promise.reject(\r\n                    new Error('setSinkId is not supported in your browser')\r\n                );\r\n            }\r\n            audio.autoplay = true;\r\n            var dest = this.ac.createMediaStreamDestination();\r\n            this.gainNode.disconnect();\r\n            this.gainNode.connect(dest);\r\n            audio.srcObject = dest.stream;\r\n\r\n            return audio.setSinkId(deviceId);\r\n        } else {\r\n            return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set the audio volume\r\n     *\r\n     * @param {number} value A floating point value between 0 and 1.\r\n     */\r\n    setVolume(value) {\r\n        this.gainNode.gain.setValueAtTime(value, this.ac.currentTime);\r\n    }\r\n\r\n    /**\r\n     * Get the current volume\r\n     *\r\n     * @return {number} value A floating point value between 0 and 1.\r\n     */\r\n    getVolume() {\r\n        return this.gainNode.gain.value;\r\n    }\r\n\r\n    /**\r\n     * Decode an array buffer and pass data to a callback\r\n     *\r\n     * @private\r\n     * @param {ArrayBuffer} arraybuffer The array buffer to decode\r\n     * @param {function} callback The function to call on complete.\r\n     * @param {function} errback The function to call on error.\r\n     */\r\n    decodeArrayBuffer(arraybuffer, callback, errback) {\r\n        if (!this.offlineAc) {\r\n            this.offlineAc = this.getOfflineAudioContext(\r\n                this.ac && this.ac.sampleRate ? this.ac.sampleRate : 44100\r\n            );\r\n        }\r\n        this.offlineAc.decodeAudioData(\r\n            arraybuffer,\r\n            data => callback(data),\r\n            errback\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Set pre-decoded peaks\r\n     *\r\n     * @param {number[]|Number.<Array[]>} peaks Peaks data\r\n     * @param {?number} duration Explicit duration\r\n     */\r\n    setPeaks(peaks, duration) {\r\n        if (duration != null) {\r\n            this.explicitDuration = duration;\r\n        }\r\n        this.peaks = peaks;\r\n    }\r\n\r\n    /**\r\n     * Set the rendered length (different from the length of the audio)\r\n     *\r\n     * @param {number} length The rendered length\r\n     */\r\n    setLength(length) {\r\n        // No resize, we can preserve the cached peaks.\r\n        if (this.mergedPeaks && length == 2 * this.mergedPeaks.length - 1 + 2) {\r\n            return;\r\n        }\r\n\r\n        this.splitPeaks = [];\r\n        this.mergedPeaks = [];\r\n        // Set the last element of the sparse array so the peak arrays are\r\n        // appropriately sized for other calculations.\r\n        const channels = this.buffer ? this.buffer.numberOfChannels : 1;\r\n        let c;\r\n        for (c = 0; c < channels; c++) {\r\n            this.splitPeaks[c] = [];\r\n            this.splitPeaks[c][2 * (length - 1)] = 0;\r\n            this.splitPeaks[c][2 * (length - 1) + 1] = 0;\r\n        }\r\n        this.mergedPeaks[2 * (length - 1)] = 0;\r\n        this.mergedPeaks[2 * (length - 1) + 1] = 0;\r\n    }\r\n\r\n    /**\r\n     * Compute the max and min value of the waveform when broken into <length> subranges.\r\n     *\r\n     * @param {number} length How many subranges to break the waveform into.\r\n     * @param {number} first First sample in the required range.\r\n     * @param {number} last Last sample in the required range.\r\n     * @return {number[]|Number.<Array[]>} Array of 2*<length> peaks or array of arrays of\r\n     * peaks consisting of (max, min) values for each subrange.\r\n     */\r\n    getPeaks(length, first, last) {\r\n        if (this.peaks) {\r\n            return this.peaks;\r\n        }\r\n        if (!this.buffer) {\r\n            return [];\r\n        }\r\n\r\n        first = first || 0;\r\n        last = last || length - 1;\r\n\r\n        this.setLength(length);\r\n\r\n        if (!this.buffer) {\r\n            return this.params.splitChannels\r\n                ? this.splitPeaks\r\n                : this.mergedPeaks;\r\n        }\r\n\r\n        /**\r\n         * The following snippet fixes a buffering data issue on the Safari\r\n         * browser which returned undefined It creates the missing buffer based\r\n         * on 1 channel, 4096 samples and the sampleRate from the current\r\n         * webaudio context 4096 samples seemed to be the best fit for rendering\r\n         * will review this code once a stable version of Safari TP is out\r\n         */\r\n        if (!this.buffer.length) {\r\n            const newBuffer = this.createBuffer(1, 4096, this.sampleRate);\r\n            this.buffer = newBuffer.buffer;\r\n        }\r\n\r\n        const sampleSize = this.buffer.length / length;\r\n        const sampleStep = ~~(sampleSize / 10) || 1;\r\n        const channels = this.buffer.numberOfChannels;\r\n        let c;\r\n\r\n        for (c = 0; c < channels; c++) {\r\n            const peaks = this.splitPeaks[c];\r\n            const chan = this.buffer.getChannelData(c);\r\n            let i;\r\n\r\n            for (i = first; i <= last; i++) {\r\n                const start = ~~(i * sampleSize);\r\n                const end = ~~(start + sampleSize);\r\n                /**\r\n                 * Initialize the max and min to the first sample of this\r\n                 * subrange, so that even if the samples are entirely\r\n                 * on one side of zero, we still return the true max and\r\n                 * min values in the subrange.\r\n                 */\r\n                let min = chan[start];\r\n                let max = min;\r\n                let j;\r\n\r\n                for (j = start; j < end; j += sampleStep) {\r\n                    const value = chan[j];\r\n\r\n                    if (value > max) {\r\n                        max = value;\r\n                    }\r\n\r\n                    if (value < min) {\r\n                        min = value;\r\n                    }\r\n                }\r\n\r\n                peaks[2 * i] = max;\r\n                peaks[2 * i + 1] = min;\r\n\r\n                if (c == 0 || max > this.mergedPeaks[2 * i]) {\r\n                    this.mergedPeaks[2 * i] = max;\r\n                }\r\n\r\n                if (c == 0 || min < this.mergedPeaks[2 * i + 1]) {\r\n                    this.mergedPeaks[2 * i + 1] = min;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this.params.splitChannels ? this.splitPeaks : this.mergedPeaks;\r\n    }\r\n\r\n    /**\r\n     * Get the position from 0 to 1\r\n     *\r\n     * @return {number} Position\r\n     */\r\n    getPlayedPercents() {\r\n        return this.state.getPlayedPercents.call(this);\r\n    }\r\n\r\n    /** @private */\r\n    disconnectSource() {\r\n        if (this.source) {\r\n            this.source.disconnect();\r\n        }\r\n    }\r\n    /**\r\n     * Destroy all references with WebAudio, disconnecting audio nodes and closing Audio Context\r\n     */\r\n    destroyWebAudio() {\r\n        this.disconnectFilters();\r\n        this.disconnectSource();\r\n        this.gainNode.disconnect();\r\n        this.scriptNode.disconnect();\r\n        this.analyser.disconnect();\r\n\r\n        // close the audioContext if closeAudioContext option is set to true\r\n        if (this.params.closeAudioContext) {\r\n            // check if browser supports AudioContext.close()\r\n            if (\r\n                typeof this.ac.close === 'function' &&\r\n                this.ac.state != 'closed'\r\n            ) {\r\n                this.ac.close();\r\n            }\r\n            // clear the reference to the audiocontext\r\n            this.ac = null;\r\n            // clear the actual audiocontext, either passed as param or the\r\n            // global singleton\r\n            if (!this.params.audioContext) {\r\n                window.WaveSurferAudioContext = null;\r\n            } else {\r\n                this.params.audioContext = null;\r\n            }\r\n            // clear the offlineAudioContext\r\n            window.WaveSurferOfflineAudioContext = null;\r\n        }\r\n    }\r\n    /**\r\n     * This is called when wavesurfer is destroyed\r\n     */\r\n    destroy() {\r\n        if (!this.isPaused()) {\r\n            this.pause();\r\n        }\r\n        this.unAll();\r\n        this.buffer = null;\r\n        this.destroyed = true;\r\n\r\n        this.destroyWebAudio();\r\n    }\r\n\r\n    /**\r\n     * Loaded a decoded audio buffer\r\n     *\r\n     * @param {Object} buffer Decoded audio buffer to load\r\n     */\r\n    load(buffer) {\r\n        this.startPosition = 0;\r\n        this.lastPlay = this.ac.currentTime;\r\n        this.buffer = buffer;\r\n        this.createSource();\r\n    }\r\n\r\n    /** @private */\r\n    createSource() {\r\n        this.disconnectSource();\r\n        this.source = this.ac.createBufferSource();\r\n\r\n        // adjust for old browsers\r\n        this.source.start = this.source.start || this.source.noteGrainOn;\r\n        this.source.stop = this.source.stop || this.source.noteOff;\r\n\r\n        this.source.playbackRate.setValueAtTime(\r\n            this.playbackRate,\r\n            this.ac.currentTime\r\n        );\r\n        this.source.buffer = this.buffer;\r\n        this.source.connect(this.analyser);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * some browsers require an explicit call to #resume before they will play back audio\r\n     */\r\n    resumeAudioContext() {\r\n        if (this.ac.state == 'suspended') {\r\n            this.ac.resume && this.ac.resume();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\r\n     *\r\n     * @return {boolean} Whether or not this backend is currently paused\r\n     */\r\n    isPaused() {\r\n        return this.state !== this.states[PLAYING];\r\n    }\r\n\r\n    /**\r\n     * Used by `wavesurfer.getDuration()`\r\n     *\r\n     * @return {number} Duration of loaded buffer\r\n     */\r\n    getDuration() {\r\n        if (this.explicitDuration) {\r\n            return this.explicitDuration;\r\n        }\r\n        if (!this.buffer) {\r\n            return 0;\r\n        }\r\n        return this.buffer.duration;\r\n    }\r\n\r\n    /**\r\n     * Used by `wavesurfer.seekTo()`\r\n     *\r\n     * @param {number} start Position to start at in seconds\r\n     * @param {number} end Position to end at in seconds\r\n     * @return {{start: number, end: number}} Object containing start and end\r\n     * positions\r\n     */\r\n    seekTo(start, end) {\r\n        if (!this.buffer) {\r\n            return;\r\n        }\r\n\r\n        this.scheduledPause = null;\r\n\r\n        if (start == null) {\r\n            start = this.getCurrentTime();\r\n            if (start >= this.getDuration()) {\r\n                start = 0;\r\n            }\r\n        }\r\n        if (end == null) {\r\n            end = this.getDuration();\r\n        }\r\n\r\n        this.startPosition = start;\r\n        this.lastPlay = this.ac.currentTime;\r\n\r\n        if (this.state === this.states[FINISHED]) {\r\n            this.setState(PAUSED);\r\n        }\r\n\r\n        return {\r\n            start: start,\r\n            end: end\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Get the playback position in seconds\r\n     *\r\n     * @return {number} The playback position in seconds\r\n     */\r\n    getPlayedTime() {\r\n        return (this.ac.currentTime - this.lastPlay) * this.playbackRate;\r\n    }\r\n\r\n    /**\r\n     * Plays the loaded audio region.\r\n     *\r\n     * @param {number} start Start offset in seconds, relative to the beginning\r\n     * of a clip.\r\n     * @param {number} end When to stop relative to the beginning of a clip.\r\n     */\r\n    play(start, end) {\r\n        if (!this.buffer) {\r\n            return;\r\n        }\r\n\r\n        // need to re-create source on each playback\r\n        this.createSource();\r\n\r\n        const adjustedTime = this.seekTo(start, end);\r\n\r\n        start = adjustedTime.start;\r\n        end = adjustedTime.end;\r\n\r\n        this.scheduledPause = end;\r\n\r\n        this.source.start(0, start);\r\n\r\n        this.resumeAudioContext();\r\n\r\n        this.setState(PLAYING);\r\n\r\n        this.fireEvent('play');\r\n    }\r\n\r\n    /**\r\n     * Pauses the loaded audio.\r\n     */\r\n    pause() {\r\n        this.scheduledPause = null;\r\n\r\n        this.startPosition += this.getPlayedTime();\r\n        this.source && this.source.stop(0);\r\n\r\n        this.setState(PAUSED);\r\n\r\n        this.fireEvent('pause');\r\n    }\r\n\r\n    /**\r\n     * Returns the current time in seconds relative to the audio-clip's\r\n     * duration.\r\n     *\r\n     * @return {number} The current time in seconds\r\n     */\r\n    getCurrentTime() {\r\n        return this.state.getCurrentTime.call(this);\r\n    }\r\n\r\n    /**\r\n     * Returns the current playback rate. (0=no playback, 1=normal playback)\r\n     *\r\n     * @return {number} The current playback rate\r\n     */\r\n    getPlaybackRate() {\r\n        return this.playbackRate;\r\n    }\r\n\r\n    /**\r\n     * Set the audio source playback rate.\r\n     *\r\n     * @param {number} value The playback rate to use\r\n     */\r\n    setPlaybackRate(value) {\r\n        value = value || 1;\r\n        if (this.isPaused()) {\r\n            this.playbackRate = value;\r\n        } else {\r\n            this.pause();\r\n            this.playbackRate = value;\r\n            this.play();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set a point in seconds for playback to stop at.\r\n     *\r\n     * @param {number} end Position to end at\r\n     * @version 3.3.0\r\n     */\r\n    setPlayEnd(end) {\r\n        this.scheduledPause = end;\r\n    }\r\n}\r\n"],"sourceRoot":""}