<?php

class PdfThumbnailsPlugin
{
    const META_KEY = 'PdfThumbnailsPlugin';
    
    /**
     * @var PdfThumbnailsPlugin
     */
    private static $instance;
    
    /**
     * @return PdfThumbnailsPlugin
     */
    public static function instance()
    {
        if (!self::$instance) {
            self::$instance = new self;
        }
        return self::$instance;
    }
    
    /**
     * Delete existing thumbnail if generated by this plugin and generate a new 
     * one from PDF.
     * 
     * @param int $attachmentId
     */
    public function regenerateThumbnail($attachmentId)
    {
        $thumbnailId = get_post_thumbnail_id($attachmentId);
        if ($thumbnailId && get_post_meta($thumbnailId, self::META_KEY, true)) {
            wp_delete_attachment($thumbnailId, true);
        }
        $this->generateThumbnail($attachmentId);
    }
    
    private function generateThumbnail($attachmentId)
    {
        $filename = get_attached_file($attachmentId);
        $basename = str_replace('.', '-', basename($filename)) . '-image.jpg';
        $uploaded = $this->uploadThumbnail($basename, $this->getThumbnailBlob($filename));
        if ($uploaded['error'] === false) {
            $this->insertThumbnailAttachment($attachmentId, $uploaded);
        }
    }
    
    private function uploadThumbnail($filename, $blob)
    {
        return wp_upload_bits($filename, null, $blob);
    }
    
    private function getThumbnailBlob($filename)
    {
        $blob = apply_filters('pdf_thumbnails_generate_image_blob', null, $filename);
        if ($blob) {
            return $blob;
        }
        $imagick = new Imagick($filename);
        $imagick->setIteratorIndex(0);
        $imagick->setImageFormat('jpg');
        return $imagick->getImageBlob();
    }
    
    private function insertThumbnailAttachment($attachmentId, $uploaded)
    {
        // Get the the original attachement
        $pdfAttachment = get_post($attachmentId);
        if (!$pdfAttachment) {
            return;
        }
        
        // Create thumbnail
        $attachment = array(
            'post_mime_type' => 'image/jpeg',
            'post_type' => 'attachment',
            'post_content' => '',
            'post_title' => $pdfAttachment->post_title . '-thumbnail',
            'post_parent' => $pdfAttachment->ID
        );
        $thumbnailId = wp_insert_attachment($attachment, $uploaded['file']);
        $thumbnailMetadata = wp_generate_attachment_metadata($thumbnailId, $uploaded['file']);
        wp_update_attachment_metadata($thumbnailId, $thumbnailMetadata);
        set_post_thumbnail($attachmentId, $thumbnailId);
        
        // Mark generated thumbnails for future reference
        update_post_meta($thumbnailId, self::META_KEY, true);
    }
}
