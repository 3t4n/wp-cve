(()=>{"use strict";var e={n:t=>{var s=t&&t.__esModule?()=>t.default:()=>t;return e.d(s,{a:s}),s},d:(t,s)=>{for(var c in s)e.o(s,c)&&!e.o(t,c)&&Object.defineProperty(t,c,{enumerable:!0,get:s[c]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{INITIAL_STATE:()=>r,STORE_NAME:()=>i,actions:()=>c,apiFetch:()=>F,clearFeedCache:()=>w,fetchRestApiAccounts:()=>m,fetchRestApiFeeds:()=>A,fetchRestApiSettings:()=>_,fetchRestApiUserProfile:()=>R,reducer:()=>s,resolvers:()=>n,selectors:()=>a,storeConfig:()=>z,useAccountsEntities:()=>T,useFeedsEntities:()=>b,useSettingsEntities:()=>E});var s={};e.r(s),e.d(s,{accounts:()=>d,default:()=>g,feeds:()=>u,settings:()=>l});var c={};e.r(c),e.d(c,{createAccount:()=>P,createFeed:()=>C,deleteAccount:()=>j,deleteFeed:()=>D,editFeed:()=>I,saveSettings:()=>q,setAccounts:()=>O,setFeeds:()=>N,setSettings:()=>k});var a={};e.r(a),e.d(a,{getAccounts:()=>M,getFeeds:()=>L,getSettings:()=>U});var n={};e.r(n),e.d(n,{getAccounts:()=>G,getFeeds:()=>x,getSettings:()=>H});const o=window.wp.data,i="qligg",r={accounts:{},feeds:[],settings:{}};function d(e=r.accounts,t){return"SET_ACCOUNTS"===t.type?t.payload:e}function u(e=r.feeds,t){return"SET_FEEDS"===t.type?t.payload:e}function l(e=r.settings,t){return"SET_SETTINGS"===t.type?t.payload:e}const g=(0,o.combineReducers)({accounts:d,feeds:u,settings:l}),h=window.lodash,p=window.wp.i18n,y=window.wp.notices,S=window.wp.apiFetch;var f=e.n(S);const v=qligg_store_routes;async function F(e){return f()(e).then((e=>(e.code,e))).catch((e=>{throw new Error(e)}))}const A=({method:e,data:t}={})=>F({path:v.feeds,method:e,data:t});function b(){const{createFeed:e,editFeed:t,deleteFeed:s}=(0,o.useDispatch)(i),{feeds:c,isResolvingFeeds:a,hasResolvedFeeds:n}=(0,o.useSelect)((e=>{const{isResolving:t,hasFinishedResolution:s,getFeeds:c}=e(i);return{feeds:Object.values(c()),isResolvingFeeds:t("getFeeds"),hasResolvedFeeds:s("getFeeds")}}),[]);return{feeds:c,isResolvingFeeds:a,hasResolvedFeeds:n,hasFeeds:!(!n||!Object.keys(c)?.length),createFeed:e,editFeed:t,deleteFeed:s}}function w({method:e,data:t}){return F({path:v.cache,method:e,data:t})}const m=({method:e,data:t}={})=>F({path:v.accounts,method:e,data:t}),R=({method:e,data:t})=>F({path:v.userProfile,method:e,data:t});function T(){const{createAccount:e,deleteAccount:t}=(0,o.useDispatch)(i),{accounts:s,isResolvingAccounts:c,hasResolvedAccounts:a}=(0,o.useSelect)((e=>{const{isResolving:t,hasFinishedResolution:s,getAccounts:c}=e(i);return{accounts:Object.values(c()),isResolvingAccounts:t("getAccounts"),hasResolvedAccounts:s("getAccounts")}}),[]);return{accounts:s,isResolvingAccounts:c,hasResolvedAccounts:a,hasAccounts:!(!a||!Object.keys(s)?.length),createAccount:e,deleteAccount:t}}const _=({method:e,data:t}={})=>F({path:v.settings,method:e,data:t});function E(){const{saveSettings:e}=(0,o.useDispatch)(i),{settings:t,isResolvingSettings:s,hasResolvedSettings:c}=(0,o.useSelect)((e=>{const{isResolving:t,hasFinishedResolution:s,getSettings:c}=e(i);return{settings:c(),isResolvingSettings:t("getSettings"),hasResolvedSettings:s("getSettings")}}),[]);return{settings:t,isResolvingSettings:s,hasResolvedSettings:c,hasSettings:!(!c||!Object.keys(t)?.length),saveSettings:e}}const O=e=>({type:"SET_ACCOUNTS",payload:e}),N=e=>({type:"SET_FEEDS",payload:e}),k=e=>({type:"SET_SETTINGS",payload:e}),P=e=>async({registry:t,dispatch:s,select:c})=>{const a=await m({method:"POST",data:e});if(a?.code)return t.dispatch(y.store).createSuccessNotice((0,p.sprintf)("%s: %s",a.code,a.message),{type:"snackbar"}),!1;const n=c.getAccounts();return s.setAccounts({...n,[a.id]:a}),t.dispatch(y.store).createSuccessNotice((0,p.__)("The account has been updated successfully.","insta-gallery"),{type:"snackbar"}),!0},j=e=>async({registry:t,dispatch:s,select:c})=>{const a=await m({method:"DELETE",data:{id:e}});if(a?.code)return t.dispatch(y.store).createSuccessNotice((0,p.sprintf)("%s: %s",a.code,a.message),{type:"snackbar"}),!1;const n=c.getAccounts(),o=(0,h.filter)(n,(t=>t.id!==e));return s.setAccounts({...o}),t.dispatch(y.store).createSuccessNotice((0,p.sprintf)((0,p.__)("The account %s has been deleted.","insta-gallery"),e),{type:"snackbar"}),!0},C=e=>async({registry:t,dispatch:s,select:c})=>{const a=await A({method:"POST",data:{feed:e}});if(a?.code)return t.dispatch(y.store).createSuccessNotice((0,p.sprintf)("%s: %s",a.code,a.message),{type:"snackbar"}),!1;const n=c.getFeeds();return n.push(a),s.setFeeds([...n]),t.dispatch(y.store).createSuccessNotice((0,p.__)("The feed has been created successfully.","insta-gallery"),{type:"snackbar"}),!0},D=e=>async({registry:t,dispatch:s,select:c})=>{const a=await A({method:"DELETE",data:{feed_settings:e}});if(a?.code)return t.dispatch(y.store).createSuccessNotice((0,p.sprintf)("%s: %s",a.code,a.message),{type:"snackbar"}),!1;const n=c.getFeeds().filter((t=>t.id!==e.id));return s.setFeeds([...n]),t.dispatch(y.store).createSuccessNotice((0,p.sprintf)((0,p.__)("The feed %s has been deleted.","insta-gallery"),e.id),{type:"snackbar"}),!0},I=e=>async({registry:t,dispatch:s,select:c})=>{const a=await A({method:"PATCH",data:{feed:e}});if(a?.code)return t.dispatch(y.store).createSuccessNotice((0,p.sprintf)("%s: %s",a.code,a.message),{type:"snackbar"}),!1;const n=c.getFeeds();return s.setFeeds([...n.map((t=>t.id===e.id?e:t))]),t.dispatch(y.store).createSuccessNotice((0,p.__)("The feed has been updated successfully.","insta-gallery"),{type:"snackbar"}),!0},q=e=>async({registry:t,dispatch:s})=>{const c=await _({method:"POST",data:e});return c?.code?(t.dispatch(y.store).createSuccessNotice((0,p.sprintf)("%s: %s",c.code,c.message),{type:"snackbar"}),!1):(s.setSettings({...e}),t.dispatch(y.store).createSuccessNotice((0,p.__)("Settings saved.","insta-gallery"),{type:"snackbar"}),!0)},M=(e,t)=>t&&e.accounts[t]?e.accounts[t]:e.accounts,L=(e,t)=>t&&e.feeds[t]?e.feeds[t]:e.feeds,U=e=>e.settings,G=async()=>{try{const e=await m(),t=Object.values(e),s=await Promise.all(t.map((async e=>{let t={};try{t=await R({method:"POST",data:{feedSettings:{account_id:e.id}}})}catch(e){console.log(e)}return delete t.id,{...e,...t}})));return O(s)}catch(e){console.error(e)}},x=async()=>{try{const e=await A();return N(Object.values(e))}catch(e){console.error(e)}},H=async()=>{try{const e=await _();return k(e)}catch(e){console.error(e)}},z={reducer:g,actions:c,selectors:a,resolvers:n},B=(0,o.createReduxStore)(i,z);(0,o.register)(B),(window.qligg=window.qligg||{}).store=t})();