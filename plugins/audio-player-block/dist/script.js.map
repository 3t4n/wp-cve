{"version":3,"file":"script.js","mappings":"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","sources":["webpack://mp3-player-block/./src/MP3Player.js","webpack://mp3-player-block/./src/script.js"],"sourcesContent":["const defaultCoverImg = 'https://i.ibb.co/1qDChXj/cassette-tape-square.jpg';\r\n\r\nconst MP3Player = (selector, songs = []) => {\r\n\tconst element = typeof selector == 'string' ? document.querySelector(selector) : selector;\r\n\r\n\tconst cover = element.querySelector('#cover');\r\n\tconst disc = element.querySelector('#disc');\r\n\tconst title = element.querySelector('#title');\r\n\tconst artist = element.querySelector('#artist');\r\n\tconst progressContainer = element.querySelector('#progressContainer');\r\n\tconst progress = element.querySelector('#progress');\r\n\tconst timer = element.querySelector('#timer');\r\n\tconst duration = element.querySelector('#duration');\r\n\tconst prev = element.querySelector('#prev');\r\n\tconst play = element.querySelector('#play');\r\n\tconst next = element.querySelector('#next');\r\n\tlet songIndex = 0;\r\n\r\n\t// Load the given song\r\n\tconst loadSong = (song) => {\r\n\t\tcover.src = song.cover?.url || defaultCoverImg;\r\n\t\tdisc.src = song.audio?.url;\r\n\t\ttitle.textContent = song.title;\r\n\t\tartist.textContent = song.artist;\r\n\t\t// duration.textContent = song.duration;\r\n\t\tdisc.addEventListener('loadedmetadata', function () {\r\n\t\t\tduration.innerHTML = toHHMMSS(disc.duration);\r\n\t\t});\r\n\t};\r\n\tloadSong(songs[songIndex]);\r\n\r\n\t// Toggle play and pause\r\n\tfunction playPauseMedia() {\r\n\t\tif (disc.paused) {\r\n\t\t\tconst allAudioEls = document.querySelectorAll('audio');\r\n\t\t\tallAudioEls.forEach(audioEl => audioEl?.pause());\r\n\r\n\t\t\tdisc.play();\r\n\t\t} else {\r\n\t\t\tdisc.pause();\r\n\t\t}\r\n\t}\r\n\r\n\t// Convert time\r\n\tfunction toHHMMSS(time) {\r\n\t\tvar sec_num = parseInt(time, 10); // don't forget the second param\r\n\t\tvar hours = Math.floor(sec_num / 3600);\r\n\t\tvar minutes = Math.floor((sec_num - hours * 3600) / 60);\r\n\t\tvar seconds = sec_num - hours * 3600 - minutes * 60;\r\n\r\n\t\tif (hours < 10) {\r\n\t\t\thours = '0' + hours;\r\n\t\t}\r\n\t\tif (minutes < 10) {\r\n\t\t\tminutes = '0' + minutes;\r\n\t\t}\r\n\t\tif (seconds < 10) {\r\n\t\t\tseconds = '0' + seconds;\r\n\t\t}\r\n\r\n\t\treturn `${parseInt(hours) > 0 ? `${hours}:` : ''}${minutes}:${seconds}`;\r\n\t}\r\n\r\n\t// Update icon\r\n\tfunction updatePlayPauseIcon() {\r\n\t\tif (disc.paused) {\r\n\t\t\tplay.classList.remove('pauseBtn');\r\n\t\t\tplay.classList.add('playBtn');\r\n\t\t} else {\r\n\t\t\tplay.classList.remove('playBtn');\r\n\t\t\tplay.classList.add('pauseBtn');\r\n\t\t}\r\n\t}\r\n\r\n\t// Update progress bar\r\n\tfunction updateProgress() {\r\n\t\tprogress.style.width = (disc.currentTime / disc.duration) * 100 + '%';\r\n\r\n\t\tvar hours = Math.floor(disc.currentTime / 3600);\r\n\t\tvar minutes = Math.floor((disc.currentTime - hours * 3600) / 60);\r\n\t\tvar seconds = Math.floor(disc.currentTime - hours * 3600 - minutes * 60);\r\n\t\t// let minutes = Math.floor(disc.currentTime / 60);\r\n\t\t// let seconds = Math.floor(disc.currentTime % 60);\r\n\t\tif (hours < 10) {\r\n\t\t\thours = '0' + hours;\r\n\t\t}\r\n\t\tif (minutes < 10) {\r\n\t\t\tminutes = '0' + minutes;\r\n\t\t}\r\n\t\tif (seconds < 10) {\r\n\t\t\tseconds = '0' + seconds;\r\n\t\t}\r\n\t\ttimer.textContent = `${parseInt(hours) > 0 ? `${hours}:` : ''}${minutes}:${seconds}`;\r\n\t}\r\n\r\n\t// Reset the progress\r\n\tfunction resetProgress() {\r\n\t\tprogress.style.width = 0 + '%';\r\n\t\ttimer.textContent = '0:00';\r\n\t}\r\n\r\n\t// Go to previous song\r\n\tfunction gotoPreviousSong() {\r\n\t\tif (songIndex === 0) {\r\n\t\t\tsongIndex = songs.length - 1;\r\n\t\t} else {\r\n\t\t\tsongIndex = songIndex - 1;\r\n\t\t}\r\n\r\n\t\tconst isDiscPlayingNow = !disc.paused;\r\n\t\tloadSong(songs[songIndex]);\r\n\t\tresetProgress();\r\n\t\tif (isDiscPlayingNow) {\r\n\t\t\tplayPauseMedia();\r\n\t\t}\r\n\t}\r\n\r\n\t// Go to next song\r\n\tfunction gotoNextSong(playImmediately) {\r\n\t\tconst goToNext = () => {\r\n\t\t\tif (songIndex === songs.length - 1) {\r\n\t\t\t\tsongIndex = 0;\r\n\t\t\t} else {\r\n\t\t\t\tsongIndex = songIndex + 1;\r\n\t\t\t}\r\n\r\n\t\t\tconst isDiscPlayingNow = !disc.paused;\r\n\t\t\tloadSong(songs[songIndex]);\r\n\t\t\tresetProgress();\r\n\t\t\tif (isDiscPlayingNow || playImmediately) {\r\n\t\t\t\tplayPauseMedia();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (songIndex < songs.length - 1) {\r\n\t\t\tgoToNext()\r\n\t\t} // Stop at end of album\r\n\t}\r\n\r\n\t// Change song progress when clicked on progress bar\r\n\tfunction setProgress(ev) {\r\n\t\tconst totalWidth = this.clientWidth;\r\n\t\tconst clickWidth = ev.offsetX;\r\n\t\tconst clickWidthRatio = clickWidth / totalWidth;\r\n\t\tdisc.currentTime = clickWidthRatio * disc.duration;\r\n\t}\r\n\r\n\t// Play/Pause when play button clicked\r\n\tplay.addEventListener('click', playPauseMedia);\r\n\r\n\t// Various events on disc\r\n\tdisc.addEventListener('play', updatePlayPauseIcon);\r\n\tdisc.addEventListener('pause', updatePlayPauseIcon);\r\n\tdisc.addEventListener('timeupdate', updateProgress);\r\n\tdisc.addEventListener('ended', gotoNextSong.bind(null, true));\r\n\r\n\t// Go to next song when next button clicked\r\n\tprev.addEventListener('click', gotoPreviousSong);\r\n\r\n\t// Go to previous song when previous button clicked\r\n\tnext.addEventListener('click', gotoNextSong.bind(null, false));\r\n\r\n\t// Move to different place in the song\r\n\tprogressContainer.addEventListener('click', setProgress);\r\n};\r\nexport default MP3Player;","import './style.scss';\r\nimport MP3Player from './MP3Player';\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n\tconst mp3PlayerEls = document.querySelectorAll('.wp-block-bpmp-mp3-player');\r\n\tmp3PlayerEls.forEach(mp3PlayerEl => {\r\n\t\tconst attributes = JSON.parse(mp3PlayerEl.dataset.attributes);\r\n\t\tconst { audioProperties } = attributes;\r\n\r\n\t\tMP3Player(mp3PlayerEl, audioProperties);\r\n\r\n\t\tmp3PlayerEl?.removeAttribute('data-attributes');\r\n\t});\r\n});"],"names":["defaultCoverImg","selector","songs","element","document","querySelector","cover","disc","title","artist","progressContainer","progress","timer","duration","prev","play","next","songIndex","loadSong","song","src","url","audio","textContent","addEventListener","innerHTML","toHHMMSS","playPauseMedia","paused","querySelectorAll","forEach","audioEl","pause","time","sec_num","parseInt","hours","Math","floor","minutes","seconds","updatePlayPauseIcon","classList","remove","add","updateProgress","style","width","currentTime","resetProgress","gotoPreviousSong","length","isDiscPlayingNow","gotoNextSong","playImmediately","goToNext","setProgress","ev","totalWidth","this","clientWidth","clickWidthRatio","offsetX","bind","mp3PlayerEl","audioProperties","JSON","parse","dataset","attributes","MP3Player","removeAttribute"],"sourceRoot":""}