<?php

namespace PlatiOnlinePO6\Inc\Core;

/**
 * @link              https://plati.online
 * @since             6.0.9
 * @package           PlatiOnlinePO6
 *
 */
class WC_PlatiOnline_PR extends \WC_Payment_Gateway
{
    public function __construct()
    {
        $this->id = 'plationline_pr';
        $this->method_title = __('PlatiOnline Posta Romana', 'plationline');
        $this->method_description = __('Process payments with PlatiOnline Posta Romana', 'plationline');
        $this->has_fields = false;
        $this->icon = 'https://media.plationline.ro/images/sigle/PO_Posta_wide.png';
        $this->init_form_fields();
        $this->init_settings();
        $this->title = $this->settings['title'];
        $this->description = $this->settings['description'];
        add_action('woocommerce_update_options_payment_gateways_' . $this->id, array($this, 'process_admin_options'));
        add_filter('woocommerce_thankyou_' . $this->id, array('PlatiOnlinePO6\Inc\Core\WC_PlatiOnline_Process', 'po_order_received'), 10, 1);
        if (!$this->is_valid_for_use()) {
            $this->enabled = 'no';
        }
    }

    public function is_valid_for_use()
    {
        return in_array(get_woocommerce_currency(), array('RON'));
    }

    public function init_settings()
    {
        parent::init_settings(); // TODO: Change the autogenerated stub
    }

    public function init_form_fields()
    {
        $this->form_fields = array(
            'enabled' => array(
                'title' => __('Active', 'plationline'),
                'type' => 'checkbox',
                'label' => __('Activate cash payment by Posta Romana', 'plationline'),
                'default' => 'no',
            ),
            'title' => array(
                'title' => __('Payment method title', 'plationline'),
                'type' => 'text',
                'description' => __('This title will be shown in frontend to the customer', 'plationline'),
                'default' => __('Cash payment with barcode at Posta Romana', 'plationline'),
            ),
            'description' => array(
                'title' => __('Payment method description', 'plationline'),
                'type' => 'textarea',
                'default' => __('You will be redirected to PlatiOnline page', 'plationline'),
            ),
        );
    }

    /**
     *  There are no payment fields for plationline, but we want to show the description if set.
     **/
    public function payment_fields()
    {
        if ($this->description) {
            echo wpautop(wptexturize($this->description));
        }
    }

    /**
     * Process the payment and return the result
     **/
    public function process_payment($order_id)
    {
        $order = new \WC_Order($order_id);
        $order->update_status('pending', __('PO Pending Authorization', 'plationline'));
        return array('result' => 'success', 'redirect' => $order->get_checkout_payment_url(true));
    }
}
