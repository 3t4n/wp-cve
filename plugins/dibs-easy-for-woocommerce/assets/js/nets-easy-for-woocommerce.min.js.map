{"version":3,"file":"nets-easy-for-woocommerce.min.js","mappings":"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","sources":["webpack://dibs-easy-for-woocommerce/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://dibs-easy-for-woocommerce/./assets/js/nets-easy-for-woocommerce.js"],"sourcesContent":["export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","/**\n * @member wcDibsEasy\n *\n */\njQuery(function ($) {\n    if (typeof wcDibsEasy === \"undefined\") {\n        return false\n    }\n    /**\n     * The main object.\n     *\n     * @type {Object} dibsEasyForWoocommerce\n     */\n    const dibsEasyForWoocommerce = {\n        bodyEl: $(\"body\"),\n        paymentMethodEl: $('input[name=\"payment_method\"]'),\n        dibsCheckout: null,\n        blocked: false,\n        selectAnotherSelector: \"#dibs-easy-select-other\",\n        checkoutInitiated: wcDibsEasy.checkoutInitiated,\n        dibsOrderProcessing: false,\n        checkoutFormSelector: \"form.checkout\",\n        shippingSelector: \".woocommerce-checkout-review-order-table\",\n        standardWooFields: wcDibsEasy.standard_woo_checkout_fields,\n        wooTerms: \"form.checkout #terms\",\n\n        /**\n         * Initialize the gateway\n         */\n        init() {\n            $(document).ready(dibsEasyForWoocommerce.loadDibs)\n            dibsEasyForWoocommerce.bodyEl.on(\n                \"click\",\n                dibsEasyForWoocommerce.selectAnotherSelector,\n                dibsEasyForWoocommerce.changeFromDibsEasy\n            )\n        },\n\n        /**\n         * Check if DIBS Easy is the selected gateway.\n         */\n        dibsIsSelected() {\n            if (dibsEasyForWoocommerce.paymentMethodEl.length > 0) {\n                dibsEasyForWoocommerce.paymentMethod = dibsEasyForWoocommerce.paymentMethodEl.filter(\":checked\").val()\n                if (\"dibs_easy\" === dibsEasyForWoocommerce.paymentMethod) {\n                    return true\n                }\n            }\n            return false\n        },\n        /**\n         * Triggers on document ready.\n         */\n        loadDibs() {\n            if (dibsEasyForWoocommerce.dibsIsSelected()) {\n                dibsEasyForWoocommerce.moveExtraCheckoutFields()\n                dibsEasyForWoocommerce.initDibsCheckout()\n                dibsEasyForWoocommerce.bodyEl.on(\"update_checkout\", dibsEasyForWoocommerce.updateCheckout)\n                dibsEasyForWoocommerce.bodyEl.on(\"updated_checkout\", dibsEasyForWoocommerce.updatedCheckout)\n            }\n        },\n\n        /**\n         * Triggers after a successful payment.\n         *\n         * @param {Object} response\n         */\n        paymentCompleted(response) {\n            dibsEasyForWoocommerce.logToFile(`Payment completed is triggered with payment id: ${response.paymentId}`)\n            const redirectUrl = sessionStorage.getItem(\"redirectNets\")\n            if (redirectUrl) {\n                window.location.href = redirectUrl\n            }\n        },\n\n        /**\n         *  Display login error\n         *\n         * @param {string} message\n         */\n        displayMustLoginError(message) {\n            const mustLoginClass = \"woocommerce-NoticeGroupwoocommerce-NoticeGroup-updateOrderReview\"\n            const mustLoginNotice = `<div class=\"${mustLoginClass}\">\n\t\t\t\t<ul class=\"woocommerce-error\" role=\"alert\">\n\t\t\t\t\t<li>${message}</li>\n\t\t\t\t</ul>\n\t\t\t</div>`\n            dibsEasyForWoocommerce.checkoutFormSelector.prepend(mustLoginNotice)\n        },\n        /**\n         * Update WC form if needed\n         *\n         * @param {Object} data\n         */\n        updateAddress(data) {\n            if (\"yes\" === data.updateNeeded) {\n                $(\"#billing_country\").val(data.country)\n                $(\"#shipping_country\").val(data.country)\n                $(\"#billing_postcode\").val(data.postCode)\n                $(\"#shipping_postcode\").val(data.postCode)\n            }\n\n            if (\"yes\" === data.mustLogin) {\n                // Customer might need to log in. Inform customer and freeze DIBS checkout.\n                dibsEasyForWoocommerce.displayMustLoginError(data.mustLoginMessage)\n                dibsEasyForWoocommerce.dibsCheckout.freezeCheckout()\n\n                const etop = dibsEasyForWoocommerce.checkoutFormSelector.offset().top\n                $(\"html, body\").animate(\n                    {\n                        scrollTop: etop,\n                    },\n                    1000\n                )\n            } else {\n                // All good release checkout and trigger update_checkout event\n                dibsEasyForWoocommerce.dibsCheckout.thawCheckout()\n                $(document.body).trigger(\"update_checkout\")\n            }\n        },\n\n        updateCheckout() {\n            console.log(\"update_checkout\")\n            if (window.Dibs !== undefined) {\n                // lock iframe\n                dibsEasyForWoocommerce.dibsCheckout.freezeCheckout()\n            }\n        },\n        updatedCheckout() {\n            console.log(\"updated_checkout\")\n            if (window.Dibs !== undefined) {\n                // unlock iframe\n                dibsEasyForWoocommerce.dibsCheckout.thawCheckout()\n                $(\"#dibs-order-review\").unblock()\n            }\n        },\n        /**\n         * Triggers whenever customer updates address information\n         *\n         * @param {Object} address\n         */\n        addressChanged(address) {\n            dibsEasyForWoocommerce.logToFile(\"Address changed is triggered.\")\n            if (address) {\n                console.log(\"address-changed\")\n                console.log(address)\n                $.ajax({\n                    type: \"POST\",\n                    dataType: \"json\",\n                    async: true,\n                    url: wcDibsEasy.customer_address_updated_url,\n                    data: {\n                        action: \"customer_address_updated\",\n                        address,\n                        nonce: wcDibsEasy.nets_checkout_nonce,\n                    },\n                    success(response) {},\n                    error(response) {},\n                    complete(response) {\n                        console.log(\"COMPLETED\")\n                        console.log(\"customer_address_updated \")\n                        console.log(response.responseJSON.data)\n                        dibsEasyForWoocommerce.updateAddress(response.responseJSON.data)\n                        // Scroll to top if\n                        if (wcDibsEasy.isMobile) {\n                            $(\"html, body\").animate(\n                                {\n                                    scrollTop: $(wcDibsEasy.shippingSelector).offset().top - 10,\n                                },\n                                1000\n                            )\n                        }\n                    },\n                })\n            }\n        },\n        /**\n         * Triggers whenever customer updates address information from ApplePay windoww.\n         *\n         */\n        applePayAddressChanged(address) {\n            console.log(\"applepay-contact-updated\", address)\n            dibsEasyForWoocommerce.logToFile(\"ApplePay address changed is triggered.\")\n            if (address) {\n                console.log(\"applepay-contact-updated\")\n                $.ajax({\n                    type: \"POST\",\n                    dataType: \"json\",\n                    async: true,\n                    url: wcDibsEasy.customer_address_updated_url,\n                    data: {\n                        action: \"customer_address_updated\",\n                        address,\n                        nonce: wcDibsEasy.nets_checkout_nonce,\n                    },\n                    success(response) {},\n                    error(response) {},\n                    complete(response) {\n                        console.log(\"COMPLETED\")\n                        console.log(\"customer_address_updated \")\n                        console.log(response.responseJSON.data)\n                        dibsEasyForWoocommerce.updateAddress(response.responseJSON.data)\n                        dibsEasyForWoocommerce.dibsCheckout.completeApplePayShippingContactUpdate(\n                            response.responseJSON.data.cart_total\n                        )\n                    },\n                })\n            }\n        },\n        /**\n         * Init Dibs Easy Checkout\n         */\n        initDibsCheckout() {\n            // Constructs a new Checkout object.\n            dibsEasyForWoocommerce.dibsCheckout = new Dibs.Checkout({\n                checkoutKey: wcDibsEasy.privateKey,\n                paymentId: wcDibsEasy.dibs_payment_id,\n                containerId: \"dibs-complete-checkout\",\n                language: wcDibsEasy.locale,\n            })\n            dibsEasyForWoocommerce.dibsCheckout.on(\"pay-initialized\", dibsEasyForWoocommerce.getDibsEasyOrder)\n            dibsEasyForWoocommerce.dibsCheckout.on(\"payment-completed\", dibsEasyForWoocommerce.paymentCompleted)\n            dibsEasyForWoocommerce.dibsCheckout.on(\"address-changed\", dibsEasyForWoocommerce.addressChanged)\n            dibsEasyForWoocommerce.dibsCheckout.on(\n                \"applepay-contact-updated\",\n                dibsEasyForWoocommerce.applePayAddressChanged\n            )\n        },\n        /**\n         * Triggers when customer clicks the pay button.\n         * Gets the Nets Easy order and starts the order submission\n         *\n         * @param {string} paymentId\n         */\n        getDibsEasyOrder(paymentId) {\n            dibsEasyForWoocommerce.dibsOrderProcessing = true\n            dibsEasyForWoocommerce.logToFile(`Pay initialized is triggered with payment id: ${paymentId}`)\n            $(document.body).trigger(\"dibs_pay_initialized\")\n            $.ajax({\n                type: \"POST\",\n                dataType: \"json\",\n                async: true,\n                url: wcDibsEasy.get_order_data_url,\n                data: {\n                    action: \"payment_success\",\n                    paymentId,\n                    nonce: wcDibsEasy.nets_checkout_nonce,\n                },\n                success(data) {\n                    console.log(data)\n                    if (false === data.success) {\n                        console.log(\"PaymentID already exist in order\")\n                        console.log(data)\n                        dibsEasyForWoocommerce.failOrder(\n                            \"ajax-error\",\n                            '<div class=\"woocommerce-error\">' + data.data + \"</div>\"\n                        )\n                        if (data.data.redirect) {\n                            window.location.href = data.data.redirect\n                        }\n                    } else {\n                        dibsEasyForWoocommerce.setAddressData(data)\n                    }\n                },\n                error(data) {\n                    console.log(data, \"error_data\")\n                },\n                complete(data) {},\n            })\n        },\n        /**\n         * Sets the customer data.\n         *\n         * @param {Object} data\n         */\n        setAddressData(data) {\n            dibsEasyForWoocommerce.logToFile('Received \"customer data\" from Nets Easy')\n            const consumer = data.data.payment.consumer\n            const { billingAddress, shippingAddress } = consumer\n\n            // billingAddress have country with 3 letters.\n\n            // check do we have data\n            const hasBillingData = typeof billingAddress === \"object\" && !Array.isArray(billingAddress)\n            // Use shipping data if billing data do not exist.\n            $(\"#billing_address_1\").val(hasBillingData ? billingAddress.addressLine1 : shippingAddress.addressLine1)\n            $(\"#billing_postcode\").val(hasBillingData ? billingAddress.postalCode : shippingAddress.postalCode)\n            $(\"#billing_city\").val(hasBillingData ? billingAddress.city : shippingAddress.city)\n            $(\"#billing_country\").val(shippingAddress.country)\n\n            $(\"#shipping_address_1\").val(shippingAddress.addressLine1)\n            $(\"#shipping_postcode\").val(shippingAddress.postalCode)\n            $(\"#shipping_city\").val(shippingAddress.city)\n            $(\"#shipping_country\").val(shippingAddress.country)\n\n            if (consumer.company.hasOwnProperty(\"name\")) {\n                // B2B purchase\n                const company = consumer.company\n                const { firstName, lastName, email, phoneNumber } = company.contactDetails\n                const { prefix, number } = phoneNumber\n                $(\"#billing_company\").val(company.name)\n                $(\"#shipping_company\").val(company.name)\n                $(\"#billing_first_name\").val(firstName)\n                $(\"#billing_last_name\").val(lastName)\n                $(\"#shipping_first_name\").val(firstName)\n                $(\"#shipping_last_name\").val(lastName)\n                $(\"#billing_email\").val(email)\n                $(\"#billing_phone\").val(`${prefix}${number}`)\n                // trigger events for 3rd part plugins.\n                $(\"#billing_country\").change()\n                $(\"#billing_email\").change()\n                $(\"#billing_email\").blur()\n            } else {\n                // B2C purchase\n                const { firstName, lastName, email, phoneNumber } = consumer.privatePerson\n                const { prefix, number } = phoneNumber\n                $(\"#billing_company\").val(\"\")\n                $(\"#shipping_company\").val(\"\")\n                $(\"#billing_first_name\").val(firstName)\n                $(\"#billing_last_name\").val(lastName)\n                $(\"#shipping_first_name\").val(firstName)\n                $(\"#shipping_last_name\").val(lastName)\n                $(\"#billing_email\").val(email)\n                // trigger events for 3rd part plugins.\n                $(\"#billing_email\").change()\n                $(\"#billing_email\").blur()\n                $(\"#billing_phone\").val(`${prefix}${number}`)\n            }\n\n            // eslint-disable-next-line eqeqeq\n            if (shippingAddress.addressLine2 != null) {\n                $(\"#billing_address_2\").val(shippingAddress.addressLine2)\n                $(\"#shipping_address_2\").val(shippingAddress.addressLine2)\n            }\n\n            // Check Terms checkbox, if it exists\n            if ($(dibsEasyForWoocommerce.wooTerms).length > 0) {\n                $(dibsEasyForWoocommerce.wooTerms).prop(\"checked\", true)\n            }\n            $(\"input#ship-to-different-address-checkbox\").prop(\"checked\", true)\n            dibsEasyForWoocommerce.submitOrder()\n        },\n        /**\n         * Submit the order using the WooCommerce AJAX function.\n         */\n        submitOrder() {\n            $(\".woocommerce-checkout-review-order-table\").block({\n                message: null,\n                overlayCSS: {\n                    background: \"#fff\",\n                    opacity: 0.6,\n                },\n            })\n            $.ajax({\n                type: \"POST\",\n                url: wcDibsEasy.submitOrder,\n                data: $(\"form.checkout\").serialize(),\n                dataType: \"json\",\n                success(data) {\n                    try {\n                        if (\"success\" === data.result) {\n                            dibsEasyForWoocommerce.logToFile(\"Successfully placed order.\")\n                            window.sessionStorage.setItem(\"redirectNets\", data.redirect)\n                            dibsEasyForWoocommerce.dibsCheckout.send(\"payment-order-finalized\", true)\n                        } else {\n                            throw \"Result failed\"\n                        }\n                    } catch (err) {\n                        if (data.messages) {\n                            dibsEasyForWoocommerce.logToFile(\"Checkout error | \" + data.messages)\n                            dibsEasyForWoocommerce.failOrder(\"submission\", data.messages)\n                        } else {\n                            dibsEasyForWoocommerce.logToFile(\"Checkout error | No message\")\n                            dibsEasyForWoocommerce.failOrder(\n                                \"submission\",\n                                '<div class=\"woocommerce-error\">' + \"Checkout error\" + \"</div>\"\n                            )\n                        }\n                    }\n                },\n                error(data) {\n                    try {\n                        dibsEasyForWoocommerce.logToFile(\"AJAX error | \" + JSON.stringify(data))\n                    } catch (e) {\n                        dibsEasyForWoocommerce.logToFile(\"AJAX error | Failed to parse error message.\")\n                    }\n                    dibsEasyForWoocommerce.failOrder(\n                        \"ajax-error\",\n                        '<div class=\"woocommerce-error\">Internal Server Error</div>'\n                    )\n                },\n            })\n        },\n        /**\n         * When the customer changes from Dibs Easy to other payment methods.\n         *\n         * @param {Event} e\n         */\n        changeFromDibsEasy(e) {\n            e.preventDefault()\n            $(dibsEasyForWoocommerce.checkoutFormSelector).block({\n                message: null,\n                overlayCSS: {\n                    background: \"#fff\",\n                    opacity: 0.6,\n                },\n            })\n            $.ajax({\n                type: \"POST\",\n                dataType: \"json\",\n                async: true,\n                url: wcDibsEasy.change_payment_method_url,\n                data: {\n                    action: \"dibs_change_payment_method\",\n                    dibs_easy: false,\n                    nonce: wcDibsEasy.nets_checkout_nonce,\n                },\n                success(data) {},\n                error(data) {},\n                complete(data) {\n                    console.log(\"Change payment method success\")\n                    console.log(data.responseJSON.data.redirect)\n                    dibsEasyForWoocommerce.bodyEl.removeClass(\"dibs-selected\")\n                    window.location.href = data.responseJSON.data.redirect\n                },\n            })\n        },\n        /**\n         * Moves all non-standard fields to the extra checkout fields.\n         */\n        moveExtraCheckoutFields() {\n            // Move order comments.\n            $(\".woocommerce-additional-fields\").appendTo(\"#dibs-extra-checkout-fields\")\n\n            const form = $('form[name=\"checkout\"] input, form[name=\"checkout\"] select, textarea')\n            for (let i = 0; i < form.length; i++) {\n                const name = form[i].name\n                const fields = dibsEasyForWoocommerce.standardWooFields\n                // Check if this is a standard field.\n                if ($.inArray(name, fields) === -1) {\n                    // This is not a standard Woo field, move to our div.\n                    $(\"p#\" + name + \"_field\").appendTo(\"#dibs-extra-checkout-fields\")\n                }\n            }\n        },\n        /**\n         * Logs the message to the Dibs Easy log in WooCommerce.\n         *\n         * @param {string} message\n         */\n        logToFile(message) {\n            $.ajax({\n                url: wcDibsEasy.log_to_file_url,\n                type: \"POST\",\n                dataType: \"json\",\n                data: {\n                    message,\n                    nonce: wcDibsEasy.log_to_file_nonce,\n                },\n            })\n        },\n        /**\n         * Fails the order with Dibs Easy on a checkout error and timeout.\n         *\n         * @param {string} event\n         * @param {string} errorMessage\n         */\n        failOrder(event, errorMessage) {\n            const errorClasses = \"woocommerce-NoticeGroup woocommerce-NoticeGroup-checkout\"\n            const errorWrapper = `<div class=\"${errorClasses}\">${errorMessage}</div>`\n\n            // Send false and cancel\n            dibsEasyForWoocommerce.dibsCheckout.send(\"payment-order-finalized\", false)\n            // Renable the form.\n            dibsEasyForWoocommerce.bodyEl.trigger(\"updated_checkout\")\n            $(dibsEasyForWoocommerce.checkoutFormSelector).removeClass(\"processing\")\n            // $( dibsEasyForWoocommerce.checkoutFormSelector ).unblock();\n            // $( '.woocommerce-checkout-review-order-table' ).unblock();\n\n            // Print error messages, and trigger checkout_error, and scroll to notices.\n            $(\".woocommerce-NoticeGroup-checkout,\" + \".woocommerce-error,\" + \".woocommerce-message\").remove()\n\n            $(dibsEasyForWoocommerce.checkoutFormSelector).prepend(errorWrapper)\n            // $( dibsEasyForWoocommerce.checkoutFormSelector )\n            // \t.removeClass( 'processing' )\n            // \t.unblock();\n            $(dibsEasyForWoocommerce.checkoutFormSelector)\n                .find(\".input-text, select, input:checkbox\")\n                .trigger(\"validate\")\n                .blur()\n            $(document.body).trigger(\"checkout_error\", [errorMessage])\n            $(\"html, body\").animate(\n                {\n                    scrollTop: $(dibsEasyForWoocommerce.checkoutFormSelector).offset().top - 100,\n                },\n                1000\n            )\n        },\n    }\n\n    dibsEasyForWoocommerce.init()\n})\n"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","jQuery","$","wcDibsEasy","dibsEasyForWoocommerce","bodyEl","paymentMethodEl","dibsCheckout","blocked","selectAnotherSelector","checkoutInitiated","dibsOrderProcessing","checkoutFormSelector","shippingSelector","standardWooFields","standard_woo_checkout_fields","wooTerms","init","document","ready","loadDibs","on","changeFromDibsEasy","dibsIsSelected","length","paymentMethod","filter","val","moveExtraCheckoutFields","initDibsCheckout","updateCheckout","updatedCheckout","paymentCompleted","response","logToFile","concat","paymentId","redirectUrl","sessionStorage","getItem","window","location","href","displayMustLoginError","message","mustLoginNotice","prepend","updateAddress","data","updateNeeded","country","postCode","mustLogin","mustLoginMessage","freezeCheckout","etop","offset","top","animate","scrollTop","thawCheckout","body","trigger","console","log","undefined","Dibs","unblock","addressChanged","address","ajax","type","dataType","async","url","customer_address_updated_url","action","nonce","nets_checkout_nonce","success","error","complete","responseJSON","isMobile","applePayAddressChanged","completeApplePayShippingContactUpdate","cart_total","Checkout","checkoutKey","privateKey","dibs_payment_id","containerId","language","locale","getDibsEasyOrder","get_order_data_url","failOrder","redirect","setAddressData","consumer","payment","billingAddress","shippingAddress","hasBillingData","Array","isArray","addressLine1","postalCode","city","company","hasOwnProperty","_company$contactDetai","contactDetails","firstName","lastName","email","phoneNumber","prefix","number","name","change","blur","_consumer$privatePers","privatePerson","addressLine2","prop","submitOrder","block","overlayCSS","background","opacity","serialize","result","setItem","send","err","messages","JSON","stringify","e","preventDefault","change_payment_method_url","dibs_easy","removeClass","appendTo","form","i","fields","inArray","log_to_file_url","log_to_file_nonce","event","errorMessage","errorWrapper","remove","find"],"sourceRoot":""}