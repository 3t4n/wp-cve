{"version":3,"file":"editor.js","mappings":"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","sources":["webpack://pdf-poster-pro/external var [\"wp\",\"i18n\"]","webpack://pdf-poster-pro/external var [\"wp\",\"components\"]","webpack://pdf-poster-pro/./src/blocks/Components/BColor.js","webpack://pdf-poster-pro/./src/blocks/Components/BSpacer.js","webpack://pdf-poster-pro/./src/blocks/pdfposter/PresetOptions.js","webpack://pdf-poster-pro/./src/blocks/pdfposter/Preview.js","webpack://pdf-poster-pro/./src/blocks/pdfposter/utils.js","webpack://pdf-poster-pro/./src/blocks/pdfposter/PresetModal.js","webpack://pdf-poster-pro/./src/blocks/Components/BMediaUpload.js","webpack://pdf-poster-pro/./src/blocks/pdfposter/GoogleDrivePicker.js","webpack://pdf-poster-pro/./src/blocks/Components/BControlPro.js","webpack://pdf-poster-pro/./src/blocks/pdfposter/Settings.js","webpack://pdf-poster-pro/external var [\"wp\",\"element\"]","webpack://pdf-poster-pro/./src/blocks/pdfposter/Uploader.js","webpack://pdf-poster-pro/./src/blocks/pdfposter/Edit.js","webpack://pdf-poster-pro/./src/blocks/pdfposter/index.js","webpack://pdf-poster-pro/./src/blocks/selector/attributes.js","webpack://pdf-poster-pro/./src/blocks/selector/Settings.js","webpack://pdf-poster-pro/./src/blocks/selector/Edit.js","webpack://pdf-poster-pro/./src/blocks/selector/index.js"],"sourcesContent":["var __WEBPACK_NAMESPACE_OBJECT__ = wp.i18n;","var __WEBPACK_NAMESPACE_OBJECT__ = wp.components;","const { useState, Fragment } = wp.element;\nconst { Dropdown, ColorPicker, Button } = wp.components;\nconst { __ } = wp.i18n;\n// import styles from \"./styles.module.scss\";\n\n/**\n *\n * @props value: (String) --required\n * @props defaultColor: (String)\n * @props onChange: (Function) required\n * @props className: (String)\n * @props disableAlpha: (Boolean)\n * @props boxPosition: 'top left' (String)\n * return rgba color code\n */\nconst BColor = (props) => {\n  const { value, title = \"\", defaultColor, onChange, className, disableAlpha, boxPosition = \"top left\", globalColors = [] } = props;\n  const [state, setState] = useState(value);\n  return (\n    <Dropdown\n      position={boxPosition}\n      renderToggle={({ isOpen, onToggle }) => {\n        return (\n          <div style={{ display: \"flex\" }}>\n            {defaultColor && defaultColor != state && (\n              <Button\n                icon=\"image-rotate\"\n                className={\"bColorReset\"}\n                onClick={() => {\n                  onChange(defaultColor);\n                  setState(defaultColor);\n                }}\n              />\n            )}\n            <div className={\"BColorButtonContainer\"}>\n              <button\n                className={\"BColorButton\"}\n                title={title}\n                onClick={onToggle}\n                aria-expanded={isOpen}\n                style={value ? { backgroundColor: value } : { backgroundColor: \"transparent\" }}\n              />\n            </div>\n          </div>\n        );\n      }}\n      renderContent={({ isOpen, onToggle, onClose }) => (\n        <Fragment>\n          <ColorPicker\n            color={value || \"\"}\n            onChangeComplete={(c) => {\n              onChange(`rgba(${c.rgb.r}, ${c.rgb.g}, ${c.rgb.b}, ${c.rgb.a})`);\n              setState(c.hex);\n            }}\n            disableAlpha={disableAlpha ? disableAlpha : false}\n          />\n          {globalColors.length > 0 && (\n            <div style={{ display: \"flex\" }} className=\"globalColors\">\n              {globalColors.map((color) => {\n                return (\n                  <div className={\"BColorButtonContainer\"}>\n                    <button\n                      className={\"BColorButton\"}\n                      onClick={() => {\n                        onChange(color.color);\n                        setState(color);\n                        onClose;\n                      }}\n                      aria-expanded={isOpen}\n                      style={value ? { backgroundColor: color.color } : { backgroundColor: \"transparent\" }}\n                    />\n                  </div>\n                );\n              })}\n            </div>\n          )}\n        </Fragment>\n      )}\n    />\n  );\n};\n\nexport default BColor;\n","const { Component, Fragment, useState } = wp.element;\r\nconst { PanelRow, __experimentalNumberControl } = wp.components;\r\nconst NumberControl = __experimentalNumberControl;\r\nconst { __ } = wp.i18n;\r\n// import BDevice from \"./BDevice\";\r\nimport { Link } from \"./Icon\";\r\n\r\n/**\r\n *\r\n * @props {Object} label: {top: \"Top\", right: \"Right\", bottom: \"Bottom\", left: \"Left\"}\r\n * @props label: (String)\r\n * @props {Object} value: { top: 0, right: 0, bottom: 0, left: 0 },\r\n * @props {Object} enable: { top = true, right = true, bottom = true, left = true },\r\n * @props {Boolean} isDragEnabled: false\r\n * @props {Boolean} isShiftStepEnabled: true\r\n * @props {Number} shiftStep: 10\r\n * @props {String} width: '250px'\r\n * @props {String} ClassName: ''\r\n * @props {Function} onChange\r\n * @returns {Object}\r\n */\r\nconst BSpacer = (props) => {\r\n  const [linking, setLinking] = useState(false);\r\n  const {\r\n    enable: { top = true, right = true, bottom = true, left = true },\r\n    onChange,\r\n    value,\r\n    title,\r\n    label,\r\n    isShiftStepEnabled = true,\r\n    isDragEnabled = false,\r\n    shiftStep = 10,\r\n    className = \" \",\r\n    width = \"250px\",\r\n    device = \"desktop\",\r\n    onChangeDevice,\r\n  } = props;\r\n\r\n  const onChangeHandler = (to, v) => {\r\n    if (linking) {\r\n      const newValue = { ...value };\r\n      newValue.top = v;\r\n      newValue.left = v;\r\n      newValue.right = v;\r\n      newValue.bottom = v;\r\n      onChange(newValue);\r\n    } else {\r\n      onChange({ ...value, [to]: v });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <PanelRow>\r\n        <label>{title}</label>\r\n        {/* <BDevice style={{ marginRight: \"auto\" }} device={device} onChange={(device) => onChangeDevice(device)} /> */}\r\n        {/* <button\r\n          class=\"iconButton\"\r\n          bisactive={linking ? \"true\" : \"false\"}\r\n          onClick={() => {\r\n            setLinking(!linking);\r\n            if (linking) {\r\n              const newValue = { ...value };\r\n              const topValue = newValue.top;\r\n              newValue.top = topValue;\r\n              newValue.left = topValue;\r\n              newValue.right = topValue;\r\n              newValue.bottom = topValue;\r\n              onChange(newValue);\r\n            }\r\n          }}\r\n        >\r\n          <Link size=\"12\" />\r\n        </button> */}\r\n      </PanelRow>\r\n      <PanelRow>\r\n        <div className={className} style={{ width: width, maxWidth: \"100%\", display: \"flex\" }}>\r\n          {top && (\r\n            <NumberControl\r\n              label={label.top || __(\"Top\", \"bsection\")}\r\n              isShiftStepEnabled={isShiftStepEnabled}\r\n              isDragEnabled={isDragEnabled}\r\n              onChange={(v) => {\r\n                onChangeHandler(\"top\", parseInt(v));\r\n              }}\r\n              shiftStep={shiftStep}\r\n              value={value.top}\r\n            />\r\n          )}\r\n          {right && (\r\n            <NumberControl\r\n              label={label.right || __(\"Right\", \"bsection\")}\r\n              isShiftStepEnabled={isShiftStepEnabled}\r\n              isDragEnabled={isDragEnabled}\r\n              onChange={(v) => onChangeHandler(\"right\", parseInt(v))}\r\n              shiftStep={shiftStep}\r\n              value={value.right}\r\n            />\r\n          )}\r\n          {bottom && (\r\n            <NumberControl\r\n              label={label.bottom || __(\"Bottom\", \"bsection\")}\r\n              isShiftStepEnabled={isShiftStepEnabled}\r\n              isDragEnabled={isDragEnabled}\r\n              onChange={(v) => onChangeHandler(\"bottom\", parseInt(v))}\r\n              shiftStep={shiftStep}\r\n              value={value.bottom}\r\n            />\r\n          )}\r\n          {left && (\r\n            <NumberControl\r\n              label={label.left || __(\"Left\", \"bsection\")}\r\n              isShiftStepEnabled={isShiftStepEnabled}\r\n              isDragEnabled={isDragEnabled}\r\n              onChange={(v) => onChangeHandler(\"left\", parseInt(v))}\r\n              shiftStep={shiftStep}\r\n              value={value.left}\r\n            />\r\n          )}\r\n        </div>\r\n      </PanelRow>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nBSpacer.defaultProps = {\r\n  enable: {},\r\n  value: {\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n  },\r\n  label: {},\r\n};\r\nexport default BSpacer;\r\n","import { PanelRow } from \"@wordpress/components\";\r\nimport { SelectControl } from \"@wordpress/components\";\r\nimport { TextControl } from \"@wordpress/components\";\r\nimport { FormToggle } from \"@wordpress/components\";\r\nimport { PanelBody } from \"@wordpress/components\";\r\nimport { __experimentalNumberControl as NumberControl, __experimentalUnitControl as UnitControl } from \"@wordpress/components\";\r\nimport { __ } from \"@wordpress/i18n\";\r\nimport BColor from \"../Components/BColor\";\r\nimport BSpacer from \"../Components/BSpacer\";\r\n\r\nconst PresetOptions = (props) => {\r\n  const { attributes, setAttributes } = props;\r\n\r\n  const {\r\n   titleFontSize,  height,  width,  showName,  print,  onlyPDF,  defaultBrowser,  adobeEmbedder,  downloadButton,  downloadButtonText,  fullscreenButton,  fullscreenButtonText,  newWindow,  protect,  thumbMenu, sidebarOpen,  initialPage,  zoomLevel,  alert,  lastVersion,  hrScroll, adobeOptions,  popupBtnStyle,  popupBtnText} = attributes;\r\n\r\n  return (\r\n    <>\r\n      <PanelBody title={__(\"Settings\", \"pdfp\")} initialOpen={false}>\r\n        <PanelRow>\r\n          <label htmlFor=\"adobeEmbedder\" className=\"label\">\r\n            {__(\"use adobe PDF embedder\", \"pdfp\")}\r\n          </label>\r\n          <FormToggle id=\"adobeEmbedder\" checked={adobeEmbedder} onChange={() => setAttributes({ adobeEmbedder: !adobeEmbedder })} />\r\n        </PanelRow>\r\n\r\n        {adobeEmbedder && (\r\n          <>\r\n            <PanelRow>\r\n              <label htmlFor=\"embedMode\" className=\"label\">\r\n                {__(\"Embed Mode\", \"pdfp\")}\r\n              </label>\r\n              <SelectControl\r\n                options={[\r\n                  { label: \"Sized Container\", value: \"SIZED_CONTAINER\" },\r\n                  { label: \"Full Window\", value: \"FULL_WINDOW\" },\r\n                  { label: \"In-Line\", value: \"IN_LINE\" },\r\n                  { label: \"Lightbox\", value: \"LIGHT_BOX\" },\r\n                ]}\r\n                value={adobeOptions?.embedMode}\r\n                onChange={(embedMode) => setAttributes({ adobeOptions: { ...adobeOptions, embedMode } })}\r\n              />\r\n            </PanelRow>\r\n\r\n            {adobeOptions?.embedMode === \"LIGHT_BOX\" && (\r\n              <PanelRow>\r\n                <TextControl label={__(\"Button Text\", \"pdfp\")} value={popupBtnText} onChange={(popupBtnText) => setAttributes({ popupBtnText })} />\r\n              </PanelRow>\r\n            )}\r\n\r\n            {[\"SIZED_CONTAINER\", \"IN_LINE\", \"LIGHT_BOX\", \"FULL_WINDOW\"].includes(adobeOptions?.embedMode) && (\r\n              <PanelRow>\r\n                <label htmlFor=\"showPrintPDF\" className=\"label\">\r\n                  {__(\"Show Print Button\", \"pdfp\")}\r\n                </label>\r\n                <FormToggle\r\n                  id=\"showPrintPDF\"\r\n                  checked={adobeOptions?.showPrintPDF}\r\n                  onChange={() => setAttributes({ adobeOptions: { ...adobeOptions, showPrintPDF: !adobeOptions?.showPrintPDF } })}\r\n                />\r\n              </PanelRow>\r\n            )}\r\n            {[\"SIZED_CONTAINER\", \"IN_LINE\", \"LIGHT_BOX\", \"FULL_WINDOW\"].includes(adobeOptions?.embedMode) && (\r\n              <PanelRow>\r\n                <label htmlFor=\"showDownloadPDF\" className=\"label\">\r\n                  {__(\"Show Download Button\", \"pdfp\")}\r\n                </label>\r\n                <FormToggle\r\n                  id=\"showDownloadPDF\"\r\n                  checked={adobeOptions?.showDownloadPDF}\r\n                  onChange={() => setAttributes({ adobeOptions: { ...adobeOptions, showDownloadPDF: !adobeOptions?.showDownloadPDF } })}\r\n                />\r\n              </PanelRow>\r\n            )}\r\n            {[\"SIZED_CONTAINER\"].includes(adobeOptions.embedMode) && (\r\n              <PanelRow>\r\n                <label htmlFor=\"showFullScreen\" className=\"label\">\r\n                  {__(\"Show Fullscreen Button\", \"pdfp\")}\r\n                </label>\r\n                <FormToggle\r\n                  id=\"showFullScreen\"\r\n                  checked={adobeOptions?.showFullScreen}\r\n                  onChange={() => setAttributes({ adobeOptions: { ...adobeOptions, showFullScreen: !adobeOptions?.showFullScreen } })}\r\n                />\r\n              </PanelRow>\r\n            )}\r\n            {[\"FULL_WINDOW\"].includes(adobeOptions?.embedMode) && (\r\n              <>\r\n                <PanelRow>\r\n                  <label htmlFor=\"showAnnotationTools\" className=\"label\">\r\n                    {__(\"Show Annotation Tools\", \"pdfp\")}\r\n                  </label>\r\n                  <FormToggle\r\n                    id=\"showAnnotationTools\"\r\n                    checked={adobeOptions?.showAnnotationTools}\r\n                    onChange={() => setAttributes({ adobeOptions: { ...adobeOptions, showAnnotationTools: !adobeOptions?.showAnnotationTools } })}\r\n                  />\r\n                </PanelRow>\r\n                {/* <PanelRow>\r\n          <label htmlFor=\"defaultViewMode\" className=\"label\">\r\n            {__(\"View Mode\", \"pdfp\")}\r\n          </label>\r\n          <SelectControl\r\n            options={[\r\n              { label: \"Fit Page\", value: \"FIT_PAGE\" },\r\n              { label: \"Fit Width\", value: \"FIT_WIDTH\" },\r\n              { label: \"Two Column\", value: \"TWO_COLUMN\" },\r\n              { label: \"Two Column Fit Page\", value: \"TWO_COLUMN_FIT_PAGE\" },\r\n            ]}\r\n            value={adobeOptions.defaultViewMode}\r\n            onChange={(defaultViewMode) => setAttributes({ adobeOptions: { ...adobeOptions, defaultViewMode } })}\r\n          />\r\n        </PanelRow> */}\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n\r\n        {!adobeEmbedder && (\r\n          <>\r\n            <PanelRow>\r\n              <label htmlFor=\"protect\" className=\"label\">\r\n                {__(\"Protect my content\", \"pdfp\")}\r\n              </label>\r\n              <FormToggle id=\"protect\" checked={protect} onChange={() => setAttributes({ protect: !protect })} />\r\n            </PanelRow>\r\n            {protect && (\r\n              <PanelRow>\r\n                <label htmlFor=\"alert\" className=\"label\">\r\n                  {__(\"Enable Alert\", \"pdfp\")}\r\n                </label>\r\n                <FormToggle id=\"alert\" checked={alert} onChange={() => setAttributes({ alert: !alert })} />\r\n              </PanelRow>\r\n            )}\r\n            {!protect && (\r\n              <PanelRow>\r\n                <label htmlFor=\"print\" className=\"label\">\r\n                  {__(\"Allow print\", \"pdfp\")}\r\n                </label>\r\n                <FormToggle id=\"print\" checked={print} onChange={() => setAttributes({ print: !print })} />\r\n              </PanelRow>\r\n            )}\r\n            <PanelRow>\r\n              <label htmlFor=\"showName\" className=\"label\">\r\n                {__(\"Show title on top\", \"pdfp\")}\r\n              </label>\r\n              <FormToggle id=\"showName\" checked={showName} onChange={() => setAttributes({ showName: !showName })} />\r\n            </PanelRow>\r\n            <PanelRow>\r\n              <label htmlFor=\"onlyPDF\" className=\"label\">\r\n                {__(\"Raw PDF\", \"pdfp\")}\r\n              </label>\r\n              <FormToggle id=\"onlyPDF\" checked={onlyPDF} onChange={() => setAttributes({ onlyPDF: !onlyPDF })} />\r\n            </PanelRow>\r\n\r\n            {!protect && (\r\n              <>\r\n                <PanelRow>\r\n                  <label htmlFor=\"defaultBrowser\" className=\"label\">\r\n                    {__(\"Use browser pdf viewer\", \"pdfp\")}\r\n                  </label>\r\n                  <FormToggle id=\"defaultBrowser\" checked={defaultBrowser} onChange={() => setAttributes({ defaultBrowser: !defaultBrowser })} />\r\n                </PanelRow>\r\n                <PanelRow>\r\n                  <label htmlFor=\"downloadButton\" className=\"label\">\r\n                    {__(\"Show download button\", \"pdfp\")}\r\n                  </label>\r\n                  <FormToggle id=\"downloadButton\" checked={downloadButton} onChange={() => setAttributes({ downloadButton: !downloadButton })} />\r\n                </PanelRow>\r\n                {downloadButton && <TextControl label=\"\" value={downloadButtonText} onChange={(downloadButtonText) => setAttributes({ downloadButtonText })} />}\r\n              </>\r\n            )}\r\n            {!protect && (\r\n              <>\r\n                <PanelRow>\r\n                  <label htmlFor=\"fullscreenButton\" className=\"label\">\r\n                    {__(\"Show fullscreen button\", \"pdfp\")}\r\n                  </label>\r\n                  <FormToggle id=\"fullscreenButton\" checked={fullscreenButton} onChange={() => setAttributes({ fullscreenButton: !fullscreenButton })} />\r\n                </PanelRow>\r\n                {fullscreenButton && (\r\n                  <>\r\n                    <TextControl label=\"\" value={fullscreenButtonText} onChange={(fullscreenButtonText) => setAttributes({ fullscreenButtonText })} />\r\n                    <PanelRow>\r\n                      <label htmlFor=\"newWindow\" className=\"label\">\r\n                        {__(\"Open in new window\", \"pdfp\")}\r\n                      </label>\r\n                      <FormToggle id=\"newWindow\" checked={newWindow} onChange={() => setAttributes({ newWindow: !newWindow })} />\r\n                    </PanelRow>\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n\r\n            <PanelRow>\r\n              <label htmlFor=\"thumbMenu\" className=\"label\">\r\n                {__(\"Enable thumbnails toggle menu\", \"pdfp\")}\r\n              </label>\r\n              <FormToggle id=\"thumbMenu\" checked={thumbMenu} onChange={() => setAttributes({ thumbMenu: !thumbMenu })} />\r\n            </PanelRow>\r\n            {thumbMenu && <PanelRow>\r\n              <label htmlFor=\"sidebarOpen\" className=\"label\">\r\n                {__(\"Show Thumb by Default\", \"pdfp\")}\r\n              </label>\r\n              <FormToggle id=\"sidebarOpen\" checked={sidebarOpen} onChange={() => setAttributes({ sidebarOpen: !sidebarOpen })} />\r\n            </PanelRow>}\r\n            <PanelRow>\r\n              <label htmlFor=\"lastVersion\" className=\"label\">\r\n                {__(\"Load the last version of the PDF\", \"pdfp\")}\r\n              </label>\r\n              <FormToggle id=\"lastVersion\" checked={lastVersion} onChange={() => setAttributes({ lastVersion: !lastVersion })} />\r\n            </PanelRow>\r\n            <PanelRow>\r\n              <label htmlFor=\"hrScroll\" className=\"label\">\r\n                {__(\"Horizontal Scrollbar\", \"pdfp\")}\r\n              </label>\r\n              <FormToggle id=\"hrScroll\" checked={hrScroll} onChange={() => setAttributes({ hrScroll: !hrScroll })} />\r\n            </PanelRow>\r\n            <PanelRow>\r\n              <label className=\"label\">{__(\"Initail page\", \"pdfp\")}</label>\r\n              <NumberControl isShiftStepEnabled={true} onChange={(initialPage) => setAttributes({ initialPage })} shiftStep={1} value={initialPage} />\r\n            </PanelRow>\r\n            <PanelRow>\r\n              <label className=\"label\">{__(\"Zoom Level (%)\", \"pdfp\")}</label>\r\n              <NumberControl\r\n                help={__(\"leave empty to set auto\", \"pdfp\")}\r\n                isShiftStepEnabled={true}\r\n                onChange={(zoomLevel) => setAttributes({ zoomLevel })}\r\n                shiftStep={1}\r\n                value={zoomLevel}\r\n              />\r\n            </PanelRow>\r\n          </>\r\n        )}\r\n      </PanelBody>\r\n      <PanelBody title={__(\"Style\", \"pdfp\")} initialOpen={false}>\r\n        <PanelRow>\r\n          <label htmlFor=\"Height\" className=\"label\">\r\n            {__(\"Height\", \"pdfp\")}\r\n          </label>\r\n          <UnitControl\r\n            onChange={(height) => setAttributes({ height })}\r\n            value={height}\r\n            units={[\r\n              { value: \"px\", label: \"px\", default: 500 },\r\n              { value: \"%\", label: \"%\", default: 100 },\r\n              { value: \"vh\", label: \"vh\", default: 100 },\r\n            ]}\r\n            isResetValueOnUnitChange={true}\r\n          />\r\n        </PanelRow>\r\n        <PanelRow>\r\n          <label htmlFor=\"width\" className=\"label\">\r\n            {__(\"Width\", \"pdfp\")}\r\n          </label>\r\n          <UnitControl\r\n            onChange={(width) => setAttributes({ width })}\r\n            value={width}\r\n            units={[\r\n              { value: \"px\", label: \"px\", default: 500 },\r\n              { value: \"%\", label: \"%\", default: 100 },\r\n              { value: \"vw\", label: \"vw\", default: 100 },\r\n            ]}\r\n            isResetValueOnUnitChange={true}\r\n          />\r\n        </PanelRow>\r\n        <PanelRow>\r\n          <label htmlFor=\"titleFontSize\" className=\"label\">\r\n            {__(\"Title Font Size\", \"pdfp\")}\r\n          </label>\r\n          <UnitControl\r\n            onChange={(titleFontSize) => setAttributes({ titleFontSize })}\r\n            value={titleFontSize}\r\n            units={[\r\n              { value: \"px\", label: \"px\", default: 16 },\r\n              { value: \"em\", label: \"em\", default: 1 },\r\n              { value: \"rem\", label: \"rem\", default: 1 },\r\n            ]}\r\n            isResetValueOnUnitChange={true}\r\n          />\r\n        </PanelRow>\r\n      </PanelBody>\r\n      {adobeOptions?.embedMode === \"LIGHT_BOX\" && adobeEmbedder && (\r\n        <PanelBody title={__(\"Adobe Lightbox Button Style\", \"pdfp\")}>\r\n          <PanelRow>\r\n            <label>{__(\"Background\", \"bpm\")}</label>\r\n            <BColor value={popupBtnStyle?.background} onChange={(background) => setAttributes({ popupBtnStyle: { ...popupBtnStyle, background } })} />\r\n          </PanelRow>\r\n          <PanelRow>\r\n            <label>{__(\"Text Color\", \"bpm\")}</label>\r\n            <BColor value={popupBtnStyle?.color} onChange={(color) => setAttributes({ popupBtnStyle: { ...popupBtnStyle, color } })} />\r\n          </PanelRow>\r\n          <BSpacer title={__(\"Padding\", \"pdfp\")} value={popupBtnStyle?.padding || {}} onChange={(padding) => setAttributes({ popupBtnStyle: { ...popupBtnStyle, padding } })} />\r\n        </PanelBody>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PresetOptions;\r\n","const { Fragment, useState, useEffect, useRef } = wp.element;\r\nconst { RichText } = wp.blockEditor;\r\nimport { __ } from \"@wordpress/i18n\";\r\n\r\nconst Preview = ({ attributes, clientId, setAttributes, isSelected, isPreset = false }) => {\r\n  const exampleFile = \"http://localhost/freemius/wp-content/uploads/2022/02/temp.pdf\";\r\n  const {\r\n    uniqueId = `pdfpnewId`,\r\n    file = pdfp?.placeholder || exampleFile,\r\n    title,\r\n    titleFontSize,\r\n    height,\r\n    width,\r\n    showName,\r\n    print,\r\n    onlyPDF,\r\n    downloadButton,\r\n    downloadButtonText,\r\n    fullscreenButton,\r\n    fullscreenButtonText,\r\n    protect,\r\n    thumbMenu,\r\n    hrScroll,\r\n    initialPage,\r\n    zoomLevel,\r\n    additional,\r\n    adobeEmbedder,\r\n    adobeOptions,\r\n    align,\r\n    popupBtnStyle,\r\n    CSS,\r\n    popupBtnText,\r\n  } = attributes;\r\n\r\n  const adobeRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!adobeEmbedder && adobeRef.current) {\r\n      adobeRef.current.innerHTML = \"\";\r\n    }\r\n\r\n    if (adobeRef?.current && adobeOptions.embedMode != \"LIGHT_BOX\") {\r\n      renderPDF();\r\n    }\r\n  }, [adobeOptions, adobeEmbedder, file]);\r\n\r\n  useEffect(() => {\r\n    if (document.getElementById(uniqueId)) {\r\n      document.getElementById(uniqueId).style.height = height;\r\n    }\r\n  }, [adobeOptions.embedMode]);\r\n\r\n  const renderPDF = () => {\r\n    if (typeof AdobeDC != \"undefined\") {\r\n      var adobeDCView = new AdobeDC.View({ clientId: fpdfAdmin?.adobeClientKey, divId: uniqueId });\r\n      adobeDCView.previewFile(\r\n        {\r\n          content: { location: { url: file } },\r\n          metaData: { fileName: title || \" \" },\r\n        },\r\n        adobeOptions\r\n      );\r\n    }\r\n  };\r\n\r\n  let source = \"\";\r\n\r\n  if (file.includes(window.location.origin)) {\r\n    let zoom = \"&z=auto\";\r\n    if (zoomLevel) {\r\n      zoom = `&z=${zoomLevel / 100}`;\r\n    }\r\n    const viewer = onlyPDF ? \"raw/raw.html\" : protect ? \"web/pviewer.html\" : \"web/viewer.html\";\r\n    source = `${pdfp?.dir}pdfjs-new/${viewer}?file=${file}${zoom}&nobaki=${!protect && downloadButton ? \"vera\" : \"false\"}&stdono=${\r\n      print && !protect ? \"vera\" : \"false\"\r\n    }&open=false&onlypdf=${onlyPDF ? \"vera\" : \"false\"}&hrscroll=${hrScroll ? \"vera\" : \"false\"}&side=${thumbMenu}#page=${initialPage}`;\r\n  } else if (file.includes(\".google.com\")) {\r\n    source = file;\r\n  }\r\n\r\n  useEffect(() => {\r\n    let CSS = `.${uniqueId}btn {background: ${popupBtnStyle?.background}; color: ${popupBtnStyle?.color}; padding: ${popupBtnStyle?.padding?.top}px ${popupBtnStyle?.padding?.right}px ${popupBtnStyle?.padding?.bottom}px ${popupBtnStyle?.padding?.left}px}`;\r\n    setAttributes({ CSS });\r\n  }, [popupBtnStyle, uniqueId, height]);\r\n\r\n  return (\r\n    <div>\r\n      {adobeEmbedder ? (\r\n        <>\r\n          {fpdfAdmin?.adobeClientKey ? (\r\n            <div\r\n              className=\"pdfp_editor_wrapper pdfp_wrapper\"\r\n              ref={adobeRef}\r\n              style={{ width: `${adobeOptions?.embedMode === \"LIGHT_BOX\" ? \"fit-content\" : width} ` }}\r\n              data-align={align}\r\n            >\r\n              {!isSelected ? <div style={{ width: \"100%\", height: \"100%\", position: \"absolute\", top: 0, left: 0, minHeight: \"400px\" }}></div> : \"\"}\r\n              {adobeOptions?.embedMode === \"LIGHT_BOX\" ? (\r\n                <>\r\n                  <style>{CSS}</style>\r\n                  <button\r\n                    className={`${uniqueId}btn`}\r\n                    onClick={() => {\r\n                      !isPreset && renderPDF();\r\n                    }}\r\n                  >\r\n                    {popupBtnText || file?.split(\".\").slice(0, -1).join(\".\")}\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <div id={uniqueId} style={{ height }}></div>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <div style={{ padding: \"20px\", border: \"1px solid #ddd\" }}>\r\n              <h2>{__(\"Adobe Client Key Required to use Adobe Embedder\", \"pdfp\")}</h2>\r\n\r\n              <a className=\"button button-primary\" target=\"_blank\" href={`${pdfp?.siteUrl}/wp-admin/edit.php?post_type=pdfposter&page=fpdf-settings#tab=cloud-api`}>\r\n                {__(\"Generate Client key\", \"pdfp\")}\r\n              </a>\r\n            </div>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className={`pdfp_wrapper ${isSelected && \"pdfp_editor_wrapper\"} ${additional.Class}`} style={{ width }}>\r\n            {showName && !isPreset && (\r\n              <RichText\r\n                tagName=\"p\"\r\n                value={title}\r\n                allowedFormats={[]}\r\n                style={{ fontSize: titleFontSize, margin: \"20px\" }}\r\n                onChange={(title) => setAttributes({ title })}\r\n                placeholder={__(\"Title\", \"pdfp\")}\r\n              />\r\n            )}\r\n\r\n            {file.includes(\"dropbox.com\") ? (\r\n              <div style={{ border: \"2px solid #ddd\" }}>\r\n                <p>{file}</p>\r\n                <p>{__(\"Preview is not available for dropbox\", \"pdfp\")}</p>\r\n              </div>\r\n            ) : (\r\n              <Fragment>\r\n                <div className=\"cta_wrapper\">\r\n                  {downloadButton && !protect && (\r\n                    <a className=\"pdfp_download\" onClick={(e) => e.preventDefault()} download href={file}>\r\n                      <button className=\"pdfp_download_btn\">{downloadButtonText}</button>\r\n                    </a>\r\n                  )}\r\n\r\n                  {fullscreenButton && !protect && (\r\n                    <a href={source} onClick={(e) => e.preventDefault()} target=\"_blank\">\r\n                      <button>{fullscreenButtonText}</button>\r\n                    </a>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"iframe_wrapper\">\r\n                  <div className=\"pdfp_frame_overlay\"></div>\r\n                  <iframe className=\"pdfp_iframe\" height={height} style={{ height }} src={source}></iframe>\r\n                </div>\r\n              </Fragment>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preview;\r\n","export const presetDelete = async (id) => {\r\n  return await jQuery\r\n    .ajax({\r\n      method: \"POST\",\r\n      url: pdfp?.ajax_url,\r\n      dataType: \"json\",\r\n      data: {\r\n        action: \"pdf_poster_ajax\",\r\n        nonce: pdfp?.nonce,\r\n        model: \"Presets\",\r\n        method: \"delete\",\r\n        id,\r\n      },\r\n    })\r\n    .then((res) => res)\r\n    .catch((err) => console.log({ err }));\r\n};\r\n\r\nexport const getPresets = async () => {\r\n  return await ajaxCall(\"GET\", { model: \"Presets\", model: \"all\" });\r\n};\r\n\r\nexport const ajaxCall = async (method = \"GET\", data = {}) => {\r\n  return await jQuery\r\n    .ajax({\r\n      method,\r\n      url: pdfp?.ajax_url,\r\n      dataType: \"json\",\r\n      data: {\r\n        action: \"pdf_poster_ajax\",\r\n        nonce: pdfp?.nonce,\r\n        ...data,\r\n      },\r\n    })\r\n    .then((res) => res)\r\n    .catch((error) => console.log({ error }));\r\n};\r\n","import { TextControl } from '@wordpress/components'\r\nimport { Button } from '@wordpress/components'\r\nimport { Modal } from '@wordpress/components'\r\nimport { __ } from '@wordpress/i18n'\r\nconst {useEffect, useState} = wp.element;\r\nimport PresetOptions from './PresetOptions'\r\nimport Preview from './Preview'\r\nimport { ajaxCall } from './utils';\r\n\r\n\r\nconst PresetModal = (props) => {\r\n    const {attributes, setAttributes, preset, setPreset, setModalOpen} = props;\r\n    const {statePresets = []} = attributes;\r\n    const [isSaving, setIsSaving] = useState(false);\r\n\r\n    const handlePresetChange = (update) => {\r\n      setPreset({ ...preset, preset: { ...preset.preset, ...update } });\r\n    };\r\n\r\n    const handleCreatePreset = async (e) => {\r\n      setIsSaving(true);\r\n      const {addional, file, uniqueId, title, CSS, ...other} = preset.preset;\r\n      const {data} = await ajaxCall('POST', {\r\n        model: 'Presets',\r\n        method : 'create',\r\n        name: preset.name,\r\n        preset: other,\r\n        id: preset.id\r\n      });\r\n      setIsSaving(false);\r\n      if(data){\r\n        if(preset.id){\r\n          setAttributes({statePresets: statePresets.map(item => item.id === preset.id ? preset : item)});\r\n        }else {\r\n          const newPresets = [...statePresets, {...preset, id: data.id}];\r\n          setAttributes({statePresets: newPresets });\r\n        }\r\n        setPreset({...preset, id: data.id});\r\n      }\r\n      setModalOpen(false);\r\n    }\r\n\r\n  return (\r\n    <div>\r\n    <Modal shouldCloseOnClickOutside={false} title={__(\"Preset\", \"pdfp\")} onRequestClose={() => {\r\n      setModalOpen(false);\r\n      setPreset(null);\r\n    }} className=\"pdfpPresetModal\">\r\n        <TextControl value={preset.name} onChange={(name) =>setPreset({ ...preset, name })} />\r\n        <div className=\"pdfpPreset\">\r\n          <div className=\"options\">\r\n              <PresetOptions attributes={preset.preset || {}} setAttributes={handlePresetChange} />\r\n          </div>\r\n          <div className=\"preview\">\r\n              <Preview  isPreset={true} {...props} attributes={preset.preset} setAttributes={handlePresetChange} />\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"actionsWrapper\">\r\n          <div className=\"actions\">\r\n            <div></div>\r\n            <div>\r\n                {isSaving && <div class=\"pdfp_loader\"></div>}\r\n                <Button disabled={isSaving} variant=\"primary\" onClick={handleCreatePreset}>{preset?.id ? __(\"Update\", 'pdfp') : __(\"Create\", \"pdfp\")}</Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PresetModal","import { __ } from \"@wordpress/i18n\";\r\nconst { Fragment } = wp.element;\r\nconst { MediaUpload, MediaUploadCheck } = wp.blockEditor;\r\nconst { Button, PanelRow, TextControl } = wp.components;\r\nfunction BMediaUpload({ value, type = [], onSelect }) {\r\n  return (\r\n    <div className=\"bMediaUpload\">\r\n      <Fragment>\r\n        <MediaUploadCheck>\r\n          <MediaUpload\r\n            allowedTypes={type}\r\n            onSelect={(image) => onSelect(image.url)}\r\n            render={({ open }) => <Button className=\"button button-primary\" onClick={open} icon={\"upload\"}></Button>}\r\n          />\r\n        </MediaUploadCheck>\r\n        <PanelRow className=\"width-100\">\r\n          <TextControl id=\"picker_field\" value={value} onChange={(fileUrl) => onSelect(fileUrl)} />\r\n        </PanelRow>\r\n      </Fragment>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BMediaUpload;\r\n","import { PanelRow } from \"@wordpress/components\";\r\n\r\nconst GoogleDrivePicker = ({ setAttributes, clientId, appId, developerKey }) => {\r\n  var scope = [\"https://www.googleapis.com/auth/drive.file\"];\r\n\r\n  if (!clientId || !appId || !developerKey) {\r\n    return <></>;\r\n  }\r\n\r\n  var pickerApiLoaded = false;\r\n  var oauthToken;\r\n  function loadPicker() {\r\n    gapi.load(\"auth\", { callback: onAuthApiLoad });\r\n    gapi.load(\"picker\", { callback: onPickerApiLoad });\r\n  }\r\n  function onAuthApiLoad() {\r\n    window.gapi.auth.authorize(\r\n      {\r\n        client_id: clientId,\r\n        scope: scope,\r\n        immediate: false,\r\n      },\r\n      handleAuthResult\r\n    );\r\n  }\r\n  function onPickerApiLoad() {\r\n    pickerApiLoaded = true;\r\n    createPicker();\r\n  }\r\n  function handleAuthResult(authResult) {\r\n    if (authResult && !authResult.error) {\r\n      oauthToken = authResult.access_token;\r\n      createPicker();\r\n    }\r\n  }\r\n  // Create and render a Picker object for searching images.\r\n  function createPicker() {\r\n    if (pickerApiLoaded && oauthToken) {\r\n      var view = new google.picker.View(google.picker.ViewId.DOCS);\r\n      // view.setMimeTypes(\"image/png,image/jpeg,image/jpg\");\r\n      var picker = new google.picker.PickerBuilder()\r\n        .setAppId(appId)\r\n        .setOAuthToken(oauthToken)\r\n        .addView(view)\r\n        .addView(new google.picker.DocsUploadView())\r\n        .setDeveloperKey(developerKey)\r\n        .setCallback(pickerCallback)\r\n        .build();\r\n      picker.setVisible(true);\r\n    }\r\n  }\r\n\r\n  // A simple callback implementation.\r\n  function pickerCallback(data) {\r\n    if (data.action == google.picker.Action.PICKED) {\r\n      if (!data.docs?.[0]?.embedUrl) {\r\n        createPicker();\r\n      } else {\r\n        setAttributes({ file: data.docs[0]?.embedUrl });\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <PanelRow>\r\n      <button onClick={loadPicker} className=\"drive-picker-button\">\r\n        Choose From Google Drive\r\n      </button>\r\n    </PanelRow>\r\n  );\r\n};\r\n\r\nexport default GoogleDrivePicker;\r\n\r\n// import React from 'react'\r\n\r\n// const GoogleDrivePicker = () => {\r\n//   return (\r\n//     <div>GoogleDrivePicker</div>\r\n//   )\r\n// }\r\n\r\n// export default GoogleDrivePicker\r\n","import { __ } from \"@wordpress/i18n\";\r\n\r\nconst BControlPro = ({ label, className, onChange, isPremium = false, Component, setOpen = () => {}, ...restProps }) => {\r\n  const labelMiddleWare = (label) => {\r\n    return isPremium ? (\r\n      label\r\n    ) : (\r\n      <>\r\n        <span className=\"bplOpacity75\">{label}</span> <span className=\"labelPro\">{__(\"Pro\", \"text-domain\")}</span>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Component\r\n      className={`${className} ${isPremium ? \"\" : \"bplProIdentifier\"}`}\r\n      label={labelMiddleWare(label)}\r\n      onChange={(val) => {\r\n        if (isPremium) {\r\n          onChange(val);\r\n        } else {\r\n          setOpen(true);\r\n        }\r\n      }}\r\n      isPremium={isPremium}\r\n      {...restProps}\r\n    />\r\n  );\r\n};\r\n\r\nexport default BControlPro;\r\n","import { SelectControl, ToggleControl } from \"@wordpress/components\";\r\nimport { Dashicon } from \"@wordpress/components\";\r\nimport { Modal } from \"@wordpress/components\";\r\nimport { Button } from \"@wordpress/components\";\r\nimport { TextareaControl } from \"@wordpress/components\";\r\nimport { __ } from \"@wordpress/i18n\";\r\nimport BColor from \"../Components/BColor\";\r\nconst { Fragment, useEffect, useRef, useState } = wp.element;\r\nconst { Panel, PanelBody, PanelRow, FormToggle, TextControl, __experimentalNumberControl: NumberControl, __experimentalUnitControl: UnitControl } = wp.components;\r\nconst { InspectorControls } = wp.blockEditor;\r\nconst { select } = wp.data;\r\n\r\n// import BRangeControl from \"../Components/BRangeControl\";\r\nimport BMediaUpload from \"../Components/BMediaUpload\";\r\nimport BSpacer from \"../Components/BSpacer\";\r\nimport GoogleDrivePicker from \"./GoogleDrivePicker\";\r\nimport PresetOptions from \"./PresetOptions\";\r\nimport { ajaxCall, presetDelete } from \"./utils\";\r\nimport BControlPro from \"../Components/BControlPro\";\r\n\r\nconst Settings = (props) => {\r\n  const { getCurrentPostId } = select(\"core/editor\");\r\n  const chooserContainer = useRef(null);\r\n  const gDriveContainer = useRef(null);\r\n  const [confirm, setConfirm] = useState(false);\r\n  const [confirmModalOpen, setConfirmModalOpen] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [isPremium, setIsPremium] = useState(pdfp?.pipe);\r\n\r\n  const { attributes, preset, setPreset, setAttributes, setModalOpen } = props;\r\n  const {\r\n    uniqueId,\r\n    file,\r\n    title,\r\n    titleFontSize,\r\n    height,\r\n    width,\r\n    showName,\r\n    print,\r\n    onlyPDF,\r\n    defaultBrowser,\r\n    adobeEmbedder,\r\n    downloadButton,\r\n    downloadButtonText,\r\n    fullscreenButton,\r\n    fullscreenButtonText,\r\n    newWindow,\r\n  } = attributes;\r\n\r\n  const {\r\n    protect,\r\n    thumbMenu,\r\n    sidebarOpen,\r\n    initialPage,\r\n    zoomLevel,\r\n    alert,\r\n    lastVersion,\r\n    hrScroll,\r\n    additional,\r\n    adobeOptions,\r\n    popupBtnStyle,\r\n    popupBtnText,\r\n    statePresets = [],\r\n  } = attributes;\r\n\r\n  const exampleFile = \"http://localhost/freemius/wp-content/uploads/2022/02/temp.pdf\";\r\n\r\n  useEffect(() => {\r\n    if (typeof Dropbox !== \"undefined\") {\r\n      options = {\r\n        success: function (file) {\r\n          setAttributes({ file: file?.[0]?.link });\r\n        },\r\n        cancel: function () {},\r\n        linkType: \"preview\", // or \"direct\", \"preview\"\r\n        multiselect: false, // or true\r\n        folderselect: false, // or true\r\n      };\r\n\r\n      var button = Dropbox.createChooseButton(options);\r\n      setTimeout(() => {\r\n        if (chooserContainer.current && !chooserContainer.current?.hasChildNodes()) {\r\n          chooserContainer.current.appendChild(button);\r\n        }\r\n      }, 1000);\r\n    }\r\n\r\n    const fetch = async () => {\r\n      const { data } = await ajaxCall(\"GET\", { model: \"Presets\", method: \"all\" });\r\n      setAttributes({ statePresets: data });\r\n    };\r\n    fetch();\r\n  }, []);\r\n\r\n  const handleDeletePreset = async (id) => {\r\n    setLoading(true);\r\n    const { data } = await presetDelete(id);\r\n    if (data) {\r\n      setAttributes({ statePresets: statePresets.filter((preset) => preset.id !== id) });\r\n    }\r\n    setConfirmModalOpen(false);\r\n    setLoading(false);\r\n  };\r\n\r\n  const postType = select(\"core/editor\").getCurrentPostType();\r\n  const postId = getCurrentPostId();\r\n\r\n  return (\r\n    <>\r\n      <InspectorControls style={{ marginBottom: \"40px\" }}>\r\n        <Fragment>\r\n          <Panel>\r\n            {postType === \"pdfposter\" && (\r\n              <PanelBody>\r\n                <PanelRow>\r\n                  <div className=\"pdfp_front_shortcode\">\r\n                    <input value={`[pdf id=${postId}]`} />\r\n                    <span className=\"htooltip\">{__(\"Copy To Clipboard\", \"pdfp\")}</span>\r\n                  </div>\r\n                </PanelRow>\r\n              </PanelBody>\r\n            )}\r\n\r\n            <PanelBody>\r\n              {isPremium && (\r\n                <>\r\n                  <PanelRow>\r\n                    <div id=\"picker_container\" ref={chooserContainer}></div>\r\n                  </PanelRow>\r\n                  <GoogleDrivePicker setAttributes={setAttributes} clientId={fpdfAdmin?.gClientId} appId={fpdfAdmin?.gAppId} developerKey={fpdfAdmin?.gDeveloperKey} />\r\n                </>\r\n              )}\r\n\r\n              <PanelRow>\r\n                <label className=\"label\">{__(\"Upload PDF\", \"pdfp\")}</label>\r\n              </PanelRow>\r\n\r\n              <BMediaUpload type={[\"application/pdf\"]} onSelect={(file) => setAttributes({ file })} value={file} placeholder=\"Audio URL\" />\r\n\r\n              {isPremium && <TextControl disabled={!isPremium} label={__(\"Title\", \"pdfp\")} value={title} onChange={(title) => setAttributes({ title })} />}\r\n\r\n              {!isPremium && (\r\n                <>\r\n                  {<ToggleControl label={__(\"Allow print\", \"pdfp\")} id=\"print\" checked={print} onChange={() => setAttributes({ print: !print })} />}\r\n\r\n                  <ToggleControl label={__(\"Show title on top\", \"pdfp\")} id=\"showName\" checked={showName} onChange={() => setAttributes({ showName: !showName })} />\r\n                  <TextControl\r\n                    label={__(\"Fullscreen Button Text\", \"pdfp\")}\r\n                    value={fullscreenButtonText}\r\n                    onChange={(fullscreenButtonText) => setAttributes({ fullscreenButtonText })}\r\n                  />\r\n                </>\r\n              )}\r\n            </PanelBody>\r\n\r\n            {isPremium && (\r\n              <PanelBody title={__(\"Presets\", \"pdfp\")}>\r\n                <div className=\"pdfp-presets\">\r\n                  {statePresets.map((item) => (\r\n                    <>\r\n                      <div className={`pdfp-preset-item`}>\r\n                        <div\r\n                          className=\"box\"\r\n                          onClick={() => {\r\n                            setAttributes({ ...item.preset });\r\n                          }}\r\n                        >\r\n                          <span>{item.name?.[0]?.toUpperCase()}</span>\r\n                        </div>\r\n                        <div className=\"actions\">\r\n                          <Dashicon\r\n                            icon=\"edit\"\r\n                            title={__(\"Edit\", \"pdfp\")}\r\n                            onClick={() => {\r\n                              setPreset(item);\r\n                              setModalOpen(true);\r\n                              // setAttributes({ ...item.preset })\r\n                            }}\r\n                          />\r\n                          <Dashicon\r\n                            icon=\"trash\"\r\n                            title={__(\"Delete\", \"pdfp\")}\r\n                            onClick={(e) => {\r\n                              e.preventDefault();\r\n                              setConfirmModalOpen(item.id);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                        <p>{item?.name || __(\"Unknown Name\", \"pdfp\")}</p>\r\n                      </div>\r\n                    </>\r\n                  ))}\r\n                </div>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={() => {\r\n                    setModalOpen(true);\r\n                    const { uniqueId, statePresets, ...preset } = attributes;\r\n                    setPreset({ preset });\r\n                  }}\r\n                >\r\n                  {__(\"Add New Preset\", \"pdfp\")}\r\n                </Button>\r\n              </PanelBody>\r\n            )}\r\n\r\n            <PanelBody title={__(\"Settings\", \"pdfp\")} initialOpen={false}>\r\n              <BControlPro\r\n                isPremium={isPremium}\r\n                Component={ToggleControl}\r\n                label={__(\"use adobe PDF embedder\", \"pdfp\")}\r\n                id=\"adobeEmbedder\"\r\n                checked={adobeEmbedder}\r\n                onChange={() => setAttributes({ adobeEmbedder: !adobeEmbedder })}\r\n              />\r\n\r\n              {adobeEmbedder && isPremium && (\r\n                <>\r\n                  <PanelRow>\r\n                    <label htmlFor=\"embedMode\" className=\"label\">\r\n                      {__(\"Embed Mode\", \"pdfp\")}\r\n                    </label>\r\n                    <SelectControl\r\n                      options={[\r\n                        { label: \"Sized Container\", value: \"SIZED_CONTAINER\" },\r\n                        { label: \"Full Window\", value: \"FULL_WINDOW\" },\r\n                        { label: \"In-Line\", value: \"IN_LINE\" },\r\n                        { label: \"Lightbox\", value: \"LIGHT_BOX\" },\r\n                      ]}\r\n                      value={adobeOptions.embedMode}\r\n                      onChange={(embedMode) => setAttributes({ adobeOptions: { ...adobeOptions, embedMode } })}\r\n                    />\r\n                  </PanelRow>\r\n\r\n                  {adobeOptions?.embedMode === \"LIGHT_BOX\" && (\r\n                    <PanelRow>\r\n                      <TextControl label={__(\"Button Text\", \"pdfp\")} value={popupBtnText} onChange={(popupBtnText) => setAttributes({ popupBtnText })} />\r\n                    </PanelRow>\r\n                  )}\r\n\r\n                  {[\"SIZED_CONTAINER\", \"IN_LINE\", \"LIGHT_BOX\", \"FULL_WINDOW\"].includes(adobeOptions.embedMode) && (\r\n                    <PanelRow>\r\n                      <label htmlFor=\"showPrintPDF\" className=\"label\">\r\n                        {__(\"Show Print Button\", \"pdfp\")}\r\n                      </label>\r\n                      <FormToggle\r\n                        id=\"showPrintPDF\"\r\n                        checked={adobeOptions?.showPrintPDF}\r\n                        onChange={() => setAttributes({ adobeOptions: { ...adobeOptions, showPrintPDF: !adobeOptions?.showPrintPDF } })}\r\n                      />\r\n                    </PanelRow>\r\n                  )}\r\n                  {[\"SIZED_CONTAINER\", \"IN_LINE\", \"LIGHT_BOX\", \"FULL_WINDOW\"].includes(adobeOptions.embedMode) && (\r\n                    <PanelRow>\r\n                      <label htmlFor=\"showDownloadPDF\" className=\"label\">\r\n                        {__(\"Show Download Button\", \"pdfp\")}\r\n                      </label>\r\n                      <FormToggle\r\n                        id=\"showDownloadPDF\"\r\n                        checked={adobeOptions?.showDownloadPDF}\r\n                        onChange={() => setAttributes({ adobeOptions: { ...adobeOptions, showDownloadPDF: !adobeOptions?.showDownloadPDF } })}\r\n                      />\r\n                    </PanelRow>\r\n                  )}\r\n                  {[\"SIZED_CONTAINER\"].includes(adobeOptions.embedMode) && (\r\n                    <PanelRow>\r\n                      <label htmlFor=\"showFullScreen\" className=\"label\">\r\n                        {__(\"Show Fullscreen Button\", \"pdfp\")}\r\n                      </label>\r\n                      <FormToggle\r\n                        id=\"showFullScreen\"\r\n                        checked={adobeOptions?.showFullScreen}\r\n                        onChange={() => setAttributes({ adobeOptions: { ...adobeOptions, showFullScreen: !adobeOptions?.showFullScreen } })}\r\n                      />\r\n                    </PanelRow>\r\n                  )}\r\n                  {[\"FULL_WINDOW\"].includes(adobeOptions.embedMode) && (\r\n                    <>\r\n                      <PanelRow>\r\n                        <label htmlFor=\"showAnnotationTools\" className=\"label\">\r\n                          {__(\"Show Annotation Tools\", \"pdfp\")}\r\n                        </label>\r\n                        <FormToggle\r\n                          id=\"showAnnotationTools\"\r\n                          checked={adobeOptions?.showAnnotationTools}\r\n                          onChange={() => setAttributes({ adobeOptions: { ...adobeOptions, showAnnotationTools: !adobeOptions?.showAnnotationTools } })}\r\n                        />\r\n                      </PanelRow>\r\n                      {/* <PanelRow>\r\n                      <label htmlFor=\"defaultViewMode\" className=\"label\">\r\n                        {__(\"View Mode\", \"pdfp\")}\r\n                      </label>\r\n                      <SelectControl\r\n                        options={[\r\n                          { label: \"Fit Page\", value: \"FIT_PAGE\" },\r\n                          { label: \"Fit Width\", value: \"FIT_WIDTH\" },\r\n                          { label: \"Two Column\", value: \"TWO_COLUMN\" },\r\n                          { label: \"Two Column Fit Page\", value: \"TWO_COLUMN_FIT_PAGE\" },\r\n                        ]}\r\n                        value={adobeOptions.defaultViewMode}\r\n                        onChange={(defaultViewMode) => setAttributes({ adobeOptions: { ...adobeOptions, defaultViewMode } })}\r\n                      />\r\n                    </PanelRow> */}\r\n                    </>\r\n                  )}\r\n                </>\r\n              )}\r\n\r\n              {!adobeEmbedder && (\r\n                <>\r\n                  <BControlPro\r\n                    isPremium={isPremium}\r\n                    Component={ToggleControl}\r\n                    label={__(\"Protect my content\", \"pdfp\")}\r\n                    id=\"protect\"\r\n                    checked={protect}\r\n                    onChange={() => setAttributes({ protect: !protect })}\r\n                  />\r\n\r\n                  {protect && (\r\n                    <BControlPro\r\n                      isPremium={isPremium}\r\n                      Component={ToggleControl}\r\n                      label={__(\"Enable Alert\", \"pdfp\")}\r\n                      id=\"alert\"\r\n                      checked={alert}\r\n                      onChange={() => setAttributes({ alert: !alert })}\r\n                    />\r\n                  )}\r\n\r\n                  {!protect && isPremium && <ToggleControl label={__(\"Allow print\", \"pdfp\")} id=\"print\" checked={print} onChange={() => setAttributes({ print: !print })} />}\r\n\r\n                  {isPremium && <ToggleControl label={__(\"Show title on top\", \"pdfp\")} id=\"showName\" checked={showName} onChange={() => setAttributes({ showName: !showName })} />}\r\n\r\n                  <BControlPro\r\n                    isPremium={isPremium}\r\n                    Component={ToggleControl}\r\n                    label={__(\"Raw PDF\", \"pdfp\")}\r\n                    id=\"onlyPDF\"\r\n                    checked={onlyPDF}\r\n                    onChange={() => setAttributes({ onlyPDF: !onlyPDF })}\r\n                  />\r\n\r\n                  {!protect && (\r\n                    <Fragment>\r\n                      <BControlPro\r\n                        isPremium={isPremium}\r\n                        Component={ToggleControl}\r\n                        label={__(\"Use browser pdf viewer\", \"pdfp\")}\r\n                        id=\"defaultBrowser\"\r\n                        checked={defaultBrowser}\r\n                        onChange={() => setAttributes({ defaultBrowser: !defaultBrowser })}\r\n                      />\r\n\r\n                      <BControlPro\r\n                        isPremium={isPremium}\r\n                        Component={ToggleControl}\r\n                        label={__(\"Show download button\", \"pdfp\")}\r\n                        id=\"downloadButton\"\r\n                        checked={downloadButton}\r\n                        onChange={() => setAttributes({ downloadButton: !downloadButton })}\r\n                      />\r\n\r\n                      {downloadButton && (\r\n                        <BControlPro\r\n                          isPremium={isPremium}\r\n                          Component={TextControl}\r\n                          label=\"Download Button Text\"\r\n                          value={downloadButtonText}\r\n                          onChange={(downloadButtonText) => setAttributes({ downloadButtonText })}\r\n                        />\r\n                      )}\r\n                    </Fragment>\r\n                  )}\r\n                  {!protect && (\r\n                    <Fragment>\r\n                      <BControlPro\r\n                        isPremium={isPremium}\r\n                        Component={ToggleControl}\r\n                        label={__(\"Show fullscreen button\", \"pdfp\")}\r\n                        id=\"fullscreenButton\"\r\n                        checked={fullscreenButton}\r\n                        onChange={() => setAttributes({ fullscreenButton: !fullscreenButton })}\r\n                      />\r\n\r\n                      {fullscreenButton && (\r\n                        <Fragment>\r\n                          {isPremium && (\r\n                            <TextControl\r\n                              label={__(\"Fullscreen Button Text\", \"pdfp\")}\r\n                              value={fullscreenButtonText}\r\n                              onChange={(fullscreenButtonText) => setAttributes({ fullscreenButtonText })}\r\n                            />\r\n                          )}\r\n                          <BControlPro\r\n                            isPremium={isPremium}\r\n                            Component={ToggleControl}\r\n                            label={__(\"Open fullscreen in new window\", \"pdfp\")}\r\n                            id=\"newWindow\"\r\n                            checked={newWindow}\r\n                            onChange={() => setAttributes({ newWindow: !newWindow })}\r\n                          />\r\n                        </Fragment>\r\n                      )}\r\n                    </Fragment>\r\n                  )}\r\n\r\n                  {!onlyPDF && (\r\n                    <>\r\n                      <BControlPro\r\n                        isPremium={isPremium}\r\n                        Component={ToggleControl}\r\n                        label={__(\"Enable thumbnails toggle menu\", \"pdfp\")}\r\n                        id=\"thumbMenu\"\r\n                        checked={thumbMenu}\r\n                        onChange={() => setAttributes({ thumbMenu: !thumbMenu })}\r\n                      />\r\n\r\n                      {thumbMenu && (\r\n                        <BControlPro\r\n                          isPremium={isPremium}\r\n                          Component={ToggleControl}\r\n                          label={__(\"Show Thumb by Default\", \"pdfp\")}\r\n                          id=\"sidebarOpen\"\r\n                          checked={sidebarOpen}\r\n                          onChange={() => setAttributes({ sidebarOpen: !sidebarOpen })}\r\n                        />\r\n                      )}\r\n                    </>\r\n                  )}\r\n\r\n                  <BControlPro\r\n                    isPremium={isPremium}\r\n                    Component={ToggleControl}\r\n                    label={__(\"Load the last version of the PDF\", \"pdfp\")}\r\n                    id=\"lastVersion\"\r\n                    checked={lastVersion}\r\n                    onChange={() => setAttributes({ lastVersion: !lastVersion })}\r\n                  />\r\n\r\n                  <BControlPro\r\n                    isPremium={isPremium}\r\n                    Component={ToggleControl}\r\n                    label={__(\"Horizontal Scrollbar\", \"pdfp\")}\r\n                    id=\"hrScroll\"\r\n                    checked={hrScroll}\r\n                    onChange={() => setAttributes({ hrScroll: !hrScroll })}\r\n                  />\r\n\r\n                  <BControlPro\r\n                    label={__(\"Initail page\", \"pdfp\")}\r\n                    isPremium={isPremium}\r\n                    Component={NumberControl}\r\n                    isShiftStepEnabled={true}\r\n                    onChange={(initialPage) => setAttributes({ initialPage })}\r\n                    shiftStep={1}\r\n                    value={initialPage}\r\n                  />\r\n\r\n                  <BControlPro\r\n                    label={__(\"Zoom Level (%)\", \"pdfp\")}\r\n                    isPremium={isPremium}\r\n                    Component={NumberControl}\r\n                    help={__(\"leave empty to set auto\", \"pdfp\")}\r\n                    isShiftStepEnabled={true}\r\n                    onChange={(zoomLevel) => setAttributes({ zoomLevel: parseInt(zoomLevel) })}\r\n                    min={25}\r\n                    max={300}\r\n                    shiftStep={1}\r\n                    value={zoomLevel}\r\n                  />\r\n                </>\r\n              )}\r\n            </PanelBody>\r\n            <PanelBody title={__(\"Style\", \"pdfp\")} initialOpen={false}>\r\n              <PanelRow>\r\n                <label htmlFor=\"Height\" className=\"label\">\r\n                  {__(\"Height\", \"pdfp\")}\r\n                </label>\r\n                <UnitControl\r\n                  onChange={(height) => setAttributes({ height })}\r\n                  value={height}\r\n                  units={[\r\n                    { value: \"px\", label: \"px\", default: 500 },\r\n                    { value: \"%\", label: \"%\", default: 100 },\r\n                    { value: \"vh\", label: \"vh\", default: 100 },\r\n                  ]}\r\n                  isResetValueOnUnitChange={true}\r\n                />\r\n              </PanelRow>\r\n              <PanelRow>\r\n                <label htmlFor=\"width\" className=\"label\">\r\n                  {__(\"Width\", \"pdfp\")}\r\n                </label>\r\n                <UnitControl\r\n                  onChange={(width) => setAttributes({ width })}\r\n                  value={width}\r\n                  units={[\r\n                    { value: \"px\", label: \"px\", default: 500 },\r\n                    { value: \"%\", label: \"%\", default: 100 },\r\n                    { value: \"vw\", label: \"vw\", default: 100 },\r\n                  ]}\r\n                  isResetValueOnUnitChange={true}\r\n                />\r\n              </PanelRow>\r\n              {/* <PanelRow>\r\n                <label htmlFor=\"titleFontSize\" className=\"label\">\r\n                  {__(\"Title Font Size\", \"pdfp\")}\r\n                </label> */}\r\n              {/* </PanelRow> */}\r\n              {isPremium && (\r\n                <UnitControl\r\n                  label={__(\"Title Font Size\", \"pdfp\")}\r\n                  onChange={(titleFontSize) => setAttributes({ titleFontSize })}\r\n                  value={titleFontSize}\r\n                  units={[\r\n                    { value: \"px\", label: \"px\", default: 16 },\r\n                    { value: \"em\", label: \"em\", default: 1 },\r\n                    { value: \"rem\", label: \"rem\", default: 1 },\r\n                  ]}\r\n                  isResetValueOnUnitChange={true}\r\n                />\r\n              )}\r\n            </PanelBody>\r\n            {adobeOptions.embedMode === \"LIGHT_BOX\" && adobeEmbedder && isPremium && (\r\n              <PanelBody title={__(\"Adobe Lightbox Button Style\", \"pdfp\")}>\r\n                <PanelRow>\r\n                  <label>{__(\"Background\", \"bpm\")}</label>\r\n                  <BColor value={popupBtnStyle?.background} onChange={(background) => setAttributes({ popupBtnStyle: { ...popupBtnStyle, background } })} />\r\n                </PanelRow>\r\n                <PanelRow>\r\n                  <label>{__(\"Text Color\", \"bpm\")}</label>\r\n                  <BColor value={popupBtnStyle?.color} onChange={(color) => setAttributes({ popupBtnStyle: { ...popupBtnStyle, color } })} />\r\n                </PanelRow>\r\n                <BSpacer\r\n                  title={__(\"Padding\", \"pdfp\")}\r\n                  value={popupBtnStyle?.padding || {}}\r\n                  onChange={(padding) => setAttributes({ popupBtnStyle: { ...popupBtnStyle, padding } })}\r\n                />\r\n              </PanelBody>\r\n            )}\r\n            <PanelBody title={__(\"Additional\", \"pdfp\")} initialOpen={false}>\r\n              {/* <PanelRow>\r\n              <label>{__(\"ID\", \"pdfp\")}</label>\r\n              <TextControl value={additional.ID} onChange={(ID) => setAttributes({ additional: { ...additional, ID } })} />\r\n            </PanelRow> */}\r\n\r\n              <BControlPro\r\n                isPremium={isPremium}\r\n                Component={TextControl}\r\n                label={__(\"Class\", \"pdfp\")}\r\n                value={additional.Class}\r\n                onChange={(Class) => setAttributes({ additional: { ...additional, Class } })}\r\n              />\r\n              <BControlPro\r\n                isPremium={isPremium}\r\n                Component={TextareaControl}\r\n                label={__(\"CSS\", \"pdfp\")}\r\n                value={additional.CSS}\r\n                onChange={(CSS) => setAttributes({ additional: { ...additional, CSS } })}\r\n              />\r\n            </PanelBody>\r\n          </Panel>\r\n        </Fragment>\r\n      </InspectorControls>\r\n      {confirmModalOpen && (\r\n        <Modal title={__(\"Do you want to delete?\", \"pdfp\")} onRequestClose={() => setConfirmModalOpen(false)}>\r\n          <div className=\"confirmPresetDelete\">\r\n            {loading && <span className=\"pdfp_loader\"></span>}\r\n            {/* <Button variant=\"primary\" onClick={() => setConfirmModalOpen(false)}>{__('No', 'pdfp')}</Button> */}\r\n            <Button\r\n              disabled={loading}\r\n              variant=\"primary\"\r\n              onClick={() => {\r\n                setConfirm(true);\r\n                handleDeletePreset(confirmModalOpen);\r\n              }}\r\n            >\r\n              {__(\"Yes\", \"pdfp\")}\r\n            </Button>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","var __WEBPACK_NAMESPACE_OBJECT__ = wp.element;","import { Modal } from \"@wordpress/components\";\r\nimport { Placeholder, Button } from \"@wordpress/components\";\r\nimport { Fragment, useRef, useState } from \"@wordpress/element\";\r\nconst { __ } = wp.i18n;\r\nconst { MediaUpload, MediaUploadCheck, URLPopover } = wp.blockEditor;\r\n\r\nconst Uploader = ({ setAttributes, attributes }) => {\r\n  const { file } = attributes;\r\n  const [source, setSource] = useState(\"\");\r\n  const [isValid, setIsValid] = useState(true);\r\n  const [isOpen, setOpen] = useState(true);\r\n  const [licenseKey, setLicenseKey] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const modalRef = useRef(null);\r\n\r\n  const handleApply = (event) => {\r\n    event.preventDefault();\r\n    if (!validURL(source)) {\r\n      setIsValid(false);\r\n      return false;\r\n    }\r\n    // createVideo();\r\n    setIsValid(true);\r\n    setSource(\"\");\r\n    setAttributes({ file: source });\r\n  };\r\n\r\n  const validURL = (str) => {\r\n    var pattern = new RegExp(\"https?\", \"i\"); // fragment locator\r\n    return !!pattern.test(str);\r\n  };\r\n\r\n  // const handleLicenseActive = async () => {\r\n  //   // licenseWrapper, {\r\n  //   //   products: [\"pdfposter\", \"uoGmX\"],\r\n  //   //   prefix: \"pdfp\",\r\n  //   // }\r\n  //   // setLoading(true)\r\n  //   new LicenseHandler(modalRef.current, {\r\n  //       products: [\"pdfposter\", \"uoGmX\"],\r\n  //       prefix: \"pdfp\",\r\n  //   });\r\n\r\n  // }\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* {!pdfp?.pipe && isOpen && (\r\n        <Modal title={__(\"Active the license key\", \"pdfp\")} onRequestClose={() => setOpen(false)} className=\"license_activation_form\" ref={modalRef}>\r\n          <p>\r\n            {__(\r\n              \"PDF Poster PRO license key is not activated yet. Please active the license key to available all the pro features. \", \"pdfp\"\r\n            )}\r\n            {\" \"}\r\n            \r\n          </p>\r\n          <a href=\"https://pdfposter.com/docs/license-activation/\" target=\"_blank\" className=\"button button-primary\">\r\n            {__(\"Learn More\", \"pdfp\")}\r\n          </a>\r\n       \r\n        </Modal>\r\n      )} */}\r\n      <Placeholder\r\n        icon={\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            viewBox=\"0 0 24 24\"\r\n            fill=\"none\"\r\n            stroke=\"currentColor\"\r\n            strokeWidth=\"2\"\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            className=\"html5-block-icon\"\r\n          >\r\n            <polygon points=\"23 7 16 12 23 17 23 7\"></polygon>\r\n            <rect x=\"1\" y=\"5\" width=\"15\" height=\"14\" rx=\"2\" ry=\"2\"></rect>\r\n          </svg>\r\n        }\r\n        instructions={__(\"Upload a PDF or paste/write PDF URL.\", \"pdfp\")}\r\n        label={__(\"Upload a PDF \", \"pdfp\")}\r\n      >\r\n        <MediaUploadCheck>\r\n          <MediaUpload\r\n            allowedTypes={[\"application/pdf\"]}\r\n            onSelect={(file) => setAttributes({ file: file.url })}\r\n            render={({ open }) => (\r\n              <Button isPrimary onClick={open}>\r\n                {__(\"Upload\", \"pdfp\")}\r\n              </Button>\r\n            )}\r\n          />\r\n        </MediaUploadCheck>\r\n        <div className=\"h5vpUrlInput\">\r\n          <h3 style={{ fontSize: \"15px\" }}> Or </h3>\r\n          <input\r\n            type=\"url\"\r\n            aria-label={__(\"URL\", \"pdfp\")}\r\n            placeholder={__(\"Paste or type a PDF URL\", \"pdfp\")}\r\n            onChange={(src) => {\r\n              pdfp?.pipe ? setSource(src.target.value) : setOpen(true);\r\n            }}\r\n            value={source}\r\n          />\r\n          <Button label={__(\"Apply\", \"pdfp\")} type=\"submit\" onClick={handleApply} isPrimary>\r\n            {__(\"Apply\", \"pdfp\")}\r\n          </Button>\r\n        </div>\r\n        {!isValid && <p style={{ color: \"#bd1818\", width: \"100%\", margin: 0 }}>{__(\"URL is not valid\", \"pdfp\")}</p>}\r\n      </Placeholder>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Uploader;\r\n","const { Fragment, useState, useEffect, useRef } = wp.element;\r\n\r\nimport { __ } from \"@wordpress/i18n\";\r\nimport PresetModal from \"./PresetModal\";\r\nimport Preview from \"./Preview\";\r\nimport Settings from \"./Settings\";\r\nimport Uploader from \"./Uploader\";\r\n\r\nfunction Edit(props) {\r\n  const { attributes, setAttributes, clientId } = props;\r\n  const { uniqueId, file = pdfp?.placeholder, additional, adobeOptions } = attributes;\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [preset, setPreset] = useState({ preset: attributes });\r\n\r\n  //generate new unique ID\r\n  useEffect(() => {\r\n    setAttributes({ uniqueId: \"pdfp\" + clientId.substr(0, 8) });\r\n    setAttributes({ adobeOptions: { ...adobeOptions, updated: true } });\r\n  }, []);\r\n\r\n  if (!file) {\r\n    return <Uploader attributes={attributes} setAttributes={setAttributes} />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <style>{additional?.CSS}</style>\r\n      <Settings setModalOpen={setModalOpen} {...props} setPreset={setPreset} />\r\n      <Preview {...props} />\r\n      {pdfp?.pipe && <>{modalOpen && <PresetModal preset={preset} setPreset={setPreset} setModalOpen={setModalOpen} {...props} />}</>}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Edit;\r\n","// import attributes from \"./attributes\";\r\nimport Edit from \"./Edit\";\r\n\r\nconst { registerBlockType } = wp.blocks;\r\nimport metadata from \"./../../../blocks/pdfposter/block.json\";\r\nregisterBlockType(metadata, {\r\n  edit: Edit,\r\n  save: () => {\r\n    return null;\r\n  },\r\n});\r\n","const attributes = {\r\n  data: {\r\n    type: \"object\",\r\n    default: { tringle_text: \"\" },\r\n  },\r\n};\r\n\r\nexport default attributes;\r\n","import { __ } from \"@wordpress/i18n\";\r\nconst { Panel, PanelBody, SelectControl } = wp.components;\r\nconst { InspectorControls } = wp.blockEditor;\r\nconst { withSelect } = wp.data;\r\nconst { compose } = wp.compose;\r\n\r\nconst Settings = (props) => {\r\n  const {\r\n    props: { attributes, setAttributes },\r\n    docs,\r\n  } = props;\r\n  const { data } = attributes;\r\n  let selectBox;\r\n  if (docs) {\r\n    selectBox = docs.map((item, index) => {\r\n      return { label: item?.title?.rendered, value: item?.id };\r\n    });\r\n    selectBox = [{ label: \"Select\", value: null }, ...selectBox];\r\n  }\r\n\r\n  return (\r\n    <InspectorControls style={{ marginBottom: \"40px\" }}>\r\n      <Panel>\r\n        <PanelBody>\r\n          <SelectControl label=\"Size\" value={data?.tringle_text} options={selectBox} onChange={(id) => setAttributes({ data: { tringle_text: id } })} />\r\n        </PanelBody>\r\n      </Panel>\r\n    </InspectorControls>\r\n  );\r\n};\r\n\r\nexport default compose([\r\n  withSelect((select, props) => {\r\n    const docs = select(\"core\").getEntityRecords(\"postType\", \"pdfposter\", { per_page: 100 });\r\n    return {\r\n      docs,\r\n    };\r\n  }),\r\n])(Settings);\r\n","const { Fragment, useEffect, useState } = wp.element;\r\nimport { __ } from \"@wordpress/i18n\";\r\n\r\nimport Settings from \"./Settings\";\r\n\r\nfunction Edit(props) {\r\n  const { attributes } = props;\r\n  const {\r\n    data: { tringle_text },\r\n  } = attributes;\r\n  // wp.data.dispatch(\"core/edit-post\").hideBlockTypes([\"pdp/podcast\"]);\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    jQuery.get(pdfp?.siteUrl + \"/wp-json/pdfposter/v1/single/\" + tringle_text, function (res) {\r\n      setData(res);\r\n    });\r\n  }, [attributes]);\r\n\r\n  const {\r\n    file = pdfp?.placeholder,\r\n    title,\r\n    titleFontSize,\r\n    height = \"1122px\",\r\n    width = \"100%\",\r\n    showName,\r\n    print,\r\n    onlyPDF,\r\n    downloadButton,\r\n    downloadButtonText,\r\n    fullscreenButton,\r\n    fullscreenButtonText,\r\n    protect,\r\n    thumbMenu,\r\n    initialPage,\r\n  } = data;\r\n\r\n  const source = `${pdfp?.dir}pdfjs/web/${protect ? \"pviewer.php\" : \"viewer.php\"}?file=${file}&nobaki=${!protect && downloadButton ? \"vera\" : \"false\"}&stdono=${\r\n    print && !protect ? \"vera\" : \"false\"\r\n  }&open=false&onlypdf=${onlyPDF ? \"vera\" : \"false\"}&side=${thumbMenu}#page=${initialPage}`;\r\n\r\n  return (\r\n    <Fragment>\r\n      <Settings props={props} />\r\n      <div className={`pdfp_wrapper`} style={{ width }}>\r\n        {showName && <p style={{ fontSize: titleFontSize }}>{title}</p>}\r\n        <div className=\"cta_wrapper\">\r\n          {downloadButton && !protect && (\r\n            <a className=\"pdfp_download\" download href={file}>\r\n              <button className=\"pdfp_download_btn\">{downloadButtonText}</button>\r\n            </a>\r\n          )}\r\n          {fullscreenButton && !protect && (\r\n            <a href={source} target=\"_blank\">\r\n              <button>{fullscreenButtonText}</button>\r\n            </a>\r\n          )}\r\n        </div>\r\n        <div className=\"iframe_wrapper\">\r\n          <div className=\"pdfp_frame_overlay\"></div>\r\n          <iframe className=\"pdfp_iframe\" height={height} style={{ height }} src={source}></iframe>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Edit;\r\n","import attributes from \"./attributes\";\r\nimport Edit from \"./Edit\";\r\n\r\nimport { __ } from \"@wordpress/i18n\";\r\nconst { registerBlockType } = wp.blocks;\r\n// import Edit from \"./Edit\";\r\nregisterBlockType(\"meta-box/document-embedder\", {\r\n  title: __(\"PDF Poster Selector\", \"pdfp\"),\r\n  icon: \"pdf\",\r\n  category: \"design\",\r\n  keywords: [__(\"PDF Poster\", \"pdfp\"), __(\"PDF Viewer\", \"pdfp\")],\r\n  supports: {\r\n    // align: [\"wide\", \"full\"],\r\n    html: false,\r\n  },\r\n  attributes,\r\n  getEditWrapperProps: () => {},\r\n  edit: Edit,\r\n  save: () => {\r\n    return null;\r\n  },\r\n  example: {\r\n    attributes: true,\r\n  },\r\n});\r\n"],"names":["wp","i18n","components","useState","Fragment","element","Dropdown","ColorPicker","Button","__","props","value","title","defaultColor","onChange","className","disableAlpha","boxPosition","globalColors","state","setState","createElement","position","renderToggle","_ref","isOpen","onToggle","style","display","icon","onClick","backgroundColor","renderContent","_ref2","onClose","color","onChangeComplete","c","rgb","r","g","b","a","hex","length","map","Component","PanelRow","__experimentalNumberControl","NumberControl","BSpacer","linking","setLinking","enable","top","right","bottom","left","label","isShiftStepEnabled","isDragEnabled","shiftStep","width","device","onChangeDevice","onChangeHandler","to","v","newValue","maxWidth","parseInt","defaultProps","attributes","setAttributes","titleFontSize","height","showName","print","onlyPDF","defaultBrowser","adobeEmbedder","downloadButton","downloadButtonText","fullscreenButton","fullscreenButtonText","newWindow","protect","thumbMenu","sidebarOpen","initialPage","zoomLevel","alert","lastVersion","hrScroll","adobeOptions","popupBtnStyle","popupBtnText","PanelBody","initialOpen","htmlFor","FormToggle","id","checked","SelectControl","options","embedMode","TextControl","includes","showPrintPDF","showDownloadPDF","showFullScreen","showAnnotationTools","help","UnitControl","units","default","isResetValueOnUnitChange","BColor","background","padding","useEffect","useRef","RichText","blockEditor","clientId","isSelected","isPreset","exampleFile","uniqueId","file","pdfp","placeholder","additional","align","CSS","adobeRef","current","innerHTML","renderPDF","document","getElementById","AdobeDC","View","fpdfAdmin","adobeClientKey","divId","previewFile","content","location","url","metaData","fileName","source","window","origin","zoom","viewer","dir","ref","minHeight","split","slice","join","border","target","href","siteUrl","Class","tagName","allowedFormats","fontSize","margin","e","preventDefault","download","src","ajaxCall","async","method","arguments","undefined","data","jQuery","ajax","ajax_url","dataType","action","nonce","then","res","catch","error","console","log","preset","setPreset","setModalOpen","statePresets","isSaving","setIsSaving","handlePresetChange","update","Modal","shouldCloseOnClickOutside","onRequestClose","name","PresetOptions","Preview","_extends","class","disabled","variant","addional","other","model","item","newPresets","MediaUpload","MediaUploadCheck","type","onSelect","allowedTypes","image","render","open","fileUrl","appId","developerKey","scope","oauthToken","pickerApiLoaded","onAuthApiLoad","gapi","auth","authorize","client_id","immediate","handleAuthResult","onPickerApiLoad","createPicker","authResult","access_token","view","google","picker","ViewId","DOCS","PickerBuilder","setAppId","setOAuthToken","addView","DocsUploadView","setDeveloperKey","setCallback","pickerCallback","build","setVisible","Action","PICKED","docs","embedUrl","load","callback","isPremium","setOpen","restProps","labelMiddleWare","val","Panel","__experimentalUnitControl","InspectorControls","select","getCurrentPostId","chooserContainer","confirm","setConfirm","confirmModalOpen","setConfirmModalOpen","loading","setLoading","setIsPremium","pipe","Dropbox","success","link","cancel","linkType","multiselect","folderselect","button","createChooseButton","setTimeout","hasChildNodes","appendChild","fetch","handleDeletePreset","err","presetDelete","filter","postType","getCurrentPostType","postId","marginBottom","GoogleDrivePicker","gClientId","gAppId","gDeveloperKey","BMediaUpload","ToggleControl","toUpperCase","Dashicon","BControlPro","min","max","TextareaControl","URLPopover","setSource","isValid","setIsValid","licenseKey","setLicenseKey","validURL","str","RegExp","test","Placeholder","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","x","y","rx","ry","instructions","isPrimary","event","modalOpen","substr","updated","Settings","PresetModal","Uploader","registerBlockType","blocks","metadata","edit","Edit","save","tringle_text","withSelect","compose","getEntityRecords","per_page","selectBox","index","rendered","setData","get","category","keywords","supports","html","getEditWrapperProps","example"],"sourceRoot":""}