{"version":3,"file":"cf-images-media.min.js","mappings":"oBAWA,SAAWA,GASV,MAAMC,EAAc,CACnBC,wBAAyB,qBACzBC,qBAAsB,kBACtBC,qBAAsB,kBACtBC,uBAAwB,oBACxBC,wBAAyB,qBACzBC,qBAAsB,oBACtBC,mBAAoB,uBAMrBC,OAAOC,KAAKT,GAAaU,SAASC,IACjCZ,EAAEa,UAAUC,GAAG,QAASb,EAAYW,IAAS,SAAUG,GACtDA,EAAEC,iBAEF,MAAM,WAAEC,EAAU,aAAEC,GAAiBC,SAASC,QAExCC,EAAYrB,EAAEsB,MAAMC,QAAQ,qBAClCF,EAAUG,KACTP,EAAa,2CCjCG,SACnBL,GAEsB,IADtBa,EAAqBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAIzB,OAFAD,EAAO,CAAEI,YAAaC,OAAOX,SAASY,MAAOnB,OAAAA,EAAQa,KAAAA,GAE9C,IAAIO,SAAQ,SAACC,EAASC,GAC5BC,OAAOC,KAAK,CACXC,IAAKP,OAAOQ,QACZC,KAAM,OACNd,KAAAA,EACAe,QAAO,SAACC,GACPR,EAAQQ,EACT,EACAC,MAAK,SAACA,GACLR,EAAOQ,EACR,GAEF,GACD,CDiBGC,CAAK/B,EAAQZ,EAAEsB,MAAMG,KAAK,OACxBmB,MAAMH,IACN,GAAKA,EAASD,QAMdnB,EAAUG,KAAKiB,EAAShB,UANxB,CACC,MAAMoB,EAAUJ,EAAShB,MAAQP,EACjCG,EAAUG,KAAKqB,EAEhB,CAE6B,IAE7BC,MAAMhB,OAAOiB,QAAQC,IACxB,GAAE,GAEH,CA9CD,CA8CGb,QEpDD,SAAUc,GAGX,MAAMC,EAAUC,GAAGC,MAAMC,KAAKC,WAAWJ,QAGzC,QAAK,IAAuBA,EAAQK,UACnC,OAGD,MAMMC,EAAWP,EAAEO,SALlB,yIAODN,EAAQK,UAAYL,EAAQK,UAAUE,OACrC,CACC,UAAAC,GACCR,EAAQS,UAAUD,WAAWE,MAAOtC,KAAMI,WAC1CJ,KAAKuC,SAAUvC,KAAKwC,MAAO,0BAA2BxC,KAAKyC,OAC5D,EAEA,MAAAA,GACCb,EAAQS,UAAUI,OAAOH,MAAOtC,KAAMI,WAEtC,MAAMF,EAAOF,KAAKwC,MAAME,IAAK,oBAC7B,QAAK,IAAuBxC,EAC3B,OAAOF,KAGRA,KAAKwC,MAAMG,QACX3C,KAAK4C,MAAMC,SAEX,MAAMC,EAASZ,EAAU,CACxBa,MAAO,iBACPC,MAAO9C,IAGRF,KAAKiD,IAAIC,KAAM,aAAcC,QAASL,GACtC9C,KAAK4C,MAAMH,QACZ,GAGH,CA9CA,CA8CGd,E","sources":["webpack://cf-images/./assets/_src/js/core.js","webpack://cf-images/./assets/_src/js/helpers/post.ts","webpack://cf-images/./assets/_src/js/media.js"],"sourcesContent":["/**\n * Main JavaScript file.\n *\n * @author Anton Vanyukov <a.vanyukov@vcore.ru>\n * @since 1.0.0\n */\n\n/* global CFImages */\n\nimport { post } from './helpers/post';\n\n(function ($) {\n\t'use strict';\n\n\t/**\n\t * List of ajaxActions.\n\t * The first parameter is the Ajax callback, the second is which element to map the click event to.\n\t *\n\t * @since 1.2.1\n\t */\n\tconst ajaxActions = {\n\t\tcf_images_offload_image: '.cf-images-offload', // Process offloading from media library.\n\t\tcf_images_skip_image: '.cf-images-skip', // Skip image from processing.\n\t\tcf_images_undo_image: '.cf-images-undo', // Process undo offloading from media library.\n\t\tcf_images_delete_image: '.cf-images-delete', // Process remove image action from media library.\n\t\tcf_images_restore_image: '.cf-images-restore', // Download image back to media library.\n\t\tcf_images_ai_caption: '.cf-images-ai-alt', // Process AI caption.\n\t\tcf_images_compress: '.cf-images-compress', // Compress image.\n\t};\n\n\t/**\n\t * Register Ajax actions.\n\t */\n\tObject.keys(ajaxActions).forEach((action) => {\n\t\t$(document).on('click', ajaxActions[action], function (e) {\n\t\t\te.preventDefault();\n\n\t\t\tconst { inProgress, offloadError } = CFImages.strings;\n\n\t\t\tconst divStatus = $(this).closest('.cf-images-status');\n\t\t\tdivStatus.html(\n\t\t\t\tinProgress + '<span class=\"spinner is-active\"></span>'\n\t\t\t);\n\n\t\t\tpost(action, $(this).data('id'))\n\t\t\t\t.then((response) => {\n\t\t\t\t\tif (!response.success) {\n\t\t\t\t\t\tconst message = response.data || offloadError;\n\t\t\t\t\t\tdivStatus.html(message);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdivStatus.html(response.data);\n\t\t\t\t})\n\t\t\t\t.catch(window.console.log);\n\t\t});\n\t});\n})(jQuery);\n","/**\n * Do AJAX request to WordPress.\n *\n * @since 1.0.0\n * @param {string}        action Registered AJAX action.\n * @param {Object|string} data   Additional data that needs to be passed in POST request.\n * @return {Promise<unknown>} Return data.\n */\nexport const post = (\n\taction: string,\n\tdata: object | string = {}\n): Promise<unknown> => {\n\tdata = { _ajax_nonce: window.CFImages.nonce, action, data };\n\n\treturn new Promise((resolve, reject) => {\n\t\tjQuery.ajax({\n\t\t\turl: window.ajaxurl,\n\t\t\ttype: 'POST',\n\t\t\tdata,\n\t\t\tsuccess(response) {\n\t\t\t\tresolve(response);\n\t\t\t},\n\t\t\terror(error) {\n\t\t\t\treject(error);\n\t\t\t},\n\t\t});\n\t});\n};\n","/* global _ */\n\nimport '../css/media.scss';\nimport './core';\n\n( function( _ ) {\n\t'use strict';\n\n\tconst Details = wp.media.view.Attachment.Details;\n\n\t// Do not run on media library list mode.\n\tif ( 'undefined' === typeof Details.TwoColumn ) {\n\t\treturn;\n\t}\n\n\tconst sharedTemplate =\n\t\t\"<span class='setting cf-images'>\" +\n\t\t\"<span class='name'><%= label %></span>\" +\n\t\t\"<span class='value cf-images-status'><%= value %></span>\" +\n\t\t'</span>';\n\n\tconst template = _.template( sharedTemplate );\n\n\tDetails.TwoColumn = Details.TwoColumn.extend(\n\t\t{\n\t\t\tinitialize() {\n\t\t\t\tDetails.prototype.initialize.apply( this, arguments );\n\t\t\t\tthis.listenTo( this.model, 'change:cf-images-status', this.render );\n\t\t\t},\n\n\t\t\trender() {\n\t\t\t\tDetails.prototype.render.apply( this, arguments );\n\n\t\t\t\tconst html = this.model.get( 'cf-images-status' );\n\t\t\t\tif ( 'undefined' === typeof html ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t\tthis.model.fetch();\n\t\t\t\tthis.views.detach();\n\n\t\t\t\tconst status = template( {\n\t\t\t\t\tlabel: 'Offload status',\n\t\t\t\t\tvalue: html,\n\t\t\t\t} );\n\n\t\t\t\tthis.$el.find( '.settings' ).prepend( status );\n\t\t\t\tthis.views.render();\n\t\t\t},\n\t\t}\n\t);\n}( _ ) );\n"],"names":["$","ajaxActions","cf_images_offload_image","cf_images_skip_image","cf_images_undo_image","cf_images_delete_image","cf_images_restore_image","cf_images_ai_caption","cf_images_compress","Object","keys","forEach","action","document","on","e","preventDefault","inProgress","offloadError","CFImages","strings","divStatus","this","closest","html","data","arguments","length","undefined","_ajax_nonce","window","nonce","Promise","resolve","reject","jQuery","ajax","url","ajaxurl","type","success","response","error","post","then","message","catch","console","log","_","Details","wp","media","view","Attachment","TwoColumn","template","extend","initialize","prototype","apply","listenTo","model","render","get","fetch","views","detach","status","label","value","$el","find","prepend"],"sourceRoot":""}