<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/photos/library/v1/photos_library.proto

namespace Google\Photos\Library\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A simple media item to be created in Google Photos via an upload token.
 *
 * Generated from protobuf message <code>google.photos.library.v1.SimpleMediaItem</code>
 */
class SimpleMediaItem extends \Google\Protobuf\Internal\Message
{
    /**
     * Token identifying the media bytes that have been uploaded to Google.
     *
     * Generated from protobuf field <code>string upload_token = 1;</code>
     */
    protected $upload_token = '';
    /**
     * File name with extension of the media item. This is shown to the user in
     * Google Photos. The file name specified during the <a
     * href="https://developers.google.com/photos/library/guides/upload-media">byte
     * upload process</a> is ignored if this field is set. The file name,
     * including the file extension, shouldn't be more than 255 characters. This
     * is an optional field.
     *
     * Generated from protobuf field <code>string file_name = 2;</code>
     */
    protected $file_name = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $upload_token
     *           Token identifying the media bytes that have been uploaded to Google.
     *     @type string $file_name
     *           File name with extension of the media item. This is shown to the user in
     *           Google Photos. The file name specified during the <a
     *           href="https://developers.google.com/photos/library/guides/upload-media">byte
     *           upload process</a> is ignored if this field is set. The file name,
     *           including the file extension, shouldn't be more than 255 characters. This
     *           is an optional field.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Photos\Library\V1\PhotosLibrary::initOnce();
        parent::__construct($data);
    }

    /**
     * Token identifying the media bytes that have been uploaded to Google.
     *
     * Generated from protobuf field <code>string upload_token = 1;</code>
     * @return string
     */
    public function getUploadToken()
    {
        return $this->upload_token;
    }

    /**
     * Token identifying the media bytes that have been uploaded to Google.
     *
     * Generated from protobuf field <code>string upload_token = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setUploadToken($var)
    {
        GPBUtil::checkString($var, True);
        $this->upload_token = $var;

        return $this;
    }

    /**
     * File name with extension of the media item. This is shown to the user in
     * Google Photos. The file name specified during the <a
     * href="https://developers.google.com/photos/library/guides/upload-media">byte
     * upload process</a> is ignored if this field is set. The file name,
     * including the file extension, shouldn't be more than 255 characters. This
     * is an optional field.
     *
     * Generated from protobuf field <code>string file_name = 2;</code>
     * @return string
     */
    public function getFileName()
    {
        return $this->file_name;
    }

    /**
     * File name with extension of the media item. This is shown to the user in
     * Google Photos. The file name specified during the <a
     * href="https://developers.google.com/photos/library/guides/upload-media">byte
     * upload process</a> is ignored if this field is set. The file name,
     * including the file extension, shouldn't be more than 255 characters. This
     * is an optional field.
     *
     * Generated from protobuf field <code>string file_name = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setFileName($var)
    {
        GPBUtil::checkString($var, True);
        $this->file_name = $var;

        return $this;
    }

}

