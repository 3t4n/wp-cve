<?php

/**
 * Plugin Name: Lead Generated
 * Plugin URI: https://www.leadgenerated.com/
 * Description: Save the leads to Lead Generated system generated by various form plugins. We currently support CF7, Ninja Forms, WP Forms, Gravity Forms and Elementor Builder.
 * Version: 1.25
 * Author: Lead Generated
 * Author URI: https://profiles.wordpress.org/leadgenerated/
 * License: GPLv2 or later
 */

/*  Copyright 2019  Lead Generated  (email : yashanmittal@gmail.com)

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License, version 2, as 
    published by the Free Software Foundation.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
*/

define( 'LGCRM_PLUGIN_URL', plugin_dir_url( __FILE__ ) );
define( 'LGCRM_PLUGIN_DIR', plugin_dir_path( __FILE__ ) );
define( 'LGCRM_INCLUDES_DIR', plugin_dir_path( __FILE__ ).'/includes' );
define( 'LGCRM_ADMIN_DIR', plugin_dir_path( __FILE__ ).'/admin' );

require_once LGCRM_INCLUDES_DIR . '/helpers.php';
require_once LGCRM_INCLUDES_DIR . '/wsl-base.php';
require_once LGCRM_INCLUDES_DIR . '/class-wsl-api.php';
require_once LGCRM_INCLUDES_DIR . '/class-wsl-cf7-api.php';
require_once LGCRM_INCLUDES_DIR . '/class-wsl-wpf-api.php';
require_once LGCRM_INCLUDES_DIR . '/class-wsl-ninja-api.php';
require_once LGCRM_INCLUDES_DIR . '/class-wsl-gravity-api.php';
require_once LGCRM_INCLUDES_DIR . '/class-wsl-elementor-api.php';
require_once LGCRM_INCLUDES_DIR . '/class-wsl-divi-api.php';
require_once LGCRM_INCLUDES_DIR . '/class-wsl-wpff-api.php';
require_once LGCRM_INCLUDES_DIR . '/class-wsl-typeform-api.php';
require_once LGCRM_INCLUDES_DIR . '/class-wsl-beaver-api.php';
require_once LGCRM_INCLUDES_DIR . '/class-wsl-wpbrizy-api.php';
require_once LGCRM_INCLUDES_DIR . '/class-wsl-smartforms-api.php';
require_once LGCRM_INCLUDES_DIR . '/class-wsl-caldera-api.php';
require_once LGCRM_INCLUDES_DIR . '/class-wsl-thriveform-api.php';
require_once LGCRM_INCLUDES_DIR . '/class-wsl-formidable-api.php';
require_once LGCRM_INCLUDES_DIR . '/class-lgcrm-ug-gutenberg-form-api.php';

if(is_admin()){
    require_once LGCRM_ADMIN_DIR . '/class-wsl-admin.php';
    $admin_obj = new Wsl_Admin();
}


// define the wpcf7_submit callback 
function lgcrm_wpcf7_submit( $instance, $result ) {
    if(!lgcrm_is_send_to_crm()){
        return false;
    }
    
    if($result['status'] == 'validation_failed'){
        return false;
    }
    $submission = WPCF7_Submission::get_instance();
    
    $send_to_crm = lgcrm_get_cf7_post_setting('send_to_crm',$instance->id());
    if($send_to_crm != 1){
        return false;
    }
    
    $laravel_api = new Wsl_Cf7_Api($instance,$result);
    $laravel_api->set_submission_instance($submission);
    $laravel_api->call();
    return true;
}
//Contact Form 7 submit hook
add_action( 'wpcf7_submit', 'lgcrm_wpcf7_submit', 10, 2 ); 
         
// add the action 
//add_action( 'wpcf7_mail_sent', 'your_wpcf7_mail_sent_function' );

add_filter( 'wpcf7_editor_panels', 'lgcrm_add_panel' );

function lgcrm_add_panel($panels){
    $panels['leads-panel'] = array(
        'title' => 'Lead Settings',
        'callback' => 'lgcrm_leads_panel_callback'
    );
    return $panels;
}

function lgcrm_leads_panel_callback($post){
    include_once LGCRM_PLUGIN_DIR.'/admin/editor-panel.php';
}

add_action( 'wpcf7_after_save', 'lgcrm_success_page_save_contact_form' );

function lgcrm_success_page_save_contact_form( $contact_form ) {
    $contact_form_id = $contact_form->id();

//    if ( !isset( $_POST ) || empty( $_POST ) || !isset( $_POST['cf7-redirect-page-id'] ) ) {
//        return;
//    }
//    else {
        // Verify that the nonce is valid.
        if (!isset($_POST['cf7_wsl_editor_panel_nonce']) || ! wp_verify_nonce( $_POST['cf7_wsl_editor_panel_nonce'], 'cf7_wsl_editor_panel' ) ) {
            return;
        }
        // Update the stored value
        $wsl_settings = array_map( 'intval', $_POST['wsl_settings'] );
        update_post_meta( $contact_form_id, '_wsl_settings', $wsl_settings );
//    }
}

function lgcrm_ninja_forms_after_submission( $form_data ){
    if(!lgcrm_is_send_to_crm()){
        return false;
    }
    $laravel_api = new Wsl_Ninja_Api($form_data['fields_by_key']);
    $laravel_api->set_submission_instance($form_data);
    $laravel_api->call();
}
add_action( 'ninja_forms_after_submission', 'lgcrm_ninja_forms_after_submission' );

function lgcrm_wpf_process_entry_save( $fields, $entry, $form_id, $form_data ) {
    if(!lgcrm_is_send_to_crm()){
        return false;
    }
  
    $laravel_api = new Wsl_Wpf_Api($fields);
    $laravel_api->set_submission_instance($form_data);
    $laravel_api->call();
}
add_filter( 'wpforms_process_entry_save', 'lgcrm_wpf_process_entry_save', 10, 4 );

function lgcrm_gravityform_submission( $entry, $form) { //Gravity forms
    if(!lgcrm_is_send_to_crm()){
        return false;
    }

    $laravel_api = new Wsl_Gravity_Api($entry, $form);
    $laravel_api->set_submission_instance($form);
    $laravel_api->call();
 
}
add_action( 'gform_after_submission', 'lgcrm_gravityform_submission', 10, 2 ); //Gravity forms

add_action( 'elementor_pro/forms/new_record', 'lgcrm_elementor_pro', 10, 2);

function lgcrm_elementor_pro($record, $handler ){
    if(!lgcrm_is_send_to_crm()){
        return false;
    }
    $fields = $record->get( 'fields' );
    $form_settings = $record->get( 'form_settings' );
    $laravel_api = new Wsl_Elementor_Api($fields);
    $laravel_api->set_submission_instance($form_settings);
    $laravel_api->call();
    
}

add_action( 'et_pb_contact_form_submit', 'lgcrm_divi' );

function lgcrm_divi(){
    if(!lgcrm_is_send_to_crm()){
        return false;
    }
    reset($_POST);
    $form_data = lgcrm_sanitize_data($_POST);
    $key = key($form_data);
    $counter = substr($key, -1);
    $laravel_api = new Wsl_Divi_Api($form_data["et_pb_contact_email_fields_".$counter]);
    $laravel_api->set_submission_instance($form_data["et_pb_contact_email_fields_".$counter]);
    $laravel_api->call();
}

add_action('fluentform_submission_inserted', 'lgcrm_fluentforms', 20, 3);

function lgcrm_fluentforms($entryId, $formData, $form)
{
    if(!lgcrm_is_send_to_crm()){
        return false;
    }
    $laravel_api = new Wsl_Wpff_Api($form, $formData);
    $laravel_api->set_submission_instance($form);
    $laravel_api->call();
}

add_action("wp_ajax_nopriv_wsl_typeform", "lgcrm_typeform");
add_action("wp_ajax_wsl_typeform", "lgcrm_typeform");

function lgcrm_typeform() {
    if(!lgcrm_is_send_to_crm()){
        return false;
    }
    $fields = lgcrm_sanitize_data(lgcrm_typeform_api($_POST['response_id']));
    
    $laravel_api = new Wsl_Typeform_Api($fields);
    $laravel_api->set_submission_instance($fields);
    $laravel_api->call();
}

add_action( 'wp_ajax_fl_builder_email', 'lgcrm_beaver' );
add_action("wp_ajax_nopriv_fl_builder_email", "lgcrm_beaver");

function lgcrm_beaver(){
    if(!lgcrm_is_send_to_crm()){
        return false;
    }
    $form_data = lgcrm_sanitize_data($_POST);
    $laravel_api = new Wsl_Beaver_Api($form_data);
    $laravel_api->set_submission_instance($form_data);
    $laravel_api->call();
}

add_action('wp_ajax_brizy_submit_form', 'lgcrm_brizy');
add_action("wp_ajax_nopriv_brizy_submit_form", "lgcrm_brizy");

function lgcrm_brizy(){
    if(!lgcrm_is_send_to_crm()){
        return false;
    }
    $form = lgcrm_sanitize_data($_POST);
    $fields_data = $form["data"];

    $laravel_api = new Wsl_Brizy_Api($fields_data);
    $laravel_api->set_submission_instance($_POST);
    $laravel_api->call();
}

add_action( 'wp_ajax_rednao_smart_forms_save_form_values','lgcrm_smart_forms');
add_action( 'wp_ajax_nopriv_rednao_smart_forms_save_form_values','lgcrm_smart_forms');

function lgcrm_smart_forms($data){
    if(!lgcrm_is_send_to_crm()){
        return false;
    }
    $fields_data = lgcrm_sanitize_data($_POST);

    $laravel_api = new Wsl_SmartForms_Api($fields_data);
    $laravel_api->set_submission_instance($_POST);
    $laravel_api->call();
}

add_action('caldera_forms_submit_complete', 'lgcrm_caldera_forms', 50, 3);

function lgcrm_caldera_forms($form, $referrer, $process_id)
{
    if(!lgcrm_is_send_to_crm()){
        return false;
    }
    $fields_data = $form["fields"];
    $formData = lgcrm_sanitize_data($_REQUEST);
    
    $laravel_api = new Wsl_CalderaForms_Api($fields_data, $formData);
    $laravel_api->set_submission_instance($fields_data, $formData);
    $laravel_api->call();
}

add_action( 'wp_ajax_tve_api_form_submit', 'lgcrm_thrive_form' );
add_action( 'wp_ajax_nopriv_tve_api_form_submit', 'lgcrm_thrive_form' );

function lgcrm_thrive_form(){
    if(!lgcrm_is_send_to_crm()){
        return false;
    }
    $fields_data = map_deep($_REQUEST, 'sanitize_text_field');

    $laravel_api = new Wsl_thriveform_Api($fields_data);
    $laravel_api->set_submission_instance($fields_data);
    $laravel_api->call();
}

add_action('frm_after_create_entry', 'lgcrm_fomidable', 30, 2);

function lgcrm_fomidable($entry_id, $form_id){
    $laravel_api = new Wsl_formidable_Api($entry_id, $form_id);
    $laravel_api->set_submission_instance($entry_id, $form_id);
    $laravel_api->call();
}

add_action( 'wp_ajax_uagb_process_forms', 'lgcrm_gutenberg_forms' );
add_action( 'wp_ajax_nopriv_uagb_process_forms', 'lgcrm_gutenberg_forms' );

function lgcrm_gutenberg_forms(){
    if(!lgcrm_is_send_to_crm()){
        return false;
    }
    $fields_data = lgcrm_sanitize_data($_POST);

    $laravel_api = new Lgcrm_Gutenberg_Api($fields_data);
    $laravel_api->set_submission_instance($fields_data);
    $laravel_api->call();
}