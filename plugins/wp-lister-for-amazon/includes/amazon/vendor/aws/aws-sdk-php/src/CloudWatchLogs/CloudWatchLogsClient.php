<?php
namespace Aws\CloudWatchLogs;

use Aws\AwsClient;

/**
 * This client is used to interact with the **Amazon CloudWatch Logs** service.
 *
 * @method \Aws\Result associateKmsKey(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise associateKmsKeyAsync(array $args = [])
 * @method \Aws\Result cancelExportTask(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise cancelExportTaskAsync(array $args = [])
 * @method \Aws\Result createExportTask(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise createExportTaskAsync(array $args = [])
 * @method \Aws\Result createLogGroup(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise createLogGroupAsync(array $args = [])
 * @method \Aws\Result createLogStream(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise createLogStreamAsync(array $args = [])
 * @method \Aws\Result deleteDestination(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise deleteDestinationAsync(array $args = [])
 * @method \Aws\Result deleteLogGroup(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise deleteLogGroupAsync(array $args = [])
 * @method \Aws\Result deleteLogStream(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise deleteLogStreamAsync(array $args = [])
 * @method \Aws\Result deleteMetricFilter(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise deleteMetricFilterAsync(array $args = [])
 * @method \Aws\Result deleteQueryDefinition(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise deleteQueryDefinitionAsync(array $args = [])
 * @method \Aws\Result deleteResourcePolicy(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise deleteResourcePolicyAsync(array $args = [])
 * @method \Aws\Result deleteRetentionPolicy(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise deleteRetentionPolicyAsync(array $args = [])
 * @method \Aws\Result deleteSubscriptionFilter(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise deleteSubscriptionFilterAsync(array $args = [])
 * @method \Aws\Result describeDestinations(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise describeDestinationsAsync(array $args = [])
 * @method \Aws\Result describeExportTasks(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise describeExportTasksAsync(array $args = [])
 * @method \Aws\Result describeLogGroups(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise describeLogGroupsAsync(array $args = [])
 * @method \Aws\Result describeLogStreams(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise describeLogStreamsAsync(array $args = [])
 * @method \Aws\Result describeMetricFilters(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise describeMetricFiltersAsync(array $args = [])
 * @method \Aws\Result describeQueries(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise describeQueriesAsync(array $args = [])
 * @method \Aws\Result describeQueryDefinitions(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise describeQueryDefinitionsAsync(array $args = [])
 * @method \Aws\Result describeResourcePolicies(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise describeResourcePoliciesAsync(array $args = [])
 * @method \Aws\Result describeSubscriptionFilters(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise describeSubscriptionFiltersAsync(array $args = [])
 * @method \Aws\Result disassociateKmsKey(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise disassociateKmsKeyAsync(array $args = [])
 * @method \Aws\Result filterLogEvents(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise filterLogEventsAsync(array $args = [])
 * @method \Aws\Result getLogEvents(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise getLogEventsAsync(array $args = [])
 * @method \Aws\Result getLogGroupFields(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise getLogGroupFieldsAsync(array $args = [])
 * @method \Aws\Result getLogRecord(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise getLogRecordAsync(array $args = [])
 * @method \Aws\Result getQueryResults(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise getQueryResultsAsync(array $args = [])
 * @method \Aws\Result listTagsLogGroup(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise listTagsLogGroupAsync(array $args = [])
 * @method \Aws\Result putDestination(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise putDestinationAsync(array $args = [])
 * @method \Aws\Result putDestinationPolicy(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise putDestinationPolicyAsync(array $args = [])
 * @method \Aws\Result putLogEvents(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise putLogEventsAsync(array $args = [])
 * @method \Aws\Result putMetricFilter(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise putMetricFilterAsync(array $args = [])
 * @method \Aws\Result putQueryDefinition(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise putQueryDefinitionAsync(array $args = [])
 * @method \Aws\Result putResourcePolicy(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise putResourcePolicyAsync(array $args = [])
 * @method \Aws\Result putRetentionPolicy(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise putRetentionPolicyAsync(array $args = [])
 * @method \Aws\Result putSubscriptionFilter(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise putSubscriptionFilterAsync(array $args = [])
 * @method \Aws\Result startQuery(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise startQueryAsync(array $args = [])
 * @method \Aws\Result stopQuery(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise stopQueryAsync(array $args = [])
 * @method \Aws\Result tagLogGroup(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise tagLogGroupAsync(array $args = [])
 * @method \Aws\Result testMetricFilter(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise testMetricFilterAsync(array $args = [])
 * @method \Aws\Result untagLogGroup(array $args = [])
 * @method \WPLab\GuzzeHttp\Promise\Promise untagLogGroupAsync(array $args = [])
 */
class CloudWatchLogsClient extends AwsClient {}
