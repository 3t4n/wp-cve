{"version":3,"file":"index.js","mappings":"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CADJ,EAcI;IAAK,SAAS,EAAGc;EAAjB,GAAoC;IAAM,EAAE,EAAC,aAAT;IAAuB,SAAS,EAAGJ,aAAa,GAAGE;EAAnD,GAAqExB,UAAU,CAACsC,OAAhF,CAApC,CAdJ,CADJ,CADP;AAoBA;;;;;;;;;;;AC3ED;;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAe;AACf;AACA,oBAAoB,sBAAsB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;UCfA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEjDA;UACA;UACA;UACA;UACA","sources":["webpack://dm-code-snippet-block/./src/edit.js","webpack://dm-code-snippet-block/./src/icons/icons.js","webpack://dm-code-snippet-block/./src/index.js","webpack://dm-code-snippet-block/./src/save.js","webpack://dm-code-snippet-block/./src/editor.scss","webpack://dm-code-snippet-block/./src/style.scss","webpack://dm-code-snippet-block/external window [\"wp\",\"blockEditor\"]","webpack://dm-code-snippet-block/external window [\"wp\",\"blocks\"]","webpack://dm-code-snippet-block/external window [\"wp\",\"components\"]","webpack://dm-code-snippet-block/external window [\"wp\",\"element\"]","webpack://dm-code-snippet-block/external window [\"wp\",\"i18n\"]","webpack://dm-code-snippet-block/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://dm-code-snippet-block/webpack/bootstrap","webpack://dm-code-snippet-block/webpack/runtime/chunk loaded","webpack://dm-code-snippet-block/webpack/runtime/compat get default export","webpack://dm-code-snippet-block/webpack/runtime/define property getters","webpack://dm-code-snippet-block/webpack/runtime/hasOwnProperty shorthand","webpack://dm-code-snippet-block/webpack/runtime/make namespace object","webpack://dm-code-snippet-block/webpack/runtime/jsonp chunk loading","webpack://dm-code-snippet-block/webpack/before-startup","webpack://dm-code-snippet-block/webpack/startup","webpack://dm-code-snippet-block/webpack/after-startup"],"sourcesContent":["/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-block-editor/#useBlockProps\n */\nimport { useBlockProps, PlainText, BlockControls, InspectorControls, PanelColorSettings } from '@wordpress/block-editor';\nimport { PanelBody, PanelRow, ToggleControl, TextControl, SelectControl  } from '@wordpress/components';\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * Those files can contain any CSS code that gets applied to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport './editor.scss';\n\n/**\n * The edit function describes the structure of your block in the context of the\n * editor. This represents what the editor will render when the block is used.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#edit\n *\n * @return {WPElement} Element to render.\n */\nexport default function Edit({ attributes, setAttributes }) {\n    const blockProps = useBlockProps();\n\n    const onChangeMaxHeight = ( newMaxHeight ) => {\n        setAttributes( { maxHeight: newMaxHeight === undefined ? '' : newMaxHeight } )\n    }\n\n    const onChangeCopyText = ( newCopyText ) => {\n        setAttributes( { copyText: newCopyText === undefined ? '' : newCopyText } )\n    }\n\n    const onChangeAfterCopyText = ( newAfterCopyText ) => {\n        setAttributes( { afterCopyText: newAfterCopyText === undefined ? '' : newAfterCopyText } )\n    }\n\n    const colorSamples = [\n        {\n            name: 'Eton Blue',\n            slug: 'eton-blue',\n            color: '#7FC8A9'\n        },\n        {\n            name: 'Lavender',\n            slug: 'lavender',\n            color: '#E6E6FA'\n        },\n        {\n            name: 'Purple Blueish',\n            slug: 'purple-blueish',\n            color: '#5E69FF'\n        },\n        {\n            name: 'Fuchsia Pink',\n            slug: 'fuchsia-pink',\n            color: '#FB8CFF'\n        },\n        {\n            name: 'Pale Pink',\n            slug: 'pale-pink',\n            color: '#FCD8D4'\n        },\n        {\n            name: 'Pastel Gray',\n            slug: 'pastel-gray',\n            color: '#C9D8B6'\n        },\n        {\n            name: 'Water',\n            slug: 'water',\n            color: '#D4F8FC'\n        }\n    ];\n\n    let standardSnippetClass = 'dm-code-snippet ';\n\n    let backgroundColorStatusClass = ' no-background';\n    if(attributes.backgroundColorStatus) {\n        backgroundColorStatusClass = ' default';\n    }\n\n    let backgroundColorMobileStatusClass = ' no-background-mobile';\n    if(attributes.backgroundColorMobileStatus) {\n        backgroundColorMobileStatusClass = '';\n    }\n\n    let wrapCodeClass = ' no-wrap';\n    if(attributes.wrapCode) {\n        wrapCodeClass = ' wrap';\n    }\n\n    let languageClass = ' language-' + attributes.language;\n\n    let lineNumbersClass = ' no-line-numbers';\n    if(attributes.lineNumbers) {\n        lineNumbersClass = ' line-numbers';\n    }\n\n    let slimClass = ' dm-normal-version';\n    if(attributes.slim) {\n        slimClass = ' dm-slim-version';\n    }\n\n    return (\n        <>\n            <InspectorControls>\n                <PanelColorSettings \n\t\t\t\t\ttitle={ __( 'Color settings', 'code-snippet-block-dm' ) }\n\t\t\t\t\tinitialOpen={ false }\n\t\t\t\t\tcolorSettings={ [\n\t\t\t\t\t\t{\n                            colors: colorSamples,\n                            value: attributes.backgroundColor,\n                            onChange: ( val ) => {\n                            setAttributes( { backgroundColor: val } );\n                            },\n                            label: __( 'Background color', 'code-snippet-block-dm' ),\n\t\t\t\t\t\t}\n\t\t\t\t\t] }\n\t\t\t\t/>\n                <PanelBody \n                    title={ __( 'Layout', 'code-snippet-block-dm' )}\n                    initialOpen={true}\n                >\n                    <PanelRow>\n                        <fieldset>\n                            <SelectControl\n                                label=\"Theme\"\n                                value={ attributes.theme }\n                                options={ [\n                                    { label: 'Dark', value: 'dark' },\n                                    { label: 'Light', value: 'light' },\n                                ] }\n                                onChange={ ( val ) => {\n                                    setAttributes( { theme: val } );\n                                } }\n                                __nextHasNoMarginBottom\n                            />\n                        </fieldset>\n                    </PanelRow>\n                    <PanelRow>\n                        <fieldset>\n                            <ToggleControl\n                                label=\"Slim Version\"\n                                help={\n                                    attributes.slim\n                                        ? 'Yes'\n                                        : 'No'\n                                }\n                                checked={ attributes.slim }\n                                onChange={ (val) => {\n                                    setAttributes( { slim: val } );\n                                } }\n                            />\n                        </fieldset>\n                    </PanelRow>\n                    <PanelRow>\n                        <fieldset>\n                            <ToggleControl\n                                label=\"Line Numbers\"\n                                help={\n                                    attributes.lineNumbers\n                                        ? 'Yes'\n                                        : 'No'\n                                }\n                                checked={ attributes.lineNumbers }\n                                onChange={ (val) => {\n                                    setAttributes( { lineNumbers: val } );\n                                } }\n                            />\n                        </fieldset>\n                    </PanelRow>\n                    <PanelRow>\n                        <fieldset>\n                            <ToggleControl\n                                label=\"Enable background\"\n                                help={\n                                    attributes.backgroundColorStatus\n                                        ? 'Yes'\n                                        : 'No'\n                                }\n                                checked={ attributes.backgroundColorStatus }\n                                onChange={ (val) => {\n                                    setAttributes( { backgroundColorStatus: val } );\n                                } }\n                            />\n                        </fieldset>\n                    </PanelRow>\n                    <PanelRow>\n                        <fieldset>\n                            <ToggleControl\n                                label=\"Enable background on mobile\"\n                                help={\n                                    attributes.backgroundColorMobileStatus\n                                        ? 'Yes'\n                                        : 'No'\n                                }\n                                checked={ attributes.backgroundColorMobileStatus }\n                                onChange={ (val) => {\n                                    setAttributes({ backgroundColorMobileStatus: val });\n                                } }\n                            />\n                        </fieldset>\n                    </PanelRow>\n                </PanelBody>\n                <PanelBody \n                    title={ __( 'Details', 'code-snippet-block-dm' )}\n                    initialOpen={true}\n                >\n                    <PanelRow>\n                        <fieldset>\n                            <SelectControl\n                                label=\"Language\"\n                                value={ attributes.language }\n                                options={ [\n                                    { label: 'C-Like', value: 'clike' },\n                                    { label: 'CSS', value: 'css' },\n                                    { label: 'HTML/Markup', value: 'markup' },\n                                    { label: 'JavaScript', value: 'javascript' },\n                                    { label: 'Perl', value: 'perl' },\n                                    { label: 'PHP', value: 'php' },\n                                    { label: 'Python', value: 'python' },\n                                    { label: 'Ruby', value: 'ruby' },\n                                    { label: 'SQL', value: 'sql' },\n                                    { label: 'TypeScript', value: 'typescript' },\n                                    { label: 'Bash/Shell', value: 'shell' },\n                                ] }\n                                onChange={ ( val ) => {\n                                    setAttributes( { language: val } );\n                                } }\n                                __nextHasNoMarginBottom\n                            />\n                        </fieldset>\n                    </PanelRow>\n                    <PanelRow>\n                        <fieldset>\n                            <ToggleControl\n                                label=\"Wrap Code\"\n                                help={\n                                    attributes.wrapCode\n                                        ? 'Yes'\n                                        : 'No'\n                                }\n                                checked={ attributes.wrapCode }\n                                onChange={ (val) => {\n                                    setAttributes( { wrapCode: val } );\n                                } }\n                            />\n                        </fieldset>\n                    </PanelRow>\n                    <PanelRow>\n                        <fieldset>\n                            <TextControl\n                                label={__( 'Max Height', 'code-snippet-block-dm' )}\n                                value={ attributes.maxHeight }\n                                onChange={ onChangeMaxHeight }\n                                help={ __( 'Set max height in PX (300px) for the code snippet. Leave empty if not needed.', 'code-snippet-block-dm' )}\n                            />\n                        </fieldset>\n                    </PanelRow>\n                    <PanelRow>\n                        <fieldset>\n                            <TextControl\n                                label={__( 'Copy Text', 'code-snippet-block-dm' )}\n                                value={ attributes.copyText }\n                                onChange={ onChangeCopyText }\n                                help={ __( 'Add your copy button text', 'code-snippet-block-dm' )}\n                            />\n                        </fieldset>\n                    </PanelRow>\n                    <PanelRow>\n                        <fieldset>\n                            <TextControl\n                                label={__( 'After Copy Text', 'code-snippet-block-dm' )}\n                                value={ attributes.afterCopyText }\n                                onChange={ onChangeAfterCopyText }\n                                help={ __( 'Add your copy button confirmation text', 'code-snippet-block-dm' )}\n                            />\n                        </fieldset>\n                    </PanelRow>\n                </PanelBody>\n\t\t\t</InspectorControls>\n\n            <BlockControls group=\"block\">\n            </BlockControls>\n\n            <div className={ standardSnippetClass + attributes.theme + slimClass + backgroundColorStatusClass + backgroundColorMobileStatusClass} snippet-height={ attributes.maxHeight } style={{ backgroundColor:attributes.backgroundColor }}>\n                <div class=\"control-language\">\n                    <div class=\"dm-buttons\">\n                        <div class=\"dm-buttons-left\">\n                            <div class=\"dm-button-snippet red-button\"></div>\n                            <div class=\"dm-button-snippet orange-button\"></div>\n                            <div class=\"dm-button-snippet green-button\"></div>\n                        </div>\n                        <div class=\"dm-buttons-right\">\n                            <a id=\"dm-copy-raw-code\">\n                            <span class=\"dm-copy-text\">{ attributes.copyText }</span>\n                            <span class=\"dm-copy-confirmed\" style={{display: 'none' }}>{ attributes.afterCopyText }</span>\n                            <span class=\"dm-error-message\" style={{display: 'none' }}>Use a different Browser</span></a>\n                        </div>\n                    </div>\n                    <pre className={ lineNumbersClass }>\n                        <code id=\"dm-code-raw\" className={ wrapCodeClass + languageClass }>\n                            <PlainText\n                                { ...blockProps }\n\n                                value={ attributes.content }\n                                onChange={ ( newContent ) => setAttributes( { content: newContent } ) }\n                            />\n                        </code>\n                    </pre>\n                </div>\n            </div>\n\n\n        </>\n    );\n}\n","\r\nconst icons = {};\r\n\r\nicons.codesnippet = <svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"682.000000pt\" height=\"416.000000pt\" viewBox=\"0 0 682.000000 416.000000\"\r\npreserveAspectRatio=\"xMidYMid meet\">\r\n\r\n<g transform=\"translate(0.000000,416.000000) scale(0.100000,-0.100000)\"\r\nfill=\"#000000\" stroke=\"none\">\r\n<path d=\"M3400 3730 l0 -430 84 0 85 0 512 -465 512 -464 76 68 c42 38 272\r\n247 511 465 l435 396 88 0 87 0 -2 -1222 -3 -1223 -242 -3 -243 -2 -2 751 -3\r\n750 -348 -316 c-192 -175 -353 -314 -360 -312 -7 3 -165 145 -352 316 l-340\r\n310 -3 -750 -2 -749 -245 0 -245 0 0 -425 0 -425 1710 0 1710 0 0 2080 0 2080\r\n-1710 0 -1710 0 0 -430z\"/>\r\n<path d=\"M1030 2075 l0 -1225 404 0 c438 0 505 6 661 57 584 190 938 766 840\r\n1368 -71 442 -394 821 -821 964 -161 54 -236 61 -681 61 l-403 0 0 -1225z\r\nm888 706 c203 -59 369 -195 458 -376 60 -123 78 -196 77 -330 0 -129 -17 -204\r\n-73 -320 -91 -188 -257 -327 -460 -385 -57 -16 -114 -23 -237 -27 l-163 -6 0\r\n738 0 738 163 -6 c122 -4 180 -11 235 -26z\"/>\r\n</g>\r\n</svg>\r\n\r\nexport default icons;\r\n","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * All files containing `style` keyword are bundled together. The code used\n * gets applied both to the front of your site and to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport './style.scss';\n\n/**\n * Internal dependencies\n */\nimport Edit from './edit';\nimport save from './save';\nimport metadata from './block.json';\nimport icons from './icons/icons.js'\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nregisterBlockType( metadata.name, {\n    icon: icons.codesnippet,\n\t/**\n\t * @see ./edit.js\n\t */\n\tedit: Edit,\n\t/**\n\t * @see ./save.js\n\t */\n\tsave,\n} );\n","/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-block-editor/#useBlockProps\n */\nimport { useBlockProps } from '@wordpress/block-editor';\n\n/**\n * The save function defines the way in which the different attributes should\n * be combined into the final markup, which is then serialized by the block\n * editor into `post_content`.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#save\n *\n * @return {WPElement} Element to render.\n */\nexport default function save({ attributes }) { \n    let standardSnippetClass = 'dm-code-snippet ';\n\n    let backgroundColorStatusClass = ' no-background';\n    if(attributes.backgroundColorStatus) {\n        backgroundColorStatusClass = ' default';\n    }\n\n    let backgroundColorMobileStatusClass = ' no-background-mobile';\n    if(attributes.backgroundColorMobileStatus) {\n        backgroundColorMobileStatusClass = '';\n    }\n\n    let wrapCodeClass = ' no-wrap';\n    if(attributes.wrapCode) {\n        wrapCodeClass = ' wrap';\n    }\n\n    let languageClass = ' language-' + attributes.language;\n\n    let lineNumbersClass = ' no-line-numbers';\n    if(attributes.lineNumbers) {\n        lineNumbersClass = ' line-numbers';\n    }\n\n    let slimClass = ' dm-normal-version';\n    if(attributes.slim) {\n        slimClass = ' dm-slim-version';\n    }\n    \n\n\treturn (\n        <div className={ standardSnippetClass + attributes.theme + slimClass + backgroundColorStatusClass + backgroundColorMobileStatusClass} snippet-height={ attributes.maxHeight } style={{ backgroundColor:attributes.backgroundColor }}>\n            <div class=\"control-language\">\n                <div class=\"dm-buttons\">\n                    <div class=\"dm-buttons-left\">\n                        <div class=\"dm-button-snippet red-button\"></div>\n                        <div class=\"dm-button-snippet orange-button\"></div>\n                        <div class=\"dm-button-snippet green-button\"></div>\n                    </div>\n                    <div class=\"dm-buttons-right\">\n                        <a id=\"dm-copy-raw-code\">\n                        <span class=\"dm-copy-text\">{ attributes.copyText }</span>\n                        <span class=\"dm-copy-confirmed\" style=\"display:none\">{ attributes.afterCopyText }</span>\n                        <span class=\"dm-error-message\" style=\"display:none\">Use a different Browser</span></a>\n                    </div>\n                </div>\n                <pre className={ lineNumbersClass }><code id=\"dm-code-raw\" className={ wrapCodeClass + languageClass }>{ attributes.content }</code></pre>\n            </div>\n        </div>\n\t);\n}\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"index\": 0,\n\t\"./style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunkdm_code_snippet_block\"] = globalThis[\"webpackChunkdm_code_snippet_block\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"./style-index\"], () => (__webpack_require__(\"./src/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["__","useBlockProps","PlainText","BlockControls","InspectorControls","PanelColorSettings","PanelBody","PanelRow","ToggleControl","TextControl","SelectControl","Edit","attributes","setAttributes","blockProps","onChangeMaxHeight","newMaxHeight","maxHeight","undefined","onChangeCopyText","newCopyText","copyText","onChangeAfterCopyText","newAfterCopyText","afterCopyText","colorSamples","name","slug","color","standardSnippetClass","backgroundColorStatusClass","backgroundColorStatus","backgroundColorMobileStatusClass","backgroundColorMobileStatus","wrapCodeClass","wrapCode","languageClass","language","lineNumbersClass","lineNumbers","slimClass","slim","colors","value","backgroundColor","onChange","val","label","theme","display","content","newContent","icons","codesnippet","registerBlockType","save","metadata","icon","edit"],"sourceRoot":""}