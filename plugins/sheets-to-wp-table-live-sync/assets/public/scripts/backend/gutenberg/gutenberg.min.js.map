{
    "version": 3,
    "file": "scripts/backend/gutenberg/gutenberg.min.js",
    "mappings": "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",
    "sources": [
        "webpack://google-spreadsheet-to-wp-table-sync/webpack/bootstrap",
        "webpack://google-spreadsheet-to-wp-table-sync/webpack/runtime/compat get default export",
        "webpack://google-spreadsheet-to-wp-table-sync/webpack/runtime/define property getters",
        "webpack://google-spreadsheet-to-wp-table-sync/webpack/runtime/hasOwnProperty shorthand",
        "webpack://google-spreadsheet-to-wp-table-sync/external var \"React\"",
        "webpack://google-spreadsheet-to-wp-table-sync/./assets/public/images/logo_30_30.svg",
        "webpack://google-spreadsheet-to-wp-table-sync/./assets/src/scripts/chunk/gutenberg/parts/helperFunctions.js",
        "webpack://google-spreadsheet-to-wp-table-sync/./assets/src/scripts/chunk/gutenberg/editFucntion.js",
        "webpack://google-spreadsheet-to-wp-table-sync/./assets/src/scripts/chunk/gutenberg/gutenberg-block.js",
        "webpack://google-spreadsheet-to-wp-table-sync/./assets/src/scripts/chunk/gutenberg/logo.js"
    ],
    "sourcesContent": [
        "// The require scope\nvar __webpack_require__ = {};\n\n",
        "// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};",
        "// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};",
        "__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))",
        "const __WEBPACK_NAMESPACE_OBJECT__ = React;",
        "var _path, _mask, _g, _mask2, _g2, _mask3, _g3, _mask4, _g4, _mask5, _g5, _mask6, _g6, _mask7, _g7, _path2, _path3, _defs;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nvar SvgLogo3030 = function SvgLogo3030(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 30,\n    height: 30,\n    viewBox: \"0 0 128 128\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M128 0H0v128h128V0Z\",\n    fill: \"url(#logo_30_30_svg__a)\"\n  })), _mask || (_mask = /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"logo_30_30_svg__b\",\n    \"mask-type\": \"alpha\",\n    maskUnits: \"userSpaceOnUse\",\n    x: 32,\n    y: 25,\n    width: 60,\n    height: 84\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M69.5 25.7H37.6c-3.1 0-5.6 2.5-5.6 5.6v71.2c0 3.1 2.5 5.6 5.6 5.6h48.7c3.1 0 5.6-2.5 5.6-5.6V48.2L69.5 25.7Z\",\n    fill: \"#fff\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    mask: \"url(#logo_30_30_svg__b)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M69.5 25.7H37.6c-3.1 0-5.6 2.5-5.6 5.6v71.2c0 3.1 2.5 5.6 5.6 5.6h48.7c3.1 0 5.6-2.5 5.6-5.6V48.2l-13.1-9.4-9.3-13.1Z\",\n    fill: \"#0F9D58\"\n  }))), _mask2 || (_mask2 = /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"logo_30_30_svg__c\",\n    \"mask-type\": \"alpha\",\n    maskUnits: \"userSpaceOnUse\",\n    x: 32,\n    y: 25,\n    width: 60,\n    height: 84\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M69.5 25.7H37.6c-3.1 0-5.6 2.5-5.6 5.6v71.2c0 3.1 2.5 5.6 5.6 5.6h48.7c3.1 0 5.6-2.5 5.6-5.6V48.2L69.5 25.7Z\",\n    fill: \"#fff\"\n  }))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    mask: \"url(#logo_30_30_svg__c)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M47 66v27.2h30V66H47Zm13.1 23.4h-9.4v-4.7h9.4v4.7Zm0-7.5h-9.4v-4.7h9.4v4.7Zm0-7.5h-9.4v-4.7h9.4v4.7Zm13.1 15h-9.4v-4.7h9.4v4.7Zm0-7.5h-9.4v-4.7h9.4v4.7Zm0-7.5h-9.4v-4.7h9.4v4.7Z\",\n    fill: \"#F1F1F1\"\n  }))), _mask3 || (_mask3 = /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"logo_30_30_svg__d\",\n    \"mask-type\": \"alpha\",\n    maskUnits: \"userSpaceOnUse\",\n    x: 32,\n    y: 25,\n    width: 60,\n    height: 84\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M69.5 25.7H37.6c-3.1 0-5.6 2.5-5.6 5.6v71.2c0 3.1 2.5 5.6 5.6 5.6h48.7c3.1 0 5.6-2.5 5.6-5.6V48.2L69.5 25.7Z\",\n    fill: \"#fff\"\n  }))), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", {\n    mask: \"url(#logo_30_30_svg__d)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M71.1 46.6 92 67.4V48.2l-20.9-1.6Z\",\n    fill: \"url(#logo_30_30_svg__e)\"\n  }))), _mask4 || (_mask4 = /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"logo_30_30_svg__f\",\n    \"mask-type\": \"alpha\",\n    maskUnits: \"userSpaceOnUse\",\n    x: 32,\n    y: 25,\n    width: 60,\n    height: 84\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M69.5 25.7H37.6c-3.1 0-5.6 2.5-5.6 5.6v71.2c0 3.1 2.5 5.6 5.6 5.6h48.7c3.1 0 5.6-2.5 5.6-5.6V48.2L69.5 25.7Z\",\n    fill: \"#fff\"\n  }))), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", {\n    mask: \"url(#logo_30_30_svg__f)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M69.425 25.742v16.9c0 3.1 2.5 5.6 5.6 5.6h16.9l-22.5-22.5Z\",\n    fill: \"#87CEAC\"\n  }))), _mask5 || (_mask5 = /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"logo_30_30_svg__g\",\n    \"mask-type\": \"alpha\",\n    maskUnits: \"userSpaceOnUse\",\n    x: 32,\n    y: 25,\n    width: 60,\n    height: 84\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M69.5 25.7H37.6c-3.1 0-5.6 2.5-5.6 5.6v71.2c0 3.1 2.5 5.6 5.6 5.6h48.7c3.1 0 5.6-2.5 5.6-5.6V48.2L69.5 25.7Z\",\n    fill: \"#fff\"\n  }))), _g5 || (_g5 = /*#__PURE__*/React.createElement(\"g\", {\n    mask: \"url(#logo_30_30_svg__g)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    opacity: 0.2,\n    d: \"M37.6 25.7c-3.1 0-5.6 2.5-5.6 5.6v.5c0-3.1 2.5-5.6 5.6-5.6h31.9v-.5H37.6Z\",\n    fill: \"#fff\"\n  }))), _mask6 || (_mask6 = /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"logo_30_30_svg__h\",\n    \"mask-type\": \"alpha\",\n    maskUnits: \"userSpaceOnUse\",\n    x: 32,\n    y: 25,\n    width: 60,\n    height: 84\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M69.5 25.7H37.6c-3.1 0-5.6 2.5-5.6 5.6v71.2c0 3.1 2.5 5.6 5.6 5.6h48.7c3.1 0 5.6-2.5 5.6-5.6V48.2L69.5 25.7Z\",\n    fill: \"#fff\"\n  }))), _g6 || (_g6 = /*#__PURE__*/React.createElement(\"g\", {\n    mask: \"url(#logo_30_30_svg__h)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    opacity: 0.2,\n    d: \"M86.3 107.7H37.6c-3.1 0-5.6-2.5-5.6-5.6v.5c0 3.1 2.5 5.6 5.6 5.6h48.7c3.1 0 5.6-2.5 5.6-5.6v-.5c.1 3.1-2.5 5.6-5.6 5.6Z\",\n    fill: \"#263238\"\n  }))), _mask7 || (_mask7 = /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"logo_30_30_svg__i\",\n    \"mask-type\": \"alpha\",\n    maskUnits: \"userSpaceOnUse\",\n    x: 32,\n    y: 25,\n    width: 60,\n    height: 84\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M69.5 25.7H37.6c-3.1 0-5.6 2.5-5.6 5.6v71.2c0 3.1 2.5 5.6 5.6 5.6h48.7c3.1 0 5.6-2.5 5.6-5.6V48.2L69.5 25.7Z\",\n    fill: \"#fff\"\n  }))), _g7 || (_g7 = /*#__PURE__*/React.createElement(\"g\", {\n    mask: \"url(#logo_30_30_svg__i)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    opacity: 0.1,\n    d: \"M75.1 48.2c-3.1 0-5.6-2.5-5.6-5.6v.4c0 3.1 2.5 5.6 5.6 5.6H92v-.5H75.1v.1Z\",\n    fill: \"#263238\"\n  }))), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M91 18.9c2.3 0 4.6.5 6.8 1.4 1 .4 2 1 3 1.6.9.6 1.8 1.3 2.6 2.1s1.5 1.7 2.1 2.6c.6.9 1.2 1.9 1.6 3 .9 2.1 1.4 4.4 1.4 6.8 0 2.3-.5 4.6-1.4 6.8-.4 1-1 2-1.6 3-.6.9-1.3 1.8-2.1 2.6s-1.7 1.5-2.6 2.1c-.9.6-1.9 1.2-3 1.6-2.1.9-4.4 1.4-6.8 1.4-2.3 0-4.6-.5-6.8-1.4-1-.4-2-1-3-1.6-.9-.6-1.8-1.3-2.6-2.1s-1.5-1.7-2.1-2.6C75.9 45 75.4 44 75 43c-.9-2.1-1.4-4.4-1.4-6.8 0-2.3.5-4.6 1.4-6.8.4-1 1-2 1.6-3 .6-.9 1.3-1.8 2.1-2.6s1.7-1.5 2.6-2.1c.9-.6 1.9-1.2 3-1.6 2-.8 4.3-1.2 6.7-1.2Zm0-1.2c-10.2 0-18.5 8.3-18.5 18.5S80.8 54.7 91 54.7s18.5-8.3 18.5-18.5-8.3-18.5-18.5-18.5Z\",\n    fill: \"#fff\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M75.6 36.2c0 6.1 3.5 11.4 8.7 13.9L76.9 30c-.9 1.9-1.3 4-1.3 6.2Zm25.8-.7c0-1.9-.7-3.2-1.3-4.2-.8-1.3-1.5-2.3-1.5-3.6 0-1.4 1.1-2.7 2.6-2.7h.2c-2.7-2.5-6.4-4-10.4-4-5.4 0-10.1 2.8-12.9 6.9h1c1.6 0 4.1-.2 4.1-.2.8 0 .9 1.2.1 1.3 0 0-.8.1-1.8.1l5.6 16.7 3.4-10.1-2.4-6.7c-.8 0-1.6-.1-1.6-.1-.8 0-.7-1.3.1-1.3 0 0 2.5.2 4.1.2 1.6 0 4.1-.2 4.1-.2.8 0 .9 1.2.1 1.3 0 0-.8.1-1.8.1l5.6 16.6 1.6-5c.7-2.3 1.1-3.8 1.1-5.1Zm-10.2 2.1L86.6 51c1.4.4 2.8.6 4.4.6 1.8 0 3.5-.3 5.1-.9 0-.1-.1-.1-.1-.2l-4.8-12.9Zm13.3-8.8c.1.5.1 1 .1 1.6 0 1.6-.3 3.3-1.2 5.5l-4.7 13.6c4.6-2.7 7.7-7.6 7.7-13.3 0-2.6-.7-5.2-1.9-7.4Z\",\n    fill: \"#fff\"\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"logo_30_30_svg__a\",\n    x1: 97.336,\n    y1: 110.105,\n    x2: 9.358,\n    y2: -11.572,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#08CF68\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#E2FFBC\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"logo_30_30_svg__e\",\n    x1: 81.522,\n    y1: 48.36,\n    x2: 81.522,\n    y2: 67.419,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#263238\",\n    stopOpacity: 0.2\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#263238\",\n    stopOpacity: 0.02\n  })))));\n};\n\nexport default SvgLogo3030;",
        "var $ = jQuery.noConflict();\r\n\r\nexport function callAlert(title, description, type, time, pos = \"bottom-right\") {\r\n    suiAlert({\r\n        title: title,\r\n        description: description,\r\n        type: type,\r\n        time: time,\r\n        position: pos,\r\n    });\r\n}\r\n\r\nfunction suiAlert(options) {\r\n    if (options.type == \"info\") {\r\n        // announcement\r\n        options.icon = \"announcement\";\r\n    } else if (options.type == \"success\") {\r\n        // checkmark, checkmark box\r\n        options.icon = \"checkmark\";\r\n    } else if (options.type == \"error\") {\r\n        // ban, remove, remove circle\r\n        options.icon = \"remove\";\r\n    } else if (options.type == \"warning\") {\r\n        // warning sign, warning circle\r\n        options.icon = \"warning circle\";\r\n    }\r\n\r\n    // set close animation\r\n    var close_anim = \"drop\";\r\n    if (options.position == \"top-right\") {\r\n        close_anim = \"fly left\";\r\n    } else if (options.position == \"top-center\") {\r\n        close_anim = \"fly down\";\r\n    } else if (options.position == \"top-left\") {\r\n        close_anim = \"fly right\";\r\n    } else if (options.position == \"bottom-right\") {\r\n        close_anim = \"fly left\";\r\n    } else if (options.position == \"bottom-center\") {\r\n        close_anim = \"fly up\";\r\n    } else if (options.position == \"bottom-left\") {\r\n        close_anim = \"fly right\";\r\n    }\r\n\r\n    // screen size check\r\n    var alert_size = \"\";\r\n    var screen_width = $(window).width();\r\n    if (screen_width < 425) alert_size = \"mini\";\r\n\r\n    var alerts_class = \"ui-alerts.\" + options.position;\r\n    if (!$(\"body > .\" + alerts_class).length) {\r\n        $(\"body\").append('<div class=\"ui-alerts ' + options.position + '\"></div>');\r\n    }\r\n\r\n    var _alert = $(\r\n        '<div class=\"ui icon floating ' +\r\n            alert_size +\r\n            \" message \" +\r\n            options.type +\r\n            '\" id=\"alert\"> <i class=\"' +\r\n            options.icon +\r\n            ' icon\"></i> <i class=\"close icon\" id=\"alertclose\"></i> <div class=\"content\"> <div class=\"header\">' +\r\n            options.title +\r\n            \"</div> <p>\" +\r\n            options.description +\r\n            \"</p> </div> </div>\"\r\n    );\r\n    $(\".\" + alerts_class).prepend(_alert);\r\n\r\n    _alert.transition(\"pulse\");\r\n\r\n    /**\r\n     * Close the alert\r\n     */\r\n    $(\"#alertclose\").on(\"click\", function () {\r\n        $(this)\r\n            .closest(\"#alert\")\r\n            .transition({\r\n                animation: close_anim,\r\n                onComplete: function () {\r\n                    _alert.remove();\r\n                },\r\n            });\r\n    });\r\n\r\n    var timer = 0;\r\n    $(_alert)\r\n        .mouseenter(function () {\r\n            clearTimeout(timer);\r\n        })\r\n        .mouseleave(function () {\r\n            alertHide();\r\n        });\r\n\r\n    alertHide();\r\n\r\n    function alertHide() {\r\n        timer = setTimeout(function () {\r\n            _alert.transition({\r\n                animation: close_anim,\r\n                duration: \"2s\",\r\n                onComplete: function () {\r\n                    _alert.remove();\r\n                },\r\n            });\r\n        }, options.time * 1000);\r\n    }\r\n}\r\n\r\nexport function saveChanges(id, table_settings) {\r\n    $.ajax({\r\n        url: gswpts_gutenberg_block.admin_ajax,\r\n        data: {\r\n            action: 'swptls_save_from_guten_block',\r\n            nonce: window?.gswpts_gutenberg_block?.nonce,\r\n            id,\r\n            settings: JSON.stringify(table_settings),\r\n        },\r\n        type: \"POST\",\r\n        success(response) {\r\n        },\r\n        error(error) { },\r\n    });\r\n\r\n    // $.ajax({\r\n    //     url: gswpts_gutenberg_block.admin_ajax,\r\n    //     data: {\r\n    //         action: \"gswpts_sheet_create\",\r\n    //         table_settings: table_settings,\r\n    //         id: parseInt(id),\r\n    //         type: \"save_changes\",\r\n    //         gutenberg_req: true,\r\n    //         nonce: window?.gswpts_gutenberg_block?.create_nonce\r\n    //     },\r\n    //     type: \"POST\",\r\n    //     success: (res) => {\r\n    //         if ( res.data.type == \"invalid_action\" || res.data.type == \"invalid_request\" ) {\r\n    //             callAlert(\"Error &#128683;\", res.data.output, \"error\", 4);\r\n    //         }\r\n    //     },\r\n    //     error: (err) => {\r\n    //         callAlert(\"Error &#128683;\", \"<b>Something went wrong</b>\", \"error\", 3);\r\n    //     },\r\n    // });\r\n}\r\n",
        "import React from \"react\";\r\n// import Select from \"react-select\";\r\nimport { Dropdown } from \"semantic-ui-react\";\r\n\r\nimport { saveChanges, callAlert } from \"./parts/helperFunctions\";\r\nimport { formatCellValues, rows_per_page, scrollHeights, redirectionValues, tableStyles, responsive_styles } from \"./parts/selectValues\";\r\n\r\nconst { useEffect, useRef, useState } = wp.element;\r\nconst { InspectorControls } = wp.blockEditor;\r\nconst { Panel, PanelBody, PanelRow, SelectControl, ToggleControl } = wp.components;\r\n\r\nvar $ = jQuery.noConflict();\r\n\r\nexport default function editFucntion({ attributes, setAttributes }) {\r\n    const [gridError, setGridError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (attributes.sortcode_id) {\r\n            setAttributes({ table_selection: attributes.sortcode_id });\r\n            setAttributes({ show_choose_table: true });\r\n            setAttributes({ initializer_button_action: \"choose_table\" });\r\n            fetch_data_by_id(attributes.sortcode_id);\r\n        }\r\n    }, []);\r\n\r\n    const spreadsheet_container = useRef(null);\r\n    const sheetUrlRef = useRef(null);\r\n\r\n    function get_table_name_and_data() {\r\n        let select_options = [{ value: \"no_selection\", label: \"Select a table\" }];\r\n        if (attributes.saved_tables) {\r\n            attributes.saved_tables.forEach((table) => {\r\n                select_options.push({\r\n                    value: parseInt(table.id),\r\n                    label: table.table_name,\r\n                });\r\n            });\r\n        }\r\n        return select_options;\r\n    }\r\n\r\n    function getGridId(url) {\r\n        if (!url || url == \"\") return;\r\n\r\n        let gridID = null;\r\n\r\n        gridID = url.match(/gid=(\\w+)/);\r\n\r\n        if (!gridID) {\r\n            return null;\r\n        }\r\n\r\n        gridID = gridID[1];\r\n\r\n        if (gridID) return gridID;\r\n\r\n        return null;\r\n    }   \r\n\r\n    function fetch_data_by_url(url) {\r\n\t\tif (!isProPluginActive()) {\r\n            const gridId = getGridId(url);\r\n\r\n\t\t\tif (gridId > 0) {\r\n\t\t\t\tsetGridError(true);\r\n\t\t\t\treturn false;\r\n\t\t\t} else {\r\n\t\t\t\tsetGridError(false);\r\n\t\t\t}\r\n\t\t}\r\n\r\n        $.ajax({\r\n            url: gswpts_gutenberg_block.admin_ajax,\r\n            data: {\r\n                action: \"swptls_create_table\",\r\n                name: attributes.init_table_name,\r\n                settings: JSON.stringify(attributes.table_settings),\r\n                sheet_url: url,\r\n                context: \"block\",\r\n                nonce: window?.gswpts_gutenberg_block?.nonce\r\n            },\r\n            type: \"POST\",\r\n            beforeSend: () => {\r\n                setAttributes({ show_settings: false });\r\n                if (attributes.req_type != \"save\") {\r\n                    setAttributes({ innerHTML: loader });\r\n                    setAttributes({ btn_text: \"Create\" });\r\n                }\r\n                setAttributes({ req_type: \"fetch\" });\r\n            },\r\n\r\n            success: (res) => {\r\n                if ( ! res.success ) {\r\n                    callAlert(\"Error &#128683;\", res.data.message, \"error\", 4);\r\n                    setAttributes({ req_type: \"fetch\" });\r\n                    setAttributes({ btn_text: \"Create\" });\r\n                    setAttributes({ show_settings: false });\r\n                    setAttributes({ innerHTML: res.data.output });\r\n\r\n                    if (res.data.type == \"empty_field\") {\r\n                        callAlert(\"Warning &#9888;&#65039;\", res.data.output, \"warning\", 3);\r\n                    }\r\n                }\r\n\r\n\r\n\r\n                if ( res.success ) {\r\n                    setAttributes({ sortcode_id: res.data.id });\r\n                    setAttributes({ req_type: \"save\" });\r\n                    setAttributes({ btn_text: \"Save Table\" });\r\n                    setAttributes({ innerHTML: res.data.output });\r\n                    setAttributes({ show_settings: true });\r\n                }\r\n\r\n                // let tableColumns = res.data.tableColumns;\r\n                // let formattedColumnValues = constructColumnValues(tableColumns);\r\n\r\n                // Set the column header values in tableColumns attribute\r\n                // setAttributes({ tableColumns: formattedColumnValues });\r\n\r\n                // immediateSaveTable(url);\r\n            },\r\n            complete: (res) => {\r\n                if (JSON.parse(res.responseText).success) {\r\n                    let default_settings = table_default_settings();\r\n                    let defaultRowsPerPage = default_settings.default_rows_per_page;\r\n                    let allowSorting = default_settings.allow_sorting;\r\n                    let verticalScroll = default_settings.vertical_scroll;\r\n                    let dom = '<\"#filtering_input\"lf>rt<\"#bottom_options\"ip>';\r\n                    let handle = `#${spreadsheet_container.current.id} #create_tables`;\r\n                    setAttributes({ is_table_saved_to_db: true });\r\n\r\n                    setTimeout(() => {\r\n                        $(handle).DataTable(\r\n                            table_object(defaultRowsPerPage, allowSorting, dom, verticalScroll)\r\n                        );\r\n\r\n\r\n                        callAlert(\"Successfull &#128077;\", \"<b>Google Sheet data fetched successfully</b>\", \"success\", 3);\r\n                    }, 300);\r\n\r\n                    setTimeout(() => {\r\n                        if (!isProPluginActive()) {\r\n                            callAlert(\r\n                                \"Warning &#9888;&#65039;\",\r\n                                \"<b>Live sync is limited to 50 rows.<br/><a target='blank' href='https://go.wppool.dev/DoC'>Upgrade to Pro</a> for showing full google sheet.</b>\",\r\n                                \"warning\",\r\n                                10\r\n                            );\r\n                        }\r\n                    }, 700);\r\n                }\r\n            },\r\n            error: (err) => {\r\n                callAlert(\"Error &#128683;\", \"<b>Something went wrong</b>\", \"error\", 3);\r\n                setAttributes({ show_settings: false });\r\n                setAttributes({ innerHTML: \"<b>Something went wrong</b>\" });\r\n            },\r\n        });\r\n    }\r\n\r\n    function immediateSaveTable(url) {\r\n        $.ajax({\r\n            url: gswpts_gutenberg_block.admin_ajax,\r\n            data: {\r\n                action: \"gswpts_sheet_create\",\r\n                type: \"save\",\r\n                table_name: attributes.init_table_name,\r\n                table_settings: attributes.table_settings,\r\n                file_input: url,\r\n                source_type: \"spreadsheet\",\r\n                gutenberg_req: true,\r\n                nonce: window?.gswpts_gutenberg_block?.create_nonce\r\n            },\r\n            type: \"POST\",\r\n            beforeSend: () => {\r\n                setAttributes({ show_settings: false });\r\n            },\r\n            success: (res) => {\r\n                if (res.data.type == \"invalid_action\" || res.data.type == \"invalid_request\") {\r\n                    callAlert(\"Error &#128683;\", res.data.output, \"error\", 4);\r\n                }\r\n\r\n                if (res.data.type == \"empty_field\") {\r\n                    callAlert(\"Warning &#9888;&#65039;\", res.data.output, \"warning\", 3);\r\n                }\r\n\r\n                if (res.data.type == \"saved\") {\r\n                    let id = res.data.id;\r\n                    let tableName = attributes.init_table_name;\r\n                    setAttributes({ sortcode_id: parseInt(id) });\r\n                    setAttributes({ is_table_saved_to_db: true });\r\n                    setAttributes({ show_settings: true });\r\n                    setAttributes({ table_name: tableName });\r\n\r\n                    callAlert(\"Successfull &#128077;\", res.data.output, \"success\", 3);\r\n                }\r\n\r\n                if (res.data.type == \"sheet_exists\") {\r\n                    setAttributes({ show_settings: false });\r\n\r\n                    setAttributes({ block_init: false });\r\n                    setAttributes({ sheet_url: null });\r\n                    setAttributes({ btn_text: \"Create\" });\r\n                    setAttributes({ req_type: \"fetch\" });\r\n                    callAlert(\"Warning &#9888;&#65039;\", \"<b>Google sheet previously saved. Try choose table instead of creating</b>\", \"warning\", 6);\r\n                }\r\n            },\r\n\r\n            error: (err) => {\r\n                callAlert(\"Error &#128683;\", \"<b>Something went wrong</b>\", \"error\", 3);\r\n                setAttributes({ show_settings: false });\r\n                setAttributes({ innerHTML: \"<b>Something went wrong</b>\" });\r\n            },\r\n        });\r\n    }\r\n\r\n    function table_default_settings() {\r\n        return {\r\n            table_title: false,\r\n            default_rows_per_page: 10,\r\n            show_info_block: true,\r\n            responsive_table: false,\r\n            show_x_entries: true,\r\n            swap_filter_inputs: false,\r\n            swap_bottom_options: false,\r\n            allow_sorting: true,\r\n            search_bar: true,\r\n            table_export: [],\r\n            vertical_scroll: null,\r\n            cell_format: \"expanded\",\r\n            table_cache: false,\r\n            table_style: 'default-style',\r\n            hide_column: [],\r\n            hide_rows: [],\r\n            hide_cell: [],\r\n            table_styles: false,\r\n            table_cache: false,\r\n        };\r\n    }\r\n\r\n    function fetch_data_by_id(id) {\r\n        if (typeof parseInt(id) != \"number\") {\r\n            setAttributes({\r\n                innerHTML: \"<h4>Choose saved table from block settings</h4>\",\r\n            });\r\n            return;\r\n        }\r\n\r\n        $.ajax({\r\n            url: gswpts_gutenberg_block.admin_ajax,\r\n            data: {\r\n                action: \"gswpts_sheet_fetch\",\r\n                id: parseInt(id),\r\n                nonce: window?.gswpts_gutenberg_block?.fetch_nonce\r\n            },\r\n            type: \"POST\",\r\n            beforeSend: () => {\r\n                setAttributes({ show_settings: false });\r\n                setAttributes({ table_name: \"\" });\r\n                setAttributes({ innerHTML: loader });\r\n            },\r\n            success: (res) => {\r\n                if (res.data.type == \"invalid_action\" || res.data.response_type == \"invalid_request\") {\r\n                    setAttributes({ innerHTML: res.data.output });\r\n                    setAttributes({ show_settings: false });\r\n                    setAttributes({ table_name: \"\" });\r\n\r\n                    callAlert(\"Error &#128683;\", res.data.output, \"error\", 4);\r\n                }\r\n\r\n                if ( res.data.type == \"no_table_found\") {\r\n                    setAttributes({ innerHTML: res.data.message });\r\n                    setAttributes({ show_settings: false });\r\n\r\n                    callAlert(\"Error &#128683;\", \"<b>No table found.</b>\", \"error\", 3);\r\n                }\r\n\r\n                if ( res.success) {\r\n                    setAttributes({ innerHTML: res.data.output });\r\n                    setAttributes({ show_settings: true });\r\n\r\n                    // let tableColumns = res.data.tableColumns;\r\n                    // let formattedColumnValues = constructColumnValues(tableColumns);\r\n\r\n                    // Set the column header values in tableColumns attribute\r\n                    // setAttributes({ tableColumns: formattedColumnValues });\r\n\r\n                    callAlert(\"Successfull &#128077;\", \"<b>Google Sheet data fetched successfully</b>\", \"success\", 3);\r\n                }\r\n            },\r\n\r\n            error: (err) => {\r\n                callAlert(\"Error &#128683;\", \"<b>Something went wrong</b>\", \"error\", 3);\r\n                setAttributes({ innerHTML: \"\" });\r\n                setAttributes({ btn_text: \"Create\" });\r\n            },\r\n\r\n            complete: (res) => {\r\n                if (JSON.parse(res.responseText).success) {\r\n                    let table_settings = JSON.parse(res.responseText).data.table_settings;\r\n                    let table_name = JSON.parse(res.responseText).data.name;\r\n\r\n                    let dom = `<\"#filtering_input\"${table_settings.show_x_entries ? \"l\" : \"\"}${\r\n                        table_settings.search_bar ? \"f\" : \"\"\r\n                    }>rt<\"#bottom_options\"${table_settings.show_info_block ? \"i\" : \"\"}p>`;\r\n\r\n                    let defaultRowsPerPage = table_settings.default_rows_per_page;\r\n                    let allowSorting = table_settings.allow_sorting;\r\n                    let verticalScroll = table_settings.vertical_scroll;\r\n                    let cellFormat = table_settings.cell_format;\r\n                    let redirectionType = table_settings.redirection_type;\r\n                    let hideColumn = table_settings.hide_column;\r\n\r\n                    setAttributes({ table_name: table_name });\r\n\r\n                    setTimeout(() => {\r\n                        if (isProPluginActive()) {\r\n                            changeCellFormat(cellFormat, id);\r\n                            changeRedirectionType(redirectionType, id);\r\n                        }\r\n\r\n                        // Intitiale the data table feature in gutenberg table\r\n                        $(\"#\" + id + \" #create_tables\").DataTable(table_object(defaultRowsPerPage, allowSorting, dom, verticalScroll, hideColumn));\r\n\r\n                        update_default_attributes(table_settings);\r\n\r\n                        let swap_filter_state = table_settings.swap_filter_inputs;\r\n                        let swap_bottom_state = table_settings.swap_bottom_options;\r\n\r\n                        swap_input_filter(id, swap_filter_state);\r\n                        // swap_bottom_options(id, swap_bottom_state);\r\n                    }, 700);\r\n                }\r\n            },\r\n        });\r\n    }\r\n\r\n    function constructColumnValues(columns) {\r\n        let columnValues = [];\r\n\r\n        if (!columns) return columnValues;\r\n\r\n        columns.forEach((column, i) => {\r\n            columnValues.push({\r\n                key: i,\r\n                value: i,\r\n                text: column,\r\n            });\r\n        });\r\n\r\n        return columnValues;\r\n    }\r\n\r\n    function update_default_attributes(ajax_table_settings) {\r\n        const prevSettingObj = { ...attributes.table_settings };\r\n        prevSettingObj.show_title = ajax_table_settings.show_title;\r\n        prevSettingObj.defaultRowsPerPage = ajax_table_settings.default_rows_per_page;\r\n        prevSettingObj.showInfoBlock = ajax_table_settings.show_info_block;\r\n\r\n        prevSettingObj.showXEntries = ajax_table_settings.show_x_entries;\r\n        prevSettingObj.swapFilterInputs = ajax_table_settings.swap_filter_inputs;\r\n        prevSettingObj.swapBottomOptions = ajax_table_settings.swap_bottom_options;\r\n        prevSettingObj.allowSorting = ajax_table_settings.allow_sorting;\r\n        prevSettingObj.searchBar = ajax_table_settings.search_bar;\r\n\r\n        if (isProPluginActive()) {\r\n            if (ajax_table_settings.responsive_style) {\r\n                prevSettingObj.responsive_style = ajax_table_settings.responsive_style;\r\n            }\r\n\r\n            if (ajax_table_settings.vertical_scroll) {\r\n                prevSettingObj.verticalScroll = ajax_table_settings.vertical_scroll;\r\n            }\r\n\r\n            if (ajax_table_settings.cell_format) {\r\n                prevSettingObj.cellFormat = ajax_table_settings.cell_format;\r\n            }\r\n\r\n            if (ajax_table_settings.redirection_type) {\r\n                prevSettingObj.redirectionType = ajax_table_settings.redirection_type;\r\n            }\r\n\r\n            // update the table cache input value\r\n            prevSettingObj.tableCache = ajax_table_settings.table_cache;\r\n\r\n            // update the table style input\r\n            if (ajax_table_settings.redirection_type) {\r\n                prevSettingObj.tableStyle = ajax_table_settings.table_style;\r\n            }\r\n\r\n            // Update the Hide column values to show it in input field\r\n            if (ajax_table_settings.hide_column) {\r\n                prevSettingObj.hideColumn = ajax_table_settings.hide_column;\r\n            }\r\n\r\n            // Update the Import sheet style input value\r\n            prevSettingObj.importStyles = ajax_table_settings.import_styles;\r\n        }\r\n        setAttributes({ table_settings: prevSettingObj });\r\n    }\r\n\r\n    function table_changer(id = null, prevSettingObj) {\r\n        let dom = `<\"#filtering_input\"${prevSettingObj.showXEntries ? \"l\" : \"\"}${prevSettingObj.searchBar ? \"f\" : \"\"}>rt<\"#bottom_options\"${\r\n            prevSettingObj.showInfoBlock ? \"i\" : \"\"\r\n        }p>`;\r\n        if (id == null) {\r\n            $(\"#\" + spreadsheet_container.current.id + \" #create_tables\").DataTable(\r\n                table_object(\r\n                    prevSettingObj.defaultRowsPerPage,\r\n                    prevSettingObj.allowSorting,\r\n                    dom,\r\n                    prevSettingObj.verticalScroll,\r\n                    prevSettingObj.hideColumn\r\n                )\r\n            );\r\n        } else {\r\n            $(\"#\" + id + \" #create_tables\").DataTable(\r\n                table_object(\r\n                    prevSettingObj.defaultRowsPerPage,\r\n                    prevSettingObj.allowSorting,\r\n                    dom,\r\n                    prevSettingObj.verticalScroll,\r\n                    prevSettingObj.hideColumn\r\n                )\r\n            );\r\n        }\r\n    }\r\n\r\n    function swap_input_filter(table_id, filter_state) {\r\n        let selector = null;\r\n\r\n        if (table_id == null) {\r\n            selector = spreadsheet_container.current.id;\r\n        } else {\r\n            selector = table_id;\r\n        }\r\n\r\n        /* If checkbox is checked then swap filter */\r\n\r\n        if (filter_state) {\r\n            $(\"#\" + selector + \" #filtering_input\").css(\"flex-direction\", \"row-reverse\");\r\n            $(\"#\" + selector + \" #create_tables_length\").css({\r\n                \"margin-right\": \"0\",\r\n                \"margin-left\": \"auto\",\r\n            });\r\n            $(\"#\" + selector + \" #create_tables_filter\").css({\r\n                \"margin-left\": \"0\",\r\n                \"margin-right\": \"auto\",\r\n            });\r\n        } else {\r\n            /* Set back to default position */\r\n            $(\"#\" + selector + \" #filtering_input\").css(\"flex-direction\", \"row\");\r\n            $(\"#\" + selector + \" #create_tables_length\").css({\r\n                \"margin-right\": \"auto\",\r\n                \"margin-left\": \"0\",\r\n            });\r\n            $(\"#\" + selector + \" #create_tables_filter\").css({\r\n                \"margin-left\": \"auto\",\r\n                \"margin-right\": \"0\",\r\n            });\r\n        }\r\n    }\r\n\r\n    function swap_bottom_options(table_id, bottom_state) {\r\n        let selector = null;\r\n\r\n        if (table_id == null) {\r\n            selector = spreadsheet_container.current.id;\r\n        } else {\r\n            selector = table_id;\r\n        }\r\n\r\n        let pagination_menu = $(\"#\" + selector + \" #bottom_options .pagination.menu\");\r\n\r\n        let style = {\r\n            flex_direction: \"row-reverse\",\r\n            table_info_style: {\r\n                margin_right: 0,\r\n                margin_left: \"auto\",\r\n            },\r\n            table_paginate_style: {\r\n                margin_right: \"auto\",\r\n                margin_left: 0,\r\n            },\r\n        };\r\n\r\n        if (bottom_state) {\r\n            if (pagination_menu.children().length > 5) {\r\n                overflow_menu_style(selector);\r\n            } else {\r\n                bottom_option_style(style, selector);\r\n            }\r\n        } else {\r\n            if (pagination_menu.children().length > 5) {\r\n                overflow_menu_style(selector);\r\n            } else {\r\n                style[\"flex_direction\"] = \"row\";\r\n\r\n                style.table_info_style[\"margin_left\"] = 0;\r\n                style.table_info_style[\"margin_right\"] = \"auto\";\r\n\r\n                style.table_paginate_style[\"margin_left\"] = \"auto\";\r\n                style.table_paginate_style[\"margin_right\"] = 0;\r\n\r\n                bottom_option_style(style, selector);\r\n            }\r\n        }\r\n    }\r\n\r\n    function overflow_menu_style(selector) {\r\n        $(\"#\" + selector + \" #bottom_options\").css(\"flex-direction\", \"column\");\r\n        $(\"#\" + selector + \" #create_tables_info\").css({\r\n            margin: \"5px auto\",\r\n        });\r\n        $(\"#\" + selector + \" #create_tables_paginate\").css({\r\n            margin: \"5px auto\",\r\n        });\r\n    }\r\n\r\n    function bottom_option_style($arg, selector) {\r\n        $(\"#\" + selector + \" #bottom_options\").css(\"flex-direction\", $arg[\"flex_direction\"]);\r\n        $(\"#\" + selector + \" #create_tables_info\").css({\r\n            \"margin-left\": $arg[\"table_info_style\"][\"margin_left\"],\r\n            \"margin-right\": $arg[\"table_info_style\"][\"margin_right\"],\r\n        });\r\n        $(\"#\" + selector + \" #create_tables_paginate\").css({\r\n            \"margin-left\": $arg[\"table_paginate_style\"][\"margin_left\"],\r\n            \"margin-right\": $arg[\"table_paginate_style\"][\"margin_right\"],\r\n        });\r\n    }\r\n\r\n    let loader = `\r\n                <div class=\"ui segment gswpts_table_loader\">\r\n                            <div class=\"ui active inverted dimmer\">\r\n                                <div class=\"ui large text loader\">Loading</div>\r\n                            </div>\r\n                            <p></p>\r\n                            <p></p>\r\n                            <p></p>\r\n                    </div>\r\n                `;\r\n\r\n    function table_object(pageLength, ordering, dom, verticalScroll, hideColumn) {\r\n        let obj = {\r\n            dom: dom,\r\n            order: [],\r\n            responsive: true,\r\n            lengthMenu: [\r\n                [1, 5, 10, 15],\r\n                [1, 5, 10, 15],\r\n            ],\r\n            pageLength: parseInt(pageLength),\r\n            lengthChange: true,\r\n            ordering: ordering,\r\n            destroy: true,\r\n            scrollX: true,\r\n        };\r\n\r\n        if (isProPluginActive()) {\r\n            obj.lengthMenu = [\r\n                [1, 5, 10, 15, 25, 50, 100, -1],\r\n                [1, 5, 10, 15, 25, 50, 100, \"All\"],\r\n            ];\r\n\r\n            if (verticalScroll != \"default\") {\r\n                obj.scrollY = `${verticalScroll}px`;\r\n            }\r\n        }\r\n\r\n        if (screenSize() === \"desktop\") {\r\n            if (hideColumn?.desktopValues) {\r\n                obj.columnDefs = hideColumnByScreen(hideColumn.desktopValues);\r\n            }\r\n        } else {\r\n            if (hideColumn?.mobileValues) {\r\n                obj.columnDefs = hideColumnByScreen(hideColumn.mobileValues);\r\n            }\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    // Return an array that will define the columns to hide\r\n    function hideColumnByScreen(arrayValues) {\r\n        return [\r\n            {\r\n                targets: convertArrayStringToInteger(arrayValues),\r\n                visible: false,\r\n                searchable: false,\r\n            },\r\n        ];\r\n    }\r\n\r\n    // convert string to integer from arrays\r\n    function convertArrayStringToInteger(arr) {\r\n        if (!arr) return [];\r\n        return arr.map((val) => parseInt(val));\r\n    }\r\n    // convert string to integer from arrays\r\n    function convertArrayIntegerToString(arr) {\r\n        if (!arr) return [];\r\n        return arr.map((val) => `${val}`);\r\n    }\r\n\r\n    // get the current screen size of user. If greater than 740 return desktop or return mobile\r\n    function screenSize() {\r\n        // Desktop screen size\r\n        if (screen.width > 740) {\r\n            return \"desktop\";\r\n        } else {\r\n            return \"mobile\";\r\n        }\r\n    }\r\n\r\n    function isProPluginActive() {\r\n        if (gswpts_gutenberg_block.isProActive) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    // Change the cell format of the table\r\n    function changeCellFormat(formatStyle, tableID) {\r\n        let tableCells = null;\r\n        if (tableID == null) {\r\n            tableCells = $(\"#\" + spreadsheet_container.current.id + \" table th, td\");\r\n        } else {\r\n            tableCells = $(\"#\" + tableID + \" table th, td\");\r\n        }\r\n\r\n        switch (formatStyle) {\r\n            case \"wrap\":\r\n                $.each(tableCells, function (i, cell) {\r\n                    $(cell).removeClass(\"clip_style\");\r\n                    $(cell).removeClass(\"expanded_style\");\r\n                    $(cell).addClass(\"wrap_style\");\r\n                });\r\n                break;\r\n\r\n            case \"clip\":\r\n                $.each(tableCells, function (i, cell) {\r\n                    $(cell).removeClass(\"wrap_style\");\r\n                    $(cell).removeClass(\"expanded_style\");\r\n                    $(cell).addClass(\"clip_style\");\r\n                });\r\n                break;\r\n            case \"expand\":\r\n                $.each(tableCells, function (i, cell) {\r\n                    $(cell).removeClass(\"clip_style\");\r\n                    $(cell).removeClass(\"wrap_style\");\r\n                    $(cell).addClass(\"expanded_style\");\r\n                });\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    function changeRedirectionType(type, tableID = null) {\r\n        let links = null;\r\n        if (tableID == null) {\r\n            links = $(\"#\" + spreadsheet_container.current.id + \" table a\");\r\n        } else {\r\n            links = $(\"#\" + tableID + \" table a\");\r\n        }\r\n        if (!links.length) return;\r\n        $.each(links, function (i, link) {\r\n            $(link).attr(\"target\", type);\r\n        });\r\n    }\r\n\r\n    function displayProPopup() {\r\n        WPPOOL.Popup('sheets_to_wp_table_live_sync').show();\r\n    }\r\n\r\n    return [\r\n        <InspectorControls style=\"margin-top: 40px\">\r\n            <Panel header=\"Sheets To WP Table Live Sync\">\r\n                {attributes.show_choose_table ? (\r\n                    <PanelBody title=\"Choose Table\" icon=\"media-text\" initialOpen={true}>\r\n                        <SelectControl\r\n                            label=\"Select Table\"\r\n                            value={attributes.table_selection}\r\n                            onChange={(val) => {\r\n                                setAttributes({ table_selection: val });\r\n                                setAttributes({\r\n                                    sortcode_id: typeof val == \"string\" ? parseInt(val) : null,\r\n                                });\r\n                                fetch_data_by_id(val);\r\n                            }}\r\n                            options={get_table_name_and_data()}\r\n                        />\r\n                    </PanelBody>\r\n                ) : (\r\n                    <></>\r\n                )}\r\n\r\n                {attributes.show_settings ? (\r\n                    <>\r\n                        {/* <PanelBody title=\"Display Settings\" icon=\"admin-settings\" initialOpen={false}>\r\n                            <PanelRow>\r\n                                <ToggleControl\r\n                                    label=\"Show Title\"\r\n                                    help=\"Enable this to show the table title in h3 tag above the table\"\r\n                                    checked={attributes.table_settings.show_title}\r\n                                    onChange={() => {\r\n                                        const prevSettingObj = { ...attributes.table_settings };\r\n                                        prevSettingObj.show_title = !prevSettingObj.show_title;\r\n                                        setAttributes({ table_settings: prevSettingObj });\r\n\r\n                                        saveChanges(attributes.sortcode_id, prevSettingObj);\r\n                                    }}\r\n                                />\r\n                                <br />\r\n                            </PanelRow>\r\n\r\n                            <PanelRow>\r\n                                <div class=\"default_rows\">\r\n                                    <h5 class=\"header\">Default rows per page</h5>\r\n                                    <p>This will show rows per page in the frontend</p>\r\n\r\n                                    <SelectControl\r\n                                        label=\"Default rows per page\"\r\n                                        value={attributes.table_settings.defaultRowsPerPage}\r\n                                        onChange={(val) => {\r\n                                            const prevSettingObj = {\r\n                                                ...attributes.table_settings,\r\n                                            };\r\n                                            prevSettingObj.defaultRowsPerPage = val;\r\n                                            setAttributes({ table_settings: prevSettingObj });\r\n\r\n                                            saveChanges(attributes.sortcode_id, prevSettingObj);\r\n\r\n                                            table_changer(attributes.sortcode_id, prevSettingObj);\r\n\r\n                                            swap_input_filter(attributes.sortcode_id, prevSettingObj.swapFilterInputs);\r\n                                            swap_bottom_options(attributes.sortcode_id, prevSettingObj.swapBottomOptions);\r\n                                        }}\r\n                                        options={rows_per_page(isProPluginActive())}\r\n                                    />\r\n                                </div>\r\n                                <br />\r\n                            </PanelRow>\r\n\r\n                            <PanelRow>\r\n                                <ToggleControl\r\n                                    label=\"Show info block\"\r\n                                    help=\"Show Showing X to Y of Z entries block below the table\"\r\n                                    checked={attributes.table_settings.showInfoBlock}\r\n                                    onChange={() => {\r\n                                        const prevSettingObj = { ...attributes.table_settings };\r\n                                        prevSettingObj.showInfoBlock = !prevSettingObj.showInfoBlock;\r\n                                        setAttributes({ table_settings: prevSettingObj });\r\n\r\n                                        saveChanges(attributes.sortcode_id, prevSettingObj);\r\n\r\n                                        table_changer(attributes.sortcode_id, prevSettingObj);\r\n\r\n                                        swap_input_filter(attributes.sortcode_id, prevSettingObj.swapFilterInputs);\r\n                                        swap_bottom_options(attributes.sortcode_id, prevSettingObj.swapBottomOptions);\r\n                                    }}\r\n                                />\r\n                                <br />\r\n                            </PanelRow>\r\n\r\n                            {isProPluginActive() ? (\r\n                                <PanelRow>\r\n                                    <div class=\"responsive_style\">\r\n                                        <h5 class=\"header\">Responsive Style</h5>\r\n                                        <p>Allow the table to collapse or scroll on mobile and tablet screen.</p>\r\n\r\n                                        <SelectControl\r\n                                            label=\"Responsive Style\"\r\n                                            value={attributes.table_settings.responsive_style}\r\n                                            onChange={(val) => {\r\n                                                const prevSettingObj = {\r\n                                                    ...attributes.table_settings,\r\n                                                };\r\n\r\n                                                prevSettingObj.responsive_style = val;\r\n                                                setAttributes({ table_settings: prevSettingObj });\r\n\r\n                                                saveChanges(attributes.sortcode_id, prevSettingObj);\r\n                                            }}\r\n                                            options={responsive_styles(isProPluginActive(), gswpts_gutenberg_block.responsive_styles)}\r\n                                        />\r\n                                    </div>\r\n                                    <br />\r\n                                </PanelRow>\r\n                            ) : null}\r\n\r\n                            <PanelRow>\r\n                                <ToggleControl\r\n                                    label=\"Show X entries\"\r\n                                    help=\"Show X entries per page dropdown\"\r\n                                    checked={attributes.table_settings.showXEntries}\r\n                                    onChange={() => {\r\n                                        const prevSettingObj = { ...attributes.table_settings };\r\n                                        prevSettingObj.showXEntries = !prevSettingObj.showXEntries;\r\n                                        setAttributes({ table_settings: prevSettingObj });\r\n\r\n                                        saveChanges(attributes.sortcode_id, prevSettingObj);\r\n\r\n                                        table_changer(attributes.sortcode_id, prevSettingObj);\r\n                                        swap_input_filter(attributes.sortcode_id, prevSettingObj.swapFilterInputs);\r\n                                        swap_bottom_options(attributes.sortcode_id, prevSettingObj.swapBottomOptions);\r\n                                    }}\r\n                                />\r\n                                <br />\r\n                            </PanelRow>\r\n\r\n                            {isProPluginActive() ? (\r\n                                <PanelRow>\r\n                                    <div class=\"verticall_scrolling\">\r\n                                        <h5 class=\"header\">Table Height</h5>\r\n                                        <p>\r\n                                            Choose the height of the table to scroll vertically. Activating this feature will allow the table to\r\n                                            behave as sticky header\r\n                                        </p>\r\n\r\n                                        <SelectControl\r\n                                            label=\"Vertical Scroll\"\r\n                                            value={attributes.table_settings.verticalScroll}\r\n                                            onChange={(val) => {\r\n                                                const prevSettingObj = {\r\n                                                    ...attributes.table_settings,\r\n                                                };\r\n\r\n                                                prevSettingObj.verticalScroll = val;\r\n                                                setAttributes({ table_settings: prevSettingObj });\r\n\r\n                                                saveChanges(attributes.sortcode_id, prevSettingObj);\r\n                                                table_changer(attributes.sortcode_id, prevSettingObj);\r\n                                                swap_input_filter(attributes.sortcode_id, prevSettingObj.swapFilterInputs);\r\n                                                swap_bottom_options(attributes.sortcode_id, prevSettingObj.swapBottomOptions);\r\n                                            }}\r\n                                            options={scrollHeights(isProPluginActive(), gswpts_gutenberg_block.scrollHeights)}\r\n                                        />\r\n                                    </div>\r\n                                    <br />\r\n                                </PanelRow>\r\n                            ) : null}\r\n\r\n                            {isProPluginActive() ? (\r\n                                <PanelRow>\r\n                                    <div class=\"cell_format\">\r\n                                        <h5 class=\"header\">Format Table Cell</h5>\r\n                                        <p>\r\n                                            Format the table cell as like google sheet cell formatting. Format your cell as Wrap or Clip or Expanded\r\n                                            style\r\n                                        </p>\r\n\r\n                                        <SelectControl\r\n                                            label=\"Cell Format\"\r\n                                            value={attributes.table_settings.cellFormat}\r\n                                            onChange={(val) => {\r\n                                                const prevSettingObj = {\r\n                                                    ...attributes.table_settings,\r\n                                                };\r\n\r\n                                                prevSettingObj.cellFormat = val;\r\n                                                setAttributes({ table_settings: prevSettingObj });\r\n\r\n                                                saveChanges(attributes.sortcode_id, prevSettingObj);\r\n\r\n                                                changeCellFormat(prevSettingObj.cellFormat, attributes.sortcode_id);\r\n\r\n                                                table_changer(attributes.sortcode_id, prevSettingObj);\r\n                                                swap_input_filter(attributes.sortcode_id, prevSettingObj.swapFilterInputs);\r\n                                                swap_bottom_options(attributes.sortcode_id, prevSettingObj.swapBottomOptions);\r\n                                            }}\r\n                                            options={formatCellValues(isProPluginActive())}\r\n                                        />\r\n                                    </div>\r\n                                    <br />\r\n                                </PanelRow>\r\n                            ) : null}\r\n\r\n                            {isProPluginActive() ? (\r\n                                <PanelRow>\r\n                                    <div class=\"redirection_type\">\r\n                                        <h5 class=\"header\">Link Redirection Type</h5>\r\n                                        <p>\r\n                                            Choose your desired table style for this table. This will change the design & color of this table\r\n                                            according to your selected table design\r\n                                        </p>\r\n\r\n                                        <SelectControl\r\n                                            label=\"Redirection Type\"\r\n                                            value={attributes.table_settings.redirectionType}\r\n                                            onChange={(val) => {\r\n                                                const prevSettingObj = {\r\n                                                    ...attributes.table_settings,\r\n                                                };\r\n\r\n                                                prevSettingObj.redirectionType = val;\r\n                                                setAttributes({ table_settings: prevSettingObj });\r\n\r\n                                                saveChanges(attributes.sortcode_id, prevSettingObj);\r\n\r\n                                                changeRedirectionType(prevSettingObj.redirectionType, attributes.sortcode_id);\r\n\r\n                                                table_changer(attributes.sortcode_id, prevSettingObj);\r\n                                                swap_input_filter(attributes.sortcode_id, prevSettingObj.swapFilterInputs);\r\n                                                swap_bottom_options(attributes.sortcode_id, prevSettingObj.swapBottomOptions);\r\n                                            }}\r\n                                            options={redirectionValues(isProPluginActive())}\r\n                                        />\r\n                                    </div>\r\n                                    <br />\r\n                                </PanelRow>\r\n                            ) : null}\r\n\r\n                            <PanelRow>\r\n                                <ToggleControl\r\n                                    label=\"Swap Filters\"\r\n                                    help=\"Swap the places of X entries dropdown and search filter input\"\r\n                                    checked={attributes.table_settings.swapFilterInputs}\r\n                                    onChange={() => {\r\n                                        const prevSettingObj = { ...attributes.table_settings };\r\n                                        prevSettingObj.swapFilterInputs = !prevSettingObj.swapFilterInputs;\r\n                                        setAttributes({ table_settings: prevSettingObj });\r\n                                        swap_input_filter(attributes.sortcode_id, prevSettingObj.swapFilterInputs);\r\n\r\n                                        saveChanges(attributes.sortcode_id, prevSettingObj);\r\n                                    }}\r\n                                />\r\n                                <br />\r\n                            </PanelRow>\r\n\r\n                            <PanelRow>\r\n                                <ToggleControl\r\n                                    label=\"Swap Bottom Elements\"\r\n                                    help=\"Swap the places of Showing X to Y of Z entries with table pagination filter\"\r\n                                    checked={attributes.table_settings.swapBottomOptions}\r\n                                    onChange={() => {\r\n                                        const prevSettingObj = { ...attributes.table_settings };\r\n                                        prevSettingObj.swapBottomOptions = !prevSettingObj.swapBottomOptions;\r\n                                        setAttributes({ table_settings: prevSettingObj });\r\n                                        swap_bottom_options(attributes.sortcode_id, prevSettingObj.swapBottomOptions);\r\n\r\n                                        saveChanges(attributes.sortcode_id, prevSettingObj);\r\n                                    }}\r\n                                />\r\n                                <br />\r\n                            </PanelRow>\r\n\r\n                            {isProPluginActive() ? (\r\n                                <PanelRow>\r\n                                    <div class=\"table_style\">\r\n                                        <h5 class=\"header\">Table Style</h5>\r\n                                        <p>\r\n                                            Choose your desired table style for this table. This will change the design & color of this table\r\n                                            according to your selected table design\r\n                                        </p>\r\n\r\n                                        <SelectControl\r\n                                            label=\"Choose Style\"\r\n                                            value={attributes.table_settings.tableStyle}\r\n                                            onChange={(val) => {\r\n                                                const prevSettingObj = {\r\n                                                    ...attributes.table_settings,\r\n                                                };\r\n\r\n                                                prevSettingObj.tableStyle = val;\r\n                                                setAttributes({ table_settings: prevSettingObj });\r\n\r\n                                                saveChanges(attributes.sortcode_id, prevSettingObj);\r\n\r\n                                                table_changer(attributes.sortcode_id, prevSettingObj);\r\n                                            }}\r\n                                            options={tableStyles(isProPluginActive(), gswpts_gutenberg_block.tableStyles)}\r\n                                        />\r\n                                    </div>\r\n                                    <br />\r\n                                </PanelRow>\r\n                            ) : null}\r\n\r\n                            {isProPluginActive() ? (\r\n                                <PanelRow>\r\n                                    <div class=\"import_styles\">\r\n                                        <h5 class=\"header\">Import Sheet Styles</h5>\r\n                                        <ToggleControl\r\n                                            label=\"Import Sheet Styles\"\r\n                                            help=\" Import cell background color & cell font color from\r\n                                            google sheet. If you activate this feature it will\r\n                                            override <i>Table Style</i> settings\"\r\n                                            checked={attributes.table_settings.importStyles}\r\n                                            onChange={(val) => {\r\n                                                const prevSettingObj = {\r\n                                                    ...attributes.table_settings,\r\n                                                };\r\n\r\n                                                prevSettingObj.importStyles = !prevSettingObj.importStyles;\r\n\r\n                                                setAttributes({ table_settings: prevSettingObj });\r\n\r\n                                                saveChanges(attributes.sortcode_id, prevSettingObj);\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                    <br />\r\n                                </PanelRow>\r\n                            ) : null}\r\n                        </PanelBody> */}\r\n\r\n                        {/* <PanelBody title=\"Sort & Filter\" icon=\"filter\" initialOpen={false}>\r\n                            <PanelRow>\r\n                                <ToggleControl\r\n                                    label=\"Allow Sorting\"\r\n                                    help=\"Enable this feature to sort table data for frontend.\"\r\n                                    checked={attributes.table_settings.allowSorting}\r\n                                    onChange={() => {\r\n                                        const prevSettingObj = { ...attributes.table_settings };\r\n                                        prevSettingObj.allowSorting = !prevSettingObj.allowSorting;\r\n                                        setAttributes({ table_settings: prevSettingObj });\r\n                                        table_changer(attributes.sortcode_id, prevSettingObj);\r\n                                        swap_input_filter(attributes.sortcode_id, prevSettingObj.swapFilterInputs);\r\n                                        swap_bottom_options(attributes.sortcode_id, prevSettingObj.swapBottomOptions);\r\n\r\n                                        saveChanges(attributes.sortcode_id, prevSettingObj);\r\n                                    }}\r\n                                />\r\n                                <br />\r\n                            </PanelRow>\r\n\r\n                            <PanelRow>\r\n                                <ToggleControl\r\n                                    label=\"Search Bar\"\r\n                                    help=\"Enable this feature to show a search bar in for the table. It will help user to search data in the table\"\r\n                                    checked={attributes.table_settings.searchBar}\r\n                                    onChange={() => {\r\n                                        const prevSettingObj = { ...attributes.table_settings };\r\n                                        prevSettingObj.searchBar = !prevSettingObj.searchBar;\r\n                                        setAttributes({ table_settings: prevSettingObj });\r\n                                        table_changer(attributes.sortcode_id, prevSettingObj);\r\n                                        swap_input_filter(attributes.sortcode_id, prevSettingObj.swapFilterInputs);\r\n                                        swap_bottom_options(attributes.sortcode_id, prevSettingObj.swapBottomOptions);\r\n\r\n                                        saveChanges(attributes.sortcode_id, prevSettingObj);\r\n                                    }}\r\n                                />\r\n                                <br />\r\n                            </PanelRow>\r\n                        </PanelBody> */}\r\n\r\n                        {/* {isProPluginActive() ? (\r\n                            <PanelBody title=\"Table Tools\" icon=\"admin-tools\" initialOpen={false}>\r\n                                <PanelRow>\r\n                                    <div class=\"hide_column\">\r\n                                        <h5 class=\"header\">Hide Columns In Desktop Screen:</h5>\r\n                                        <p>Hide your table columns on desktop screen size.</p>\r\n\r\n                                        <Dropdown\r\n                                            placeholder=\"\"\r\n                                            defaultValue={\r\n                                                attributes.table_settings.hideColumn?.desktopValues\r\n                                                    ? convertArrayStringToInteger(attributes.table_settings.hideColumn.desktopValues)\r\n                                                    : \"\"\r\n                                            }\r\n                                            selection\r\n                                            multiple\r\n                                            options={attributes.tableColumns}\r\n                                            onChange={(e, { value }) => {\r\n                                                const prevSettingObj = {\r\n                                                    ...attributes.table_settings,\r\n                                                };\r\n                                                prevSettingObj.hideColumn.desktopValues = convertArrayIntegerToString(value);\r\n\r\n                                                setAttributes({ table_settings: prevSettingObj });\r\n                                                saveChanges(attributes.sortcode_id, prevSettingObj);\r\n\r\n                                                table_changer(attributes.sortcode_id, prevSettingObj);\r\n                                                swap_input_filter(attributes.sortcode_id, prevSettingObj.swapFilterInputs);\r\n                                                swap_bottom_options(attributes.sortcode_id, prevSettingObj.swapBottomOptions);\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                    <br />\r\n                                </PanelRow>\r\n\r\n                                <PanelRow>\r\n                                    <div class=\"hide_column\">\r\n                                        <h5 class=\"header\">Hide Columns In Mobile Screen:</h5>\r\n                                        <p>Hide your table columns on mobile screen size.</p>\r\n                                        <Dropdown\r\n                                            placeholder=\"\"\r\n                                            defaultValue={\r\n                                                attributes.table_settings.hideColumn?.mobileValues != null\r\n                                                    ? convertArrayStringToInteger(attributes.table_settings.hideColumn.mobileValues)\r\n                                                    : \"\"\r\n                                            }\r\n                                            selection\r\n                                            multiple\r\n                                            options={attributes.tableColumns}\r\n                                            onChange={(e, { value }) => {\r\n                                                const prevSettingObj = {\r\n                                                    ...attributes.table_settings,\r\n                                                };\r\n                                                prevSettingObj.hideColumn.mobileValues = convertArrayIntegerToString(value);\r\n                                                setAttributes({ table_settings: prevSettingObj });\r\n                                                saveChanges(attributes.sortcode_id, prevSettingObj);\r\n\r\n                                                table_changer(attributes.sortcode_id, prevSettingObj);\r\n                                                swap_input_filter(attributes.sortcode_id, prevSettingObj.swapFilterInputs);\r\n                                                swap_bottom_options(attributes.sortcode_id, prevSettingObj.swapBottomOptions);\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                    <br />\r\n                                </PanelRow>\r\n                            </PanelBody>\r\n                        ) : null} */}\r\n                    </>\r\n                ) : (\r\n                    <></>\r\n                )}\r\n            </Panel>\r\n        </InspectorControls>,\r\n        <div\r\n            class={`gswpts_create_table_container gswpts_create_table_container gswpts_${embedTableStyleClass(attributes)}`}\r\n            id={attributes.sortcode_id}\r\n            style={{ marginRight: \"0\" }}\r\n        >\r\n            {\" \"}\r\n            {/* {attributes.table_name != \"\" && attributes.table_settings.show_title ? <h3> {attributes.table_name} </h3> : <> </>}{\" \"} */}\r\n            {attributes.block_init ? (\r\n                attributes.initializer_button_action == \"choose_table\" ? (\r\n                    <div id=\"spreadsheet_container\" dangerouslySetInnerHTML={{ __html: attributes.innerHTML }}></div>\r\n                ) : (\r\n                    <>\r\n                        {attributes.is_table_saved_to_db == false ? (\r\n                            <div class=\"create_table_input\">\r\n                                <div>\r\n                                    <div class=\"ui icon input\">\r\n                                        <input\r\n                                            required\r\n                                            type=\"text\"\r\n                                            name=\"table_name\"\r\n                                            placeholder=\"Table Name\"\r\n                                            value={attributes.init_table_name}\r\n                                            onChange={(e) => {\r\n                                                setAttributes({ init_table_name: e.target.value });\r\n                                            }}\r\n                                        />{\" \"}\r\n                                    </div>\r\n\r\n                                    <div class=\"ui icon input\">\r\n                                        <input\r\n                                            required\r\n                                            type=\"text\"\r\n                                            name=\"file_input\"\r\n                                            placeholder=\"Enter the google spreadsheet public url.\"\r\n                                            value={attributes.sheet_url}\r\n                                            ref={sheetUrlRef}\r\n                                            onChange={(e) => {\r\n                                                setAttributes({ sheet_url: e.target.value });\r\n                                            }}\r\n                                        />{\" \"}\r\n                                        <i class=\"file icon\"> </i>{\" \"}\r\n                                    </div>\r\n\r\n                                    <button\r\n                                        class=\"ui violet button\"\r\n                                        type=\"button\"\r\n                                        id=\"fetch_save_btn\"\r\n                                        onClick={(e) => {\r\n                                            fetch_data_by_url(attributes.sheet_url);\r\n                                        }}\r\n                                    >\r\n                                        {\" \"}\r\n                                        {attributes.btn_text}{\" \"}\r\n                                    </button>\r\n                                </div>\r\n                                {gridError && (<p className='swptls-grid-not-supported-error'>On free plan tables can be created from the first sheet tab only. <span onClick={displayProPopup}>Get Pro</span> to create table from any tab of your Google SpreadSheet.</p>)}\r\n                            </div>\r\n                        ) : (\r\n                            <></>\r\n                        )}\r\n                        <div ref={spreadsheet_container} id=\"spreadsheet_container\" dangerouslySetInnerHTML={{ __html: attributes.innerHTML }}></div>{\" \"}\r\n                    </>\r\n                )\r\n            ) : (\r\n                <div class=\"block_initializer\">\r\n                    <button\r\n                        id=\"create_button\"\r\n                        class=\"positive ui button\"\r\n                        onClick={(e) => {\r\n                            setAttributes({ block_init: true });\r\n                            setAttributes({ initializer_button_action: \"create_new\" });\r\n                            setAttributes({ innerHTML: \"\" });\r\n                        }}\r\n                    >\r\n                        Create New &nbsp; <i class=\"plus icon\"> </i>{\" \"}\r\n                    </button>\r\n\r\n                    <button\r\n                        class=\"ui violet button\"\r\n                        type=\"button\"\r\n                        onClick={(e) => {\r\n                            setAttributes({ block_init: true });\r\n                            setAttributes({ initializer_button_action: \"choose_table\" });\r\n                            setAttributes({ show_choose_table: true });\r\n                            // document.querySelector(\".interface-pinned-items > button\").click();\r\n                        }}\r\n                    >\r\n                        Choose Table{\" \"}\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </div>,\r\n    ];\r\n}\r\n\r\n// Inject the table style class if import style is not active\r\nfunction embedTableStyleClass(attributes) {\r\n    if (attributes.table_settings.importStyles) {\r\n        return \"default-style\";\r\n    } else {\r\n        return attributes.table_settings.tableStyle;\r\n    }\r\n}\r\n",
        "import Block_Logo from \"./logo\";\r\nimport editFucntion from \"./editFucntion\";\r\n\r\nconst { registerBlockType } = wp.blocks;\r\n\r\nregisterBlockType(\"gswpts/google-sheets-to-wp-tables\", {\r\n    title: \"Sheets To WP Table Live Sync\",\r\n    description:\r\n        \"Display Google Spreadsheet data to WordPress table in just a few clicks and keep the data always synced. Organize and display all your spreadsheet data in your WordPress quickly and effortlessly.\",\r\n    category: \"common\",\r\n    example: {},\r\n    icon: Block_Logo,\r\n    keywords: [\"spreadsheet\", \"google\", \"table\"],\r\n    attributes: {\r\n        sortcode_id: {\r\n            type: \"integer\",\r\n            default: null,\r\n        },\r\n\r\n        block_init: {\r\n            type: \"boolean\",\r\n            default: false,\r\n        },\r\n\r\n        initializer_button_action: {\r\n            type: \"string\",\r\n            default: \"\",\r\n        },\r\n\r\n        show_choose_table: {\r\n            type: \"boolean\",\r\n            default: false,\r\n        },\r\n\r\n        btn_text: {\r\n            type: \"string\",\r\n            default: \"Create\",\r\n        },\r\n\r\n        req_type: {\r\n            type: \"string\",\r\n            default: \"fetch\",\r\n        },\r\n\r\n        init_table_name: {\r\n            type: \"string\",\r\n            default: \"GSWPTS Table\",\r\n        },\r\n\r\n        sheet_url: {\r\n            type: \"string\",\r\n            default: \"\",\r\n        },\r\n\r\n        is_table_saved_to_db: {\r\n            type: \"boolean\",\r\n            default: false,\r\n        },\r\n\r\n        table_selection: {\r\n            type: \"string\",\r\n            default: \"no_selection\",\r\n        },\r\n\r\n        innerHTML: {\r\n            type: \"string\",\r\n            default: \"<h4>Choose table from block settings</h4>\",\r\n        },\r\n\r\n        saved_tables: {\r\n            type: \"object\",\r\n            default: gswpts_gutenberg_block.table_details,\r\n        },\r\n\r\n        table_name: {\r\n            type: \"string\",\r\n            default: \"\",\r\n        },\r\n\r\n        show_settings: {\r\n            type: \"boolean\",\r\n            default: false,\r\n        },\r\n\r\n        table_settings: {\r\n            type: \"object\",\r\n            default: {\r\n                table_title: false,\r\n                default_rows_per_page: 10,\r\n                show_info_block: true,\r\n                responsive_table: false,\r\n                show_x_entries: true,\r\n                pagination: true,\r\n                swap_filter_inputs: false,\r\n                swap_bottom_options: false,\r\n                allow_sorting: true,\r\n                search_bar: true,\r\n                table_export: [],\r\n                vertical_scroll: null,\r\n                cell_format: \"expanded\",\r\n                table_cache: false,\r\n                table_style: 'default-style',\r\n                hide_column: [],\r\n                hide_rows: [],\r\n                hide_cell: [],\r\n                table_styles: false,\r\n                table_cache: false,\r\n            },\r\n        },\r\n\r\n        // Column Header values of table that will set on the run\r\n        tableColumns: {\r\n            type: \"object\",\r\n            default: null,\r\n        },\r\n    },\r\n\r\n    edit: editFucntion,\r\n\r\n    save: ({ attributes }) => {\r\n        const { sortcode_id } = attributes;\r\n        return <>[gswpts_table id = {sortcode_id}] </>;\r\n    },\r\n});\r\n",
        "import Logo from \"../../../../public/images/logo_30_30.svg\";\r\n\r\nconst Block_Logo = () => (\r\n    <div>\r\n        <Logo />\r\n    </div>\r\n);\r\n\r\nexport default Block_Logo;\r\n"
    ],
    "names": [
        "__webpack_require__",
        "module",
        "getter",
        "__esModule",
        "d",
        "a",
        "exports",
        "definition",
        "key",
        "o",
        "Object",
        "defineProperty",
        "enumerable",
        "get",
        "obj",
        "prop",
        "prototype",
        "hasOwnProperty",
        "call",
        "React",
        "_path",
        "_mask",
        "_g",
        "_mask2",
        "_g2",
        "_mask3",
        "_g3",
        "_mask4",
        "_g4",
        "_mask5",
        "_g5",
        "_mask6",
        "_g6",
        "_mask7",
        "_g7",
        "_path2",
        "_path3",
        "_defs",
        "_extends",
        "assign",
        "target",
        "i",
        "arguments",
        "length",
        "source",
        "apply",
        "this",
        "props",
        "width",
        "height",
        "viewBox",
        "fill",
        "xmlns",
        "id",
        "maskUnits",
        "x",
        "y",
        "fillRule",
        "clipRule",
        "mask",
        "opacity",
        "x1",
        "y1",
        "x2",
        "y2",
        "gradientUnits",
        "stopColor",
        "offset",
        "stopOpacity",
        "$",
        "jQuery",
        "noConflict",
        "callAlert",
        "title",
        "description",
        "type",
        "time",
        "options",
        "icon",
        "close_anim",
        "position",
        "alert_size",
        "window",
        "alerts_class",
        "append",
        "_alert",
        "prepend",
        "transition",
        "on",
        "closest",
        "animation",
        "onComplete",
        "remove",
        "timer",
        "alertHide",
        "setTimeout",
        "duration",
        "mouseenter",
        "clearTimeout",
        "mouseleave",
        "suiAlert",
        "wp",
        "element",
        "useEffect",
        "useRef",
        "useState",
        "InspectorControls",
        "blockEditor",
        "components",
        "Panel",
        "PanelBody",
        "SelectControl",
        "PanelRow",
        "ToggleControl",
        "embedTableStyleClass",
        "attributes",
        "table_settings",
        "importStyles",
        "tableStyle",
        "registerBlockType",
        "blocks",
        "category",
        "example",
        "keywords",
        "sortcode_id",
        "default",
        "block_init",
        "initializer_button_action",
        "show_choose_table",
        "btn_text",
        "req_type",
        "init_table_name",
        "sheet_url",
        "is_table_saved_to_db",
        "table_selection",
        "innerHTML",
        "saved_tables",
        "gswpts_gutenberg_block",
        "table_details",
        "table_name",
        "show_settings",
        "table_title",
        "default_rows_per_page",
        "show_info_block",
        "responsive_table",
        "show_x_entries",
        "pagination",
        "swap_filter_inputs",
        "swap_bottom_options",
        "allow_sorting",
        "search_bar",
        "table_export",
        "vertical_scroll",
        "cell_format",
        "table_cache",
        "table_style",
        "hide_column",
        "hide_rows",
        "hide_cell",
        "table_styles",
        "tableColumns",
        "edit",
        "setAttributes",
        "gridError",
        "setGridError",
        "fetch_data_by_id",
        "spreadsheet_container",
        "sheetUrlRef",
        "parseInt",
        "ajax",
        "url",
        "admin_ajax",
        "data",
        "action",
        "nonce",
        "fetch_nonce",
        "beforeSend",
        "loader",
        "success",
        "res",
        "response_type",
        "output",
        "message",
        "error",
        "err",
        "complete",
        "JSON",
        "parse",
        "responseText",
        "name",
        "dom",
        "defaultRowsPerPage",
        "allowSorting",
        "verticalScroll",
        "cellFormat",
        "redirectionType",
        "redirection_type",
        "hideColumn",
        "ajax_table_settings",
        "prevSettingObj",
        "isProPluginActive",
        "formatStyle",
        "tableID",
        "tableCells",
        "current",
        "each",
        "cell",
        "removeClass",
        "addClass",
        "changeCellFormat",
        "links",
        "link",
        "attr",
        "changeRedirectionType",
        "DataTable",
        "table_object",
        "show_title",
        "showInfoBlock",
        "showXEntries",
        "swapFilterInputs",
        "swapBottomOptions",
        "searchBar",
        "responsive_style",
        "responsive_style",
        "tableCache",
        "import_styles",
        "table_id",
        "filter_state",
        "selector",
        "swap_filter_state",
        "css",
        "select_options",
        "pageLength",
        "ordering",
        "order",
        "responsive",
        "lengthMenu",
        "lengthChange",
        "destroy",
        "scrollX",
        "scrollY",
        "screen",
        "desktopValues",
        "columnDefs",
        "hideColumnByScreen",
        "mobileValues",
        "arrayValues",
        "targets",
        "convertArrayStringToInteger",
        "visible",
        "searchable",
        "arr",
        "map",
        "val",
        "isProActive",
        "style",
        "header",
        "initialOpen",
        "label",
        "value",
        "onChange",
        "forEach",
        "table",
        "push",
        "class",
        "marginRight",
        "dangerouslySetInnerHTML",
        "__html",
        "required",
        "placeholder",
        "e",
        "ref",
        "onClick",
        "gridId",
        "gridID",
        "match",
        "getGridId",
        "settings",
        "stringify",
        "context",
        "default_settings",
        "handle",
        "fetch_data_by_url",
        "className",
        "WPPOOL",
        "Popup",
        "show",
        "save"
    ],
    "sourceRoot": ""
}