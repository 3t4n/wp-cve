{"version":3,"file":"script.js","mappings":"yBAAA,IAAI,EAA+BA,MCA/B,EAA+BC,SCAtBC,EAAmB,SAACC,GAA0D,IAAtDC,IAAsD,yDAAtCC,IAAsC,yDAAnBC,IAAmB,yDAC1F,EAA0OH,GAAM,GAAhP,IAAQI,KAAAA,OAAR,MAAe,QAAf,MAAwBC,MAAAA,OAAxB,MAAgC,YAAhC,MAA6CC,SAAAA,OAA7C,MAAwD,4CAAxD,MAAqGC,MAAAA,OAArG,MAA6G,GAA7G,MAAiHC,SAAAA,OAAjH,MAA4H,gBAA5H,MAA6IC,WAAAA,OAA7I,MAA0J,UAA1J,MAAqKC,OAAAA,OAArK,MAA8K,YAA9K,MAA2LC,KAAAA,OAA3L,MAAkM,QAAlM,MAA2MC,aAAAA,OAA3M,MAA0N,YAA1N,EAEMC,EAAU,aAAeT,GAAQF,EAAxB,sBAAqDI,EAArD,KACb,UAAYF,GAAQD,EAArB,0BACoBI,aADpB,EACoBA,EAAOO,IAD3B,yCAEsBF,EAFtB,2CAGyBJ,EAHzB,uCAIqBG,EAJrB,yCAKuBD,EALvB,6CAM2BD,EAN3B,8CAQCR,GAAW,eAAJ,OAAmBI,EAAnB,KAET,OAAOQ,GAGKE,EAAe,SAACC,GAC5B,MAA0FA,GAAU,GAApG,IAAQC,MAAAA,OAAR,MAAgB,MAAhB,MAAuBC,MAAAA,OAAvB,MAA+B,QAA/B,MAAwCb,MAAAA,OAAxC,MAAgD,QAAhD,MAAyDc,KAAAA,OAAzD,MAAgE,MAAhE,MAAuEC,OAAAA,OAAvE,MAAgF,MAAhF,EAEMC,EAAkB,SAAAC,GACvB,IAAMC,EAAQJ,aAAH,EAAGA,EAAMK,cACpB,OAAOD,aAAA,EAAAA,EAAOE,SAAS,UAAUF,aAA1B,EAA0BA,EAAOE,SAASH,KAG5CI,EAAoB,QAAVT,IAAoBA,EAC9BU,EAAY,GAAH,OAAMV,EAAN,YAAeC,EAAf,YAAwBb,GAEjCQ,EAAS,SAAH,OACTa,EAAU,GAAK,CAAC,MAAO,QAAS,SAAU,QAAQE,KAAI,SAAAT,GAAI,OAAIE,EAAgBF,GAAhB,iBAAkCA,EAAlC,aAA2CQ,EAA3C,KAA0D,MAAIE,KAAK,IADxH,iBAERT,EAAD,yBAAiCA,EAAjC,KAAU,GAFD,QAKZ,OAAOP,GA2EKiB,EAAa,SAACC,EAAUC,GAA0B,IAApBC,IAAoB,yDAC9D,EAA+RD,GAAQ,GAAvS,IAAQE,WAAAA,OAAR,MAAqB,UAArB,MAAgCC,aAAAA,OAAhC,MAA+C,aAA/C,MAA6DC,YAAAA,OAA7D,MAA2E,IAA3E,MAAgFC,WAAAA,OAAhF,MAA6F,IAA7F,MAAkGC,aAAAA,OAAlG,aAAuHC,SAAAA,OAAvH,MAAkI,CAAEC,QAAS,GAAIC,OAAQ,GAAIC,OAAQ,IAArK,MAA2KC,UAAAA,OAA3K,MAAuL,SAAvL,MAAiMC,cAAAA,OAAjM,MAAiN,OAAjN,MAAyNC,eAAAA,OAAzN,MAA0O,OAA1O,MAAkPC,WAAAA,OAAlP,MAA+P,OAA/P,MAAuQC,YAAAA,OAAvQ,MAAqR,MAArR,EAEMC,EAAc,SAACC,EAAOC,GAAR,OAAyBD,EAAD,UAAiBC,EAAjB,aAAiCD,EAAjC,KAAS,IAE/CE,GAAiBlB,IAAaC,GAAc,YAAcA,EAC1DkB,GAAkBb,aAAA,EAAAA,EAAUC,UAAWD,EACvCc,GAAiBd,aAAA,EAAAA,EAAUE,SAAUW,EACrCE,GAAiBf,aAAA,EAAAA,EAAUG,SAAUW,EAErCxC,EAAS,SAAH,OACTsC,EAAgB,GAAH,wBAAyBjB,EAAzB,cAAyCC,EAAzC,KADJ,iBAETa,EAAYX,EAAY,eAFf,8BAGKe,EAHL,wBAITJ,EAAYL,EAAW,cAJd,iBAKTK,EAAYJ,EAAe,kBALlB,iBAMTI,EAAYH,EAAgB,mBANnB,iBAOTG,EAAYF,EAAY,eAPf,iBAQTE,EAAYD,EAAa,kBARhB,QAYNQ,EAAanB,GAAe,MAAQA,EAAmB,SAAWA,EAAc,UAAYA,SAAAA,EAAaX,SAAS,OAAtB,0BAAkDW,aAAlD,EAAkDA,EAAaoB,QAAQ,MAAO,MAA9E,sBAAmGpB,EAAnG,KAA1C,GAElDqB,EAAON,EAAgB,GAAH,mDAAoDjB,aAApD,EAAoDA,EAAYwB,MAAM,KAAK7B,KAAK,MAAhF,OAAuF0B,EAAUC,QAAQ,KAAM,IAA/G,iBAE1B,MAAO,CACNG,gBAAiBrB,GAAgBa,EAAgB,GAAjC,sBAAqDM,EAArD,MAChB5C,OAAQ,UAAGkB,EAAH,oBACLlB,EADK,2DAILkB,EAJK,mCAKUsB,EALV,2EASLtB,EATK,mCAUUuB,EAVV,2BAYLE,QAAQ,OAAQ,KAAKI,SC5H1B,EAtBc,SAAC,GAA6B,QDkGhBC,EAC3B,IAAQ1C,EAAR,EAAkB2C,EAAlB,EAAoCC,EAApC,EAAwDC,EAAxD,EAAqEC,EAArE,EAAoFC,EAApF,EAAoGC,ECnGpFC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SACpBC,EAA8DF,EAA9DE,UAAWC,EAAmDH,EAAnDG,WAAYC,EAAuCJ,EAAvCI,WAAYnE,EAA2B+D,EAA3B/D,MAAOoE,EAAoBL,EAApBK,QAASzD,EAAWoD,EAAXpD,OAErD0D,EAAiB,oBAAH,OAAuBL,EAAvB,qBAEpB,OAAO,6BAAOM,wBAAyB,CACtCC,OAAQ,0BACN9C,EAAW,GAAI0C,UADT,aACN,EAA4Bb,eADtB,2BAEN7B,EAAW,GAAD,OAAI4C,EAAJ,aAA+BF,UAFnC,aAEN,EAAsD3D,OAFhD,mBAIN6D,EAJM,gCAKOJ,EALP,oBAMLvE,EAAiBwE,GANZ,6BD4FkBV,ECrFFY,EDsFzB,EAAqHZ,GAAS,GAA9H,IAAQ1C,KAAAA,OAAR,MAAe,EAAf,MAAkB2C,SAAAA,OAAlB,MAA6B,MAA7B,MAAoCC,WAAAA,OAApC,MAAiD,MAAjD,MAAwDC,IAAAA,OAAxD,MAA8D,MAA9D,MAAqEC,MAAAA,OAArE,MAA6E,MAA7E,MAAoFC,OAAAA,OAApF,MAA6F,MAA7F,MAAoGC,KAAAA,OAApG,MAA2G,MAA3G,EAEe,IAAMhD,EAAN,UAAgB2C,EAAhB,YAA4BC,GAA5B,UAA8CC,EAA9C,YAAqDC,EAArD,YAA8DC,EAA9D,YAAwEC,IC/F9E,oBAQLpD,EAAaC,GARR,wBAUN0D,EAVM,oCAWErE,EAXF,kBAaNmD,QAAQ,OAAQ,SCnBdqB,EAAIC,OAOVC,SAASC,iBAAiB,oBAAoB,WACrBD,SAASE,iBAAiB,+BAClCC,SAAQ,SAAAC,GACvB,IAAMf,EAAagB,KAAKC,MAAMF,EAAaG,QAAQlB,YAC3CmB,EAAQnB,EAARmB,KAERC,EAAAA,EAAAA,QAAO,wCACN,oBAAC,EAAD,CAAOpB,WAAYA,EAAYC,SAAUkB,IAEzC,oBAACE,EAAD,CAAcrB,WAAYA,EAAYC,SAAUkB,KAC5CJ,GAELA,SAAAA,EAAcO,gBAAgB,yBAIhC,IAAMD,EAAe,SAAC,GAA6B,IAA3BrB,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SAC3BsB,EAA2EvB,EAA3EuB,KAAMC,EAAqExB,EAArEwB,UAAWC,EAA0DzB,EAA1DyB,SAAUC,EAAgD1B,EAAhD0B,WAAYC,EAAoC3B,EAApC2B,UAAWC,EAAyB5B,EAAzB4B,YAAaC,EAAY7B,EAAZ6B,QAEjEC,EAAY,oBAAH,OAAuB7B,EAAvB,aAaf,OAXA8B,EAAAA,EAAAA,YAAU,WACT,IAAMC,EAAuB,IAAIC,sBAAqB,SAACC,GAClDA,EAAQ,GAAGC,mBAAqB,IAEpC1B,EAAEqB,GAAWM,WClCgB,SAACpC,GAChC,IAAQuB,EAAkEvB,EAAlEuB,KAAMC,EAA4DxB,EAA5DwB,UAAWC,EAAiDzB,EAAjDyB,SAAUC,EAAuC1B,EAAvC0B,WAAYC,EAA2B3B,EAA3B2B,UAAWC,EAAgB5B,EAAhB4B,YAE1D,MAAO,CACNL,KAAAA,EACAc,eAAgB,IAChBC,aAAc,EACdC,WAAW,EACXC,UAAW,GACXC,WAAY,CAAC,SAEbC,GAAI,CACHC,OAAQlB,EACRmB,WAAY,IACZC,MAAO,GACPC,KAAM,SAAWpB,EACjBqB,QAAS,YAAcrB,EACvBsB,QAAS,YAActB,GAGxBuB,IAAK,CACJN,OAAQhB,EACRiB,WAAY,IACZC,MAAO,GACPC,KAAM,SAAWlB,EACjBmB,QAAS,YAAcnB,EACvBoB,QAAS,YAAcpB,GAGxB5F,KAAMwF,GDKmB0B,CAAiBlD,IAEzCgC,EAAqBmB,UAAUjB,EAAQ,GAAGkB,YAE3CpB,EAAqBqB,QAAQ1C,SAAS2C,cAAcxB,MAClD,CAACP,EAAMC,EAAWC,EAAUC,EAAYC,EAAWC,IAE/C,2BAAK2B,UAAU,mBACrB,yBAAGA,UAAU,WAAW1B,K","sources":["webpack://animated-text-block/external var \"React\"","webpack://animated-text-block/external var \"ReactDOM\"","webpack://animated-text-block/../Components/utils/getCSS.js","webpack://animated-text-block/./src/Style.js","webpack://animated-text-block/./src/script.js","webpack://animated-text-block/./src/utils/config.js"],"sourcesContent":["var __WEBPACK_NAMESPACE_OBJECT__ = React;","var __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","export const getBackgroundCSS = (bg, isSolid = true, isGradient = true, isImage = true) => {\r\n\tconst { type = 'solid', color = '#000000b3', gradient = 'linear-gradient(135deg, #4527a4, #8344c5)', image = {}, position = 'center center', attachment = 'initial', repeat = 'no-repeat', size = 'cover', overlayColor = '#000000b3' } = bg || {};\r\n\r\n\tconst styles = ('gradient' === type && isGradient) ? `background: ${gradient};` :\r\n\t\t('image' === type && isImage) ?\r\n\t\t\t`background: url(${image?.url});\r\n\t\t\t\tbackground-color: ${overlayColor};\r\n\t\t\t\tbackground-position: ${position};\r\n\t\t\t\tbackground-size: ${size};\r\n\t\t\t\tbackground-repeat: ${repeat};\r\n\t\t\t\tbackground-attachment: ${attachment};\r\n\t\t\t\tbackground-blend-mode: overlay;` :\r\n\t\t\tisSolid && `background: ${color};`;\r\n\r\n\treturn styles;\r\n} // PHP version in Stepped Content\r\n\r\nexport const getBorderCSS = (border) => {\r\n\tconst { width = '0px', style = 'solid', color = '#0000', side = 'all', radius = '0px' } = border || {};\r\n\r\n\tconst borderSideCheck = s => {\r\n\t\tconst bSide = side?.toLowerCase();\r\n\t\treturn bSide?.includes('all') || bSide?.includes(s);\r\n\t}\r\n\r\n\tconst noWidth = width === '0px' || !width;\r\n\tconst borderCSS = `${width} ${style} ${color}`;\r\n\r\n\tconst styles = `\r\n\t\t${noWidth ? '' : ['top', 'right', 'bottom', 'left'].map(side => borderSideCheck(side) ? `border-${side}: ${borderCSS};` : '').join('')}\r\n\t\t${!radius ? '' : `border-radius: ${radius};`}\r\n\t`;\r\n\r\n\treturn styles;\r\n}\r\n\r\nexport const getColorsCSS = (colors) => {\r\n\tconst { color = '#333', bgType = 'solid', bg = '#0000', gradient = 'linear-gradient(135deg, #4527a4, #8344c5)' } = colors || {};\r\n\r\n\tconst styles = `\r\n\t\t${color ? `color: ${color};` : ''}\r\n\t\t${gradient || bg ? `background: ${'gradient' === bgType ? gradient : bg};` : ''}\r\n\t`;\r\n\r\n\treturn styles;\r\n}\r\n\r\nexport const getIconCSS = (icon, isSize = true, isColor = true) => {\r\n\tconst { fontSize = 16, colorType = 'solid', color = 'inherit', gradient = 'linear-gradient(135deg, #4527a4, #8344c5)' } = icon || {};\r\n\r\n\tconst colorCSS = 'gradient' === colorType ?\r\n\t\t`color: transparent; background-image: ${gradient}; -webkit-background-clip: text; background-clip: text;` :\r\n\t\t`color: ${color};`;\r\n\r\n\tconst styles = `\r\n\t\t${!fontSize || !isSize ? '' : `font-size: ${fontSize}px;`}\r\n\t\t${isColor ? colorCSS : ''}\r\n\t`;\r\n\r\n\treturn styles;\r\n}\r\n\r\nexport const getMultiShadowCSS = (value, type = 'box') => {\r\n\tlet styles = '';\r\n\r\n\tvalue?.map((item, index) => {\r\n\t\tconst { hOffset = '0px', vOffset = '0px', blur = '0px', spreed = '0px', color = '#7090b0', isInset = false } = item || {};\r\n\r\n\t\tconst inset = isInset ? 'inset' : '';\r\n\t\tconst offsetBlur = `${hOffset} ${vOffset} ${blur}`;\r\n\t\tconst isComa = index + 1 >= value.length ? '' : ', ';\r\n\r\n\t\tstyles += 'text' === type ? `${offsetBlur} ${color}${isComa}` : `${offsetBlur} ${spreed} ${color} ${inset}${isComa}`;\r\n\t});\r\n\r\n\treturn styles || 'none';\r\n}\r\n\r\nexport const getSeparatorCSS = (separator) => {\r\n\tconst { width = '50%', height = '2px', style = 'solid', color = '#bbb' } = separator || {};\r\n\r\n\tconst styles = `\r\n\t\twidth: ${width};\r\n\t\t${'0px' === height && '0em' === height && '0rem' === height ? '' : `border-top: ${height} ${style} ${color};`}\r\n\t`;\r\n\r\n\treturn styles;\r\n}\r\n\r\nexport const getShadowCSS = (shadow) => {\r\n\tconst { type = 'box', hOffset = '0px', vOffset = '0px', blur = '0px', spreed = '0px', color = '#7090b0', isInset = false } = shadow || {};\r\n\r\n\tconst inset = isInset ? 'inset' : '';\r\n\tconst offsetBlur = `${hOffset} ${vOffset} ${blur}`;\r\n\r\n\tconst styles = 'text' === type ? `${offsetBlur} ${color}` : `${offsetBlur} ${spreed} ${color} ${inset}`;\r\n\r\n\treturn styles || 'none';\r\n}\r\n\r\nexport const getSpaceCSS = (space) => {\r\n\tconst { side = 2, vertical = '0px', horizontal = '0px', top = '0px', right = '0px', bottom = '0px', left = '0px' } = space || {};\r\n\r\n\tconst styles = 2 === side ? `${vertical} ${horizontal}` : `${top} ${right} ${bottom} ${left}`;\r\n\r\n\treturn styles;\r\n}\r\n\r\nexport const getTypoCSS = (selector, typo, isFamily = true) => {\r\n\tconst { fontFamily = 'Default', fontCategory = 'sans-serif', fontVariant = 400, fontWeight = 400, isUploadFont = true, fontSize = { desktop: 15, tablet: 15, mobile: 15 }, fontStyle = 'normal', textTransform = 'none', textDecoration = 'auto', lineHeight = '135%', letterSpace = '0px' } = typo || {};\r\n\r\n\tconst generateCss = (value, cssProperty) => !value ? '' : `${cssProperty}: ${value};`;\r\n\r\n\tconst isEmptyFamily = !isFamily || !fontFamily || 'Default' === fontFamily;\r\n\tconst desktopFontSize = fontSize?.desktop || fontSize;\r\n\tconst tabletFontSize = fontSize?.tablet || desktopFontSize;\r\n\tconst mobileFontSize = fontSize?.mobile || tabletFontSize;\r\n\r\n\tconst styles = `\r\n\t\t${isEmptyFamily ? '' : `font-family: '${fontFamily}', ${fontCategory};`}\r\n\t\t${generateCss(fontWeight, 'font-weight')}\r\n\t\t${`font-size: ${desktopFontSize}px;`}\r\n\t\t${generateCss(fontStyle, 'font-style')}\r\n\t\t${generateCss(textTransform, 'text-transform')}\r\n\t\t${generateCss(textDecoration, 'text-decoration')}\r\n\t\t${generateCss(lineHeight, 'line-height')}\r\n\t\t${generateCss(letterSpace, 'letter-spacing')}\r\n\t`;\r\n\r\n\t// Google font link\r\n\tconst linkQuery = !fontVariant || 400 === fontVariant ? '' : '400i' === fontVariant ? ':ital@1' : fontVariant?.includes('00i') ? `: ital, wght@1, ${fontVariant?.replace('00i', '00')} ` : `: wght@${fontVariant} `;\r\n\r\n\tconst link = isEmptyFamily ? '' : `https://fonts.googleapis.com/css2?family=${fontFamily?.split(' ').join('+')}${linkQuery.replace(/ /g, '')}&display=swap`;\r\n\r\n\treturn {\r\n\t\tgoogleFontLink: !isUploadFont || isEmptyFamily ? '' : `@import url(${link});`,\r\n\t\tstyles: `${selector}{\r\n\t\t\t${styles}\r\n\t\t}\r\n\t\t@media (max-width: 768px) {\r\n\t\t\t${selector}{\r\n\t\t\t\t${`font-size: ${tabletFontSize}px;`}\r\n\t\t\t}\r\n\t\t}\r\n\t\t@media (max-width: 576px) {\r\n\t\t\t${selector}{\r\n\t\t\t\t${`font-size: ${mobileFontSize}px;`}\r\n\t\t\t}\r\n\t\t}`.replace(/\\s+/g, ' ').trim()\r\n\t}\r\n}\r\n\r\nexport const getBoxCSS = (val = {}) => Object.values(val).join(' ');","import { getBackgroundCSS, getBorderCSS, getSpaceCSS, getTypoCSS } from '../../Components/utils/getCSS';\r\n\r\nconst Style = ({ attributes, clientId }) => {\r\n\tconst { textAlign, background, typography, color, padding, border } = attributes;\r\n\r\n\tconst animatedTextSl = `#atbAnimatedText-${clientId} .atbAnimatedText`;\r\n\r\n\treturn <style dangerouslySetInnerHTML={{\r\n\t\t__html: `\r\n\t\t${getTypoCSS('', typography)?.googleFontLink}\r\n\t\t${getTypoCSS(`${animatedTextSl} .content`, typography)?.styles}\r\n\r\n\t\t${animatedTextSl}{\r\n\t\t\ttext-align: ${textAlign};\r\n\t\t\t${getBackgroundCSS(background)}\r\n\t\t\tpadding: ${getSpaceCSS(padding)};\r\n\t\t\t${getBorderCSS(border)}\r\n\t\t}\r\n\t\t${animatedTextSl} .content{\r\n\t\t\tcolor: ${color};\r\n\t\t}\r\n\t\t`.replace(/\\s+/g, ' ')\r\n\t}} />\r\n}\r\nexport default Style;","import { useEffect } from 'react';\r\nimport { render } from 'react-dom';\r\nconst $ = jQuery;\r\n\r\nimport './style.scss';\r\nimport Style from './Style';\r\nimport { textillateConfig } from './utils/config';\r\n\r\n// Animated Text\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n\tconst allAnimatedText = document.querySelectorAll('.wp-block-atb-animated-text');\r\n\tallAnimatedText.forEach(animatedText => {\r\n\t\tconst attributes = JSON.parse(animatedText.dataset.attributes);\r\n\t\tconst { cId } = attributes;\r\n\r\n\t\trender(<>\r\n\t\t\t<Style attributes={attributes} clientId={cId} />\r\n\r\n\t\t\t<AnimatedText attributes={attributes} clientId={cId} />\r\n\t\t</>, animatedText);\r\n\r\n\t\tanimatedText?.removeAttribute('data-attributes');\r\n\t});\r\n});\r\n\r\nconst AnimatedText = ({ attributes, clientId }) => {\r\n\tconst { loop, animateIn, inEffect, inSequence, outEffect, outSequence, content } = attributes;\r\n\r\n\tconst contentSl = `#atbAnimatedText-${clientId} .content`;\r\n\r\n\tuseEffect(() => {\r\n\t\tconst intersectionObserver = new IntersectionObserver((entries) => {\r\n\t\t\tif (entries[0].intersectionRatio <= 0) return;\r\n\r\n\t\t\t$(contentSl).textillate(textillateConfig(attributes));\r\n\r\n\t\t\tintersectionObserver.unobserve(entries[0].target); // Remove if use multiple\r\n\t\t});\r\n\t\tintersectionObserver.observe(document.querySelector(contentSl));\r\n\t}, [loop, animateIn, inEffect, inSequence, outEffect, outSequence]);\r\n\r\n\treturn <div className='atbAnimatedText'>\r\n\t\t<p className='content'>{content}</p>\r\n\t</div>\r\n}","export const textillateConfig = (attributes) => {\r\n\tconst { loop, animateIn, inEffect, inSequence, outEffect, outSequence } = attributes;\r\n\r\n\treturn {\r\n\t\tloop,\r\n\t\tminDisplayTime: 2000, // each text before it is replaced\r\n\t\tinitialDelay: 0,\r\n\t\tautoStart: true,\r\n\t\tinEffects: [], // Custom set of 'in' effects\r\n\t\toutEffects: ['hinge'], // Custom set of 'out' effects\r\n\r\n\t\tin: {\r\n\t\t\teffect: inEffect,\r\n\t\t\tdelayScale: 1.5,\r\n\t\t\tdelay: 50,\r\n\t\t\tsync: 'sync' === inSequence, // sequence of char/word\r\n\t\t\tshuffle: 'shuffle' === inSequence, // (doesn't make sense with sync = true)\r\n\t\t\treverse: 'reverse' === inSequence // (doesn't make sense with sync = true)\r\n\t\t},\r\n\r\n\t\tout: {\r\n\t\t\teffect: outEffect,\r\n\t\t\tdelayScale: 1.5,\r\n\t\t\tdelay: 50,\r\n\t\t\tsync: 'sync' === outSequence,\r\n\t\t\tshuffle: 'shuffle' === outSequence,\r\n\t\t\treverse: 'reverse' === outSequence\r\n\t\t},\r\n\r\n\t\ttype: animateIn // Animate in type (available types: 'char' and 'word')\r\n\t}\r\n};"],"names":["React","ReactDOM","getBackgroundCSS","bg","isSolid","isGradient","isImage","type","color","gradient","image","position","attachment","repeat","size","overlayColor","styles","url","getBorderCSS","border","width","style","side","radius","borderSideCheck","s","bSide","toLowerCase","includes","noWidth","borderCSS","map","join","getTypoCSS","selector","typo","isFamily","fontFamily","fontCategory","fontVariant","fontWeight","isUploadFont","fontSize","desktop","tablet","mobile","fontStyle","textTransform","textDecoration","lineHeight","letterSpace","generateCss","value","cssProperty","isEmptyFamily","desktopFontSize","tabletFontSize","mobileFontSize","linkQuery","replace","link","split","googleFontLink","trim","space","vertical","horizontal","top","right","bottom","left","attributes","clientId","textAlign","background","typography","padding","animatedTextSl","dangerouslySetInnerHTML","__html","$","jQuery","document","addEventListener","querySelectorAll","forEach","animatedText","JSON","parse","dataset","cId","render","AnimatedText","removeAttribute","loop","animateIn","inEffect","inSequence","outEffect","outSequence","content","contentSl","useEffect","intersectionObserver","IntersectionObserver","entries","intersectionRatio","textillate","minDisplayTime","initialDelay","autoStart","inEffects","outEffects","in","effect","delayScale","delay","sync","shuffle","reverse","out","textillateConfig","unobserve","target","observe","querySelector","className"],"sourceRoot":""}