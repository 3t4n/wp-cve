{"mappings":"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","sources":["<anon>","src/js/block-logic.js","node_modules/lodash.assign/index.js"],"sourcesContent":["(() => {\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $cc0e491931e0ba58$exports = {};\n/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */ /** Used as references for various `Number` constants. */ var $cc0e491931e0ba58$var$MAX_SAFE_INTEGER = 9007199254740991;\n/** `Object#toString` result references. */ var $cc0e491931e0ba58$var$argsTag = \"[object Arguments]\", $cc0e491931e0ba58$var$funcTag = \"[object Function]\", $cc0e491931e0ba58$var$genTag = \"[object GeneratorFunction]\";\n/** Used to detect unsigned integer values. */ var $cc0e491931e0ba58$var$reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */ function $cc0e491931e0ba58$var$apply(func, thisArg, args) {\n    switch(args.length){\n        case 0:\n            return func.call(thisArg);\n        case 1:\n            return func.call(thisArg, args[0]);\n        case 2:\n            return func.call(thisArg, args[0], args[1]);\n        case 3:\n            return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n}\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */ function $cc0e491931e0ba58$var$baseTimes(n, iteratee) {\n    var index = -1, result = Array(n);\n    while(++index < n)result[index] = iteratee(index);\n    return result;\n}\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */ function $cc0e491931e0ba58$var$overArg(func, transform) {\n    return function(arg) {\n        return func(transform(arg));\n    };\n}\n/** Used for built-in method references. */ var $cc0e491931e0ba58$var$objectProto = Object.prototype;\n/** Used to check objects for own properties. */ var $cc0e491931e0ba58$var$hasOwnProperty = $cc0e491931e0ba58$var$objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */ var $cc0e491931e0ba58$var$objectToString = $cc0e491931e0ba58$var$objectProto.toString;\n/** Built-in value references. */ var $cc0e491931e0ba58$var$propertyIsEnumerable = $cc0e491931e0ba58$var$objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */ var $cc0e491931e0ba58$var$nativeKeys = $cc0e491931e0ba58$var$overArg(Object.keys, Object), $cc0e491931e0ba58$var$nativeMax = Math.max;\n/** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */ var $cc0e491931e0ba58$var$nonEnumShadows = !$cc0e491931e0ba58$var$propertyIsEnumerable.call({\n    \"valueOf\": 1\n}, \"valueOf\");\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */ function $cc0e491931e0ba58$var$arrayLikeKeys(value, inherited) {\n    // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n    // Safari 9 makes `arguments.length` enumerable in strict mode.\n    var result = $cc0e491931e0ba58$var$isArray(value) || $cc0e491931e0ba58$var$isArguments(value) ? $cc0e491931e0ba58$var$baseTimes(value.length, String) : [];\n    var length = result.length, skipIndexes = !!length;\n    for(var key in value)if ((inherited || $cc0e491931e0ba58$var$hasOwnProperty.call(value, key)) && !(skipIndexes && (key == \"length\" || $cc0e491931e0ba58$var$isIndex(key, length)))) result.push(key);\n    return result;\n}\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */ function $cc0e491931e0ba58$var$assignValue(object, key, value) {\n    var objValue = object[key];\n    if (!($cc0e491931e0ba58$var$hasOwnProperty.call(object, key) && $cc0e491931e0ba58$var$eq(objValue, value)) || value === undefined && !(key in object)) object[key] = value;\n}\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */ function $cc0e491931e0ba58$var$baseKeys(object) {\n    if (!$cc0e491931e0ba58$var$isPrototype(object)) return $cc0e491931e0ba58$var$nativeKeys(object);\n    var result = [];\n    for(var key in Object(object))if ($cc0e491931e0ba58$var$hasOwnProperty.call(object, key) && key != \"constructor\") result.push(key);\n    return result;\n}\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */ function $cc0e491931e0ba58$var$baseRest(func, start) {\n    start = $cc0e491931e0ba58$var$nativeMax(start === undefined ? func.length - 1 : start, 0);\n    return function() {\n        var args = arguments, index = -1, length = $cc0e491931e0ba58$var$nativeMax(args.length - start, 0), array = Array(length);\n        while(++index < length)array[index] = args[start + index];\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while(++index < start)otherArgs[index] = args[index];\n        otherArgs[start] = array;\n        return $cc0e491931e0ba58$var$apply(func, this, otherArgs);\n    };\n}\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */ function $cc0e491931e0ba58$var$copyObject(source, props, object, customizer) {\n    object || (object = {});\n    var index = -1, length = props.length;\n    while(++index < length){\n        var key = props[index];\n        var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined;\n        $cc0e491931e0ba58$var$assignValue(object, key, newValue === undefined ? source[key] : newValue);\n    }\n    return object;\n}\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */ function $cc0e491931e0ba58$var$createAssigner(assigner) {\n    return $cc0e491931e0ba58$var$baseRest(function(object, sources) {\n        var index = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : undefined, guard = length > 2 ? sources[2] : undefined;\n        customizer = assigner.length > 3 && typeof customizer == \"function\" ? (length--, customizer) : undefined;\n        if (guard && $cc0e491931e0ba58$var$isIterateeCall(sources[0], sources[1], guard)) {\n            customizer = length < 3 ? undefined : customizer;\n            length = 1;\n        }\n        object = Object(object);\n        while(++index < length){\n            var source = sources[index];\n            if (source) assigner(object, source, index, customizer);\n        }\n        return object;\n    });\n}\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */ function $cc0e491931e0ba58$var$isIndex(value, length) {\n    length = length == null ? $cc0e491931e0ba58$var$MAX_SAFE_INTEGER : length;\n    return !!length && (typeof value == \"number\" || $cc0e491931e0ba58$var$reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */ function $cc0e491931e0ba58$var$isIterateeCall(value, index, object) {\n    if (!$cc0e491931e0ba58$var$isObject(object)) return false;\n    var type = typeof index;\n    if (type == \"number\" ? $cc0e491931e0ba58$var$isArrayLike(object) && $cc0e491931e0ba58$var$isIndex(index, object.length) : type == \"string\" && index in object) return $cc0e491931e0ba58$var$eq(object[index], value);\n    return false;\n}\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */ function $cc0e491931e0ba58$var$isPrototype(value) {\n    var Ctor = value && value.constructor, proto = typeof Ctor == \"function\" && Ctor.prototype || $cc0e491931e0ba58$var$objectProto;\n    return value === proto;\n}\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */ function $cc0e491931e0ba58$var$eq(value, other) {\n    return value === other || value !== value && other !== other;\n}\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */ function $cc0e491931e0ba58$var$isArguments(value) {\n    // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n    return $cc0e491931e0ba58$var$isArrayLikeObject(value) && $cc0e491931e0ba58$var$hasOwnProperty.call(value, \"callee\") && (!$cc0e491931e0ba58$var$propertyIsEnumerable.call(value, \"callee\") || $cc0e491931e0ba58$var$objectToString.call(value) == $cc0e491931e0ba58$var$argsTag);\n}\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */ var $cc0e491931e0ba58$var$isArray = Array.isArray;\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */ function $cc0e491931e0ba58$var$isArrayLike(value) {\n    return value != null && $cc0e491931e0ba58$var$isLength(value.length) && !$cc0e491931e0ba58$var$isFunction(value);\n}\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */ function $cc0e491931e0ba58$var$isArrayLikeObject(value) {\n    return $cc0e491931e0ba58$var$isObjectLike(value) && $cc0e491931e0ba58$var$isArrayLike(value);\n}\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */ function $cc0e491931e0ba58$var$isFunction(value) {\n    // The use of `Object#toString` avoids issues with the `typeof` operator\n    // in Safari 8-9 which returns 'object' for typed array and other constructors.\n    var tag = $cc0e491931e0ba58$var$isObject(value) ? $cc0e491931e0ba58$var$objectToString.call(value) : \"\";\n    return tag == $cc0e491931e0ba58$var$funcTag || tag == $cc0e491931e0ba58$var$genTag;\n}\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */ function $cc0e491931e0ba58$var$isLength(value) {\n    return typeof value == \"number\" && value > -1 && value % 1 == 0 && value <= $cc0e491931e0ba58$var$MAX_SAFE_INTEGER;\n}\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */ function $cc0e491931e0ba58$var$isObject(value) {\n    var type = typeof value;\n    return !!value && (type == \"object\" || type == \"function\");\n}\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */ function $cc0e491931e0ba58$var$isObjectLike(value) {\n    return !!value && typeof value == \"object\";\n}\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */ var $cc0e491931e0ba58$var$assign = $cc0e491931e0ba58$var$createAssigner(function(object, source) {\n    if ($cc0e491931e0ba58$var$nonEnumShadows || $cc0e491931e0ba58$var$isPrototype(source) || $cc0e491931e0ba58$var$isArrayLike(source)) {\n        $cc0e491931e0ba58$var$copyObject(source, $cc0e491931e0ba58$var$keys(source), object);\n        return;\n    }\n    for(var key in source)if ($cc0e491931e0ba58$var$hasOwnProperty.call(source, key)) $cc0e491931e0ba58$var$assignValue(object, key, source[key]);\n});\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */ function $cc0e491931e0ba58$var$keys(object) {\n    return $cc0e491931e0ba58$var$isArrayLike(object) ? $cc0e491931e0ba58$var$arrayLikeKeys(object) : $cc0e491931e0ba58$var$baseKeys(object);\n}\n$cc0e491931e0ba58$exports = $cc0e491931e0ba58$var$assign;\n\n\nfunction $a4417fd1cd442b5e$var$_extends() {\n    $a4417fd1cd442b5e$var$_extends = Object.assign ? Object.assign.bind() : function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];\n        }\n        return target;\n    };\n    return $a4417fd1cd442b5e$var$_extends.apply(this, arguments);\n}\nconst { createHigherOrderComponent: $a4417fd1cd442b5e$var$createHigherOrderComponent } = wp.compose;\nconst { Fragment: $a4417fd1cd442b5e$var$Fragment } = wp.element;\nconst { InspectorAdvancedControls: $a4417fd1cd442b5e$var$InspectorAdvancedControls } = wp.blockEditor;\nconst { TextareaControl: $a4417fd1cd442b5e$var$TextareaControl } = wp.components;\nconst { addFilter: $a4417fd1cd442b5e$var$addFilter } = wp.hooks;\nconst { __: $a4417fd1cd442b5e$var$__ } = wp.i18n;\n// Blocks that are not compatible at all with visibility controls.\nconst $a4417fd1cd442b5e$var$globallyRestricted = [\n    \"core/freeform\",\n    \"core/legacy-widget\",\n    \"core/widget-area\"\n];\n/**\n * Add layout control attribute to block.\n *\n * @param {object} settings Current block settings.\n * @param {string} name Name of block.\n *\n * @returns {object} Modified block settings.\n */ const $a4417fd1cd442b5e$var$addBlockLogicControlAttribute = (settings, name)=>{\n    // The freeform (Classic Editor) block is incompatible because it does not\n    // support custom attributes.\n    if ($a4417fd1cd442b5e$var$globallyRestricted.includes(settings.name)) return settings;\n    if (typeof settings.attributes !== \"undefined\") {\n        const attributes = {\n            blockLogic: {\n                type: \"string\",\n                default: \"\"\n            }\n        };\n        // Use Lodash's assign to gracefully handle if attributes are undefined\n        settings.attributes = (0, (/*@__PURE__*/$parcel$interopDefault($cc0e491931e0ba58$exports)))(settings.attributes, attributes);\n        settings.supports = (0, (/*@__PURE__*/$parcel$interopDefault($cc0e491931e0ba58$exports)))(settings.supports, {\n            blockLogic: true\n        });\n    }\n    return settings;\n};\n$a4417fd1cd442b5e$var$addFilter(\"blocks.registerBlockType\", \"blockLogic/attribute\", $a4417fd1cd442b5e$var$addBlockLogicControlAttribute);\n/**\n * Create HOC to add layout control to inspector controls of block.\n */ const $a4417fd1cd442b5e$var$withLogicControl = $a4417fd1cd442b5e$var$createHigherOrderComponent((BlockEdit)=>{\n    return (props)=>{\n        const { attributes: attributes, setAttributes: setAttributes, isSelected: isSelected } = props;\n        const { blockLogic: blockLogic } = attributes;\n        if (blockLogic) attributes.blockLogic = blockLogic;\n        return React.createElement($a4417fd1cd442b5e$var$Fragment, null, React.createElement(BlockEdit, props), isSelected && !$a4417fd1cd442b5e$var$globallyRestricted.includes(props.name) && React.createElement($a4417fd1cd442b5e$var$InspectorAdvancedControls, null, React.createElement($a4417fd1cd442b5e$var$TextareaControl, {\n            rows: \"2\",\n            label: $a4417fd1cd442b5e$var$__(\"Block Logic\", \"block-logic\"),\n            help: $a4417fd1cd442b5e$var$__(\"Add valid PHP conditional tags or PHP condition that returns true or false.\", \"block-logic\"),\n            value: blockLogic ? blockLogic : \"\",\n            onChange: (newValue)=>setAttributes({\n                    blockLogic: newValue\n                })\n        })));\n    };\n}, \"withLogicControl\");\n$a4417fd1cd442b5e$var$addFilter(\"editor.BlockEdit\", \"blockLogic/control\", $a4417fd1cd442b5e$var$withLogicControl);\n// add a data attribute to the block wrapper \"editor-block-list__block\"\n// this hook only fires for the BE/Admin View\nconst $a4417fd1cd442b5e$var$addWrapperDataAttribute = $a4417fd1cd442b5e$var$createHigherOrderComponent((BlockListBlock)=>{\n    return (props)=>{\n        const { blockLogic: blockLogic } = props.attributes;\n        const { name: name } = props.block;\n        let newName = name.replace(/\\w+\\//gm, \"\");\n        newName = newName.charAt(0).toUpperCase() + newName.slice(1);\n        let wrapperProps = props.wrapperProps;\n        let customData = {};\n        if (typeof blockLogic !== \"undefined\" && blockLogic) customData = (0, (/*@__PURE__*/$parcel$interopDefault($cc0e491931e0ba58$exports)))(customData, {\n            \"data-spk-block-logic\": $a4417fd1cd442b5e$var$__(\"Block Logic:\", \"block-logic\") + \" \" + blockLogic\n        });\n        wrapperProps = (0, (/*@__PURE__*/$parcel$interopDefault($cc0e491931e0ba58$exports)))(wrapperProps, customData);\n        return React.createElement(BlockListBlock, $a4417fd1cd442b5e$var$_extends({}, props, {\n            wrapperProps: wrapperProps\n        }));\n    };\n}, \"addWrapperDataAttribute\");\n$a4417fd1cd442b5e$var$addFilter(\"editor.BlockListBlock\", \"blockLogic/addWrapperDataAttribute\", $a4417fd1cd442b5e$var$addWrapperDataAttribute);\n\n})();\n//# sourceMappingURL=block-logic.js.map\n","import assign from 'lodash.assign';\n\nconst { createHigherOrderComponent } = wp.compose;\nconst { Fragment } = wp.element;\nconst { InspectorAdvancedControls } = wp.blockEditor;\nconst { TextareaControl } = wp.components;\nconst { addFilter } = wp.hooks;\nconst { __ } = wp.i18n;\n\n\n// Blocks that are not compatible at all with visibility controls.\nconst globallyRestricted = ['core/freeform', 'core/legacy-widget', 'core/widget-area'];\n\n/**\n * Add layout control attribute to block.\n *\n * @param {object} settings Current block settings.\n * @param {string} name Name of block.\n *\n * @returns {object} Modified block settings.\n */\nconst addBlockLogicControlAttribute = (settings, name) => {\n\t// The freeform (Classic Editor) block is incompatible because it does not\n\t// support custom attributes.\n\tif (globallyRestricted.includes(settings.name)) {\n\t\treturn settings;\n\t}\n\n\tif (typeof settings.attributes !== 'undefined') {\n\t\tconst attributes = {\n\t\t\tblockLogic: {\n\t\t\t\ttype: 'string',\n\t\t\t\tdefault: '',\n\t\t\t},\n\t\t}\n\n\t\t// Use Lodash's assign to gracefully handle if attributes are undefined\n\t\tsettings.attributes = assign(settings.attributes, attributes);\n\t\tsettings.supports = assign(settings.supports, {\n\t\t\tblockLogic: true,\n\t\t});\n\t}\n\n\treturn settings;\n};\n\naddFilter('blocks.registerBlockType', 'blockLogic/attribute', addBlockLogicControlAttribute);\n\n/**\n * Create HOC to add layout control to inspector controls of block.\n */\nconst withLogicControl = createHigherOrderComponent((BlockEdit) => {\n\treturn (props) => {\n\t\tconst { attributes, setAttributes, isSelected } = props;\n\t\tconst { blockLogic } = attributes;\n\n\t\tif (blockLogic) {\n\t\t\tattributes.blockLogic = blockLogic;\n\t\t}\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<BlockEdit {...props} />\n\t\t\t\t{isSelected && (!globallyRestricted.includes(props.name)) &&\n\t\t\t\t\t<InspectorAdvancedControls>\n\t\t\t\t\t\t<TextareaControl\n\t\t\t\t\t\t\trows=\"2\"\n\t\t\t\t\t\t\tlabel={__('Block Logic', 'block-logic')}\n\t\t\t\t\t\t\thelp={__('Add valid PHP conditional tags or PHP condition that returns true or false.', 'block-logic')}\n\t\t\t\t\t\t\tvalue={blockLogic ? blockLogic : ''}\n\t\t\t\t\t\t\tonChange={(newValue) =>\n\t\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\t\tblockLogic: newValue,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</InspectorAdvancedControls>\n\t\t\t\t}\n\t\t\t</Fragment>\n\t\t);\n\t};\n}, 'withLogicControl');\n\naddFilter('editor.BlockEdit', 'blockLogic/control', withLogicControl);\n\n// add a data attribute to the block wrapper \"editor-block-list__block\"\n// this hook only fires for the BE/Admin View\nconst addWrapperDataAttribute = createHigherOrderComponent((BlockListBlock) => {\n\treturn props => {\n\t\tconst {\n\t\t\tblockLogic,\n\t\t} = props.attributes;\n\n\t\tconst {\n\t\t\tname,\n\t\t} = props.block;\n\n\t\tlet newName = name.replace(/\\w+\\//gm, '');\n\t\tnewName = newName.charAt(0).toUpperCase() + newName.slice(1);\n\n\t\tlet wrapperProps = props.wrapperProps;\n\t\tlet customData = {};\n\n\t\tif (typeof blockLogic !== 'undefined' && blockLogic) {\n\t\t\tcustomData = assign(customData, { 'data-spk-block-logic': __('Block Logic:', 'block-logic') + ' ' + blockLogic });\n\t\t}\n\n\t\twrapperProps = assign(wrapperProps, customData);\n\n\t\treturn <BlockListBlock {...props} wrapperProps={wrapperProps}/>;\n\t};\n}, 'addWrapperDataAttribute');\n\naddFilter(\n\t'editor.BlockListBlock',\n\t'blockLogic/addWrapperDataAttribute',\n\taddWrapperDataAttribute,\n);\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object),\n    nativeMax = Math.max;\n\n/** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */\nvar nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = array;\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n  }\n  return object;\n}\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = assign;\n"],"names":["$parcel$interopDefault","a","__esModule","default","func","transform","assigner","start","$cc0e491931e0ba58$exports","$cc0e491931e0ba58$var$reIsUint","$cc0e491931e0ba58$var$objectProto","Object","prototype","$cc0e491931e0ba58$var$hasOwnProperty","hasOwnProperty","$cc0e491931e0ba58$var$objectToString","toString","$cc0e491931e0ba58$var$propertyIsEnumerable","propertyIsEnumerable","$cc0e491931e0ba58$var$nativeKeys","keys","arg","$cc0e491931e0ba58$var$nativeMax","Math","max","$cc0e491931e0ba58$var$nonEnumShadows","call","$cc0e491931e0ba58$var$assignValue","object","key","value","objValue","$cc0e491931e0ba58$var$eq","undefined","$cc0e491931e0ba58$var$isIndex","length","test","$cc0e491931e0ba58$var$isPrototype","Ctor","constructor","other","$cc0e491931e0ba58$var$isArray","Array","isArray","$cc0e491931e0ba58$var$isArrayLike","tag","$cc0e491931e0ba58$var$isObject","type","$a4417fd1cd442b5e$var$_extends","assign","bind","target","i","arguments","source","apply","$cc0e491931e0ba58$var$copyObject","props","customizer","index","newValue","$cc0e491931e0ba58$var$arrayLikeKeys","inherited","result","$cc0e491931e0ba58$var$isArrayLikeObject","$cc0e491931e0ba58$var$baseTimes","n","iteratee","String","skipIndexes","push","$cc0e491931e0ba58$var$baseKeys","sources","guard","$cc0e491931e0ba58$var$isIterateeCall","args","array","otherArgs","$cc0e491931e0ba58$var$apply","thisArg","createHigherOrderComponent","$a4417fd1cd442b5e$var$createHigherOrderComponent","wp","compose","Fragment","$a4417fd1cd442b5e$var$Fragment","element","InspectorAdvancedControls","$a4417fd1cd442b5e$var$InspectorAdvancedControls","blockEditor","TextareaControl","$a4417fd1cd442b5e$var$TextareaControl","components","addFilter","$a4417fd1cd442b5e$var$addFilter","hooks","__","$a4417fd1cd442b5e$var$__","i18n","$a4417fd1cd442b5e$var$globallyRestricted","settings","name","includes","attributes","blockLogic","supports","$a4417fd1cd442b5e$var$withLogicControl","BlockEdit","setAttributes","isSelected","React","createElement","rows","label","help","onChange","$a4417fd1cd442b5e$var$addWrapperDataAttribute","BlockListBlock","block","newName","replace","charAt","toUpperCase","slice","wrapperProps","customData","globallyRestricted","addBlockLogicControlAttribute","withLogicControl","addWrapperDataAttribute","_extends"],"version":3,"file":"block-logic.js.map"}