+function($){"use strict";var VSPButton=function(element,options){this.$element=$(element),this.options=$.extend({},VSPButton.DEFAULTS,options),this.isLoading=!1};VSPButton.VERSION="3.3.7",VSPButton.DEFAULTS={loadingText:"loading..."},VSPButton.prototype.setState=function(state){var d="disabled",$el=this.$element,val=$el.is("input")?"val":"html",data=$el.data();state+="Text",null==data.resetText&&$el.data("resetText",$el[val]()),setTimeout($.proxy(function(){$el[val](null==data[state]?this.options[state]:data[state]),"loadingText"==state?(this.isLoading=!0,$el.addClass(d).attr(d,d).prop(d,!0)):this.isLoading&&(this.isLoading=!1,$el.removeClass(d).removeAttr(d).prop(d,!1))},this),0)},VSPButton.prototype.toggle=function(){var changed=!0,$parent=this.$element.closest('[data-toggle="buttons"]');if($parent.length){var $input=this.$element.find("input");"radio"==$input.prop("type")?($input.prop("checked")&&(changed=!1),$parent.find(".active").removeClass("active"),this.$element.addClass("active")):"checkbox"==$input.prop("type")&&($input.prop("checked")!==this.$element.hasClass("active")&&(changed=!1),this.$element.toggleClass("active")),$input.prop("checked",this.$element.hasClass("active")),changed&&$input.trigger("change")}else this.$element.attr("aria-pressed",!this.$element.hasClass("active")),this.$element.toggleClass("active")};var old=$.fn.vspbutton;$.fn.vspbutton=function(option){return this.each(function(){var $this=$(this),data=$this.data("vsp.button"),options="object"==typeof option&&option;data||$this.data("vsp.button",data=new VSPButton(this,options)),"toggle"==option?data.toggle():option&&data.setState(option)})},$.fn.vspbutton.Constructor=VSPButton,$.fn.vspbutton.noConflict=function(){return $.fn.vspbutton=old,this}}(jQuery);