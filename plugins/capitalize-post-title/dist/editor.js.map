{"mappings":"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","sources":["node_modules/@swc/helpers/src/_define_property.mjs","node_modules/@swc/helpers/src/_object_spread.mjs","node_modules/@swc/helpers/src/_array_with_holes.mjs","node_modules/@swc/helpers/src/_iterable_to_array.mjs","node_modules/@swc/helpers/src/_non_iterable_rest.mjs","node_modules/@swc/helpers/src/_array_like_to_array.mjs","node_modules/@swc/helpers/src/_unsupported_iterable_to_array.mjs","node_modules/@swc/helpers/src/_sliced_to_array.mjs","node_modules/ap-style-title-case/index.js","src/editor.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n","import defineProperty from './_define_property.mjs';\n\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\n","import _arrayLikeToArray from './_array_like_to_array.mjs';\n\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))\n    return _arrayLikeToArray(o, minLen);\n}\n","import arrayWithHoles from './_array_with_holes.mjs';\nimport iterableToArrayLimit from './_iterable_to_array.mjs';\nimport nonIterableRest from './_non_iterable_rest.mjs';\nimport unsupportedIterableToArray from './_unsupported_iterable_to_array.mjs';\n\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [keepSpaces=false]\n *   Keep superfluous whitespace.\n *   Whitespace is turned into a space by default.\n * @property {Array<string>} [stopwords]\n *   List of stopwords.\n *   When a lowercased word is included in this list, it will be used as\n *   lowercase.\n *   Otherwise words are capitalized.\n */\n\nconst stopwords = 'a an and at but by for in nor of on or so the to up yet'\nconst defaults = stopwords.split(' ')\n\n/**\n * Convert a value to AP/APA title case.\n *\n * @param {string} [value]\n *   Short text of unknown casing.\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Title-cased version of `value`.\n */\nexport function apStyleTitleCase(value, options) {\n  const configuration = options || {}\n\n  if (!value) return ''\n\n  const stop = configuration.stopwords || defaults\n  const keep = configuration.keepSpaces\n  const splitter = /(\\s+|[-‑–—,:;!?()])/\n\n  return value\n    .split(splitter)\n    .map((word, index, all) => {\n      // The splitter:\n      if (index % 2) {\n        if (/\\s+/.test(word)) return keep ? word : ' '\n        return word\n      }\n\n      const lower = word.toLowerCase()\n\n      if (index !== 0 && index !== all.length - 1 && stop.includes(lower)) {\n        return lower\n      }\n\n      return capitalize(word)\n    })\n    .join('')\n}\n\n/**\n *\n * @param {string} value\n * @returns {string}\n */\nfunction capitalize(value) {\n  return value.charAt(0).toUpperCase() + value.slice(1)\n}\n","import { apStyleTitleCase as _capitalize } from 'ap-style-title-case'\nconst { registerPlugin } = wp.plugins\nconst { select, dispatch, useSelect } = wp.data\nconst { useEffect, useCallback, useRef, useState, createElement, Fragment } = wp.element\nconst { addFilter } = wp.hooks\nconst { createHigherOrderComponent } = wp.compose\n\nconst capitalize = value => {\n    return _capitalize( value.replace( /wordpress/gi, 'WordPress' ) )\n}\n\nconst useDeviceType = () => {\n\tconst { deviceType } = useSelect( select => {\n\t\tlet deviceType = 'Desktop'\n\n\t\t// In some editors, there is no edit-post / preview device type. If that\n\t\t// happens, we just set our own internal device type.\n\t\tdeviceType = select( 'core/edit-site' )?.__experimentalGetPreviewDeviceType() ||\n\t\t\tselect( 'core/edit-post' )?.__experimentalGetPreviewDeviceType() ||\n\t\t\tselect( 'stackable/device-type' ).getDeviceType()\n\n\t\treturn { deviceType }\n\t}, [] )\n\n\treturn deviceType || ''\n}\n\nconst CapitalizeTitle = () => {\n    const [ , setPrevTitle ] = useState( select( 'core/editor' ).getEditedPostAttribute( 'title' ) )\n    const [ forceUpdate, setForceUpdate ] = useState( 0 )\n    const deviceType = useDeviceType()\n\n    useEffect( () => {\n        // When the device type changes, we need to re-attach the event listener.\n        const titleEl = document.querySelector( '.editor-post-title__input' ) || \n            // The title element is in an iframe in the block editor when in tablet or mobile.\n            document.querySelector( 'iframe[name=\"editor-canvas\"]' )?.contentDocument?.querySelector( '.editor-post-title__input' )\n\n        if ( ! titleEl ) {\n            // No title element found, maybe tablet/mobile is still resizing, retry later.\n            setTimeout( () => {\n                setForceUpdate( n => n < 100 ? n + 1 : n ) // Don't try too much.\n            }, 250 )\n            return\n        }\n\n        const updateTitleFunc = () => {\n            setPrevTitle( prevTitle => {\n                const title = select( 'core/editor' ).getEditedPostAttribute( 'title' )\n\n                if ( prevTitle.toLowerCase() !== title.toLowerCase() ) {\n                    const newTitle = capitalize( title )\n                    dispatch( 'core/editor' ).editPost( { title: newTitle } );\n                    return newTitle\n                }\n                \n                return prevTitle\n            } )\n        }\n\n        titleEl.addEventListener( 'blur', updateTitleFunc )\n        return () => titleEl.removeEventListener( 'blur', updateTitleFunc )\n    }, [ deviceType, forceUpdate ] )\n\n    return null\n}\n\nregisterPlugin( 'capitalize-title', { render: CapitalizeTitle } )\n\nconst capitalizeHtml = htmlContent => {\n    const el = document.createElement( 'div' )\n    el.innerHTML = htmlContent\n\n    // Capitalize the text.\n    const textNodes = Array.from( el.childNodes ).filter( node => node.nodeType === Node.TEXT_NODE )\n    textNodes.forEach( node => {\n        node.textContent = capitalize( node.textContent )\n    } )\n\n    // Capitalize all the inner text nodes.\n    el.querySelectorAll( '*' ).forEach( node => {\n        // Loop through all text nodes\n        node.childNodes.forEach( childNode => {\n            if ( childNode.nodeType === Node.TEXT_NODE ) {\n                childNode.textContent = capitalize( childNode.textContent )\n            }\n        } )\n    } )\n\n    return el.innerHTML\n}\n\nconst withCapitalizeHeadings = createHigherOrderComponent( \n    BlockEdit => props => {\n        const { name, isSelected, attributes, setAttributes } = props\n        const prevText = useRef( '' )\n\n        // Sets initial value of the prevText ref when we first load the block.\n        useEffect( () => {\n            if ( prevText.current === '' ) {\n                if ( name === 'core/heading' && attributes.content ) {\n                    prevText.current = attributes.content\n                } else if ( name === 'stackable/heading' && attributes.text ) {\n                    prevText.current = attributes.text\n                }\n            }\n        }, [] )\n\n        useEffect( () => {\n            // On select, remember the current text.\n            if ( isSelected ) {\n                if ( name === 'core/heading' ) {\n                    prevText.current = attributes.content\n                } else if ( name === 'stackable/heading' ) {\n                    prevText.current = attributes.text\n                }\n\n            // On blur, if the characters of the text has changed, capitalize it.\n            } else {\n                if ( name === 'core/heading' ) {\n                    if ( prevText.current.toLowerCase() !== attributes.content.toLowerCase() ) {\n                        const newContent = capitalizeHtml( attributes.content )\n                        setAttributes( { content: newContent } )\n                    }\n                } else if ( name === 'stackable/heading' ) {\n                    if ( prevText.current.toLowerCase() !== attributes.text.toLowerCase() ) {\n                        const newContent = capitalizeHtml( attributes.text )\n                        setAttributes( { text: newContent } )\n                    }\n                }\n            }\n        }, [ isSelected ] ) // Only do this when the block is selected or unselected.\n\n        return createElement( BlockEdit, { ...props } )\n    },\n    'withInspectorControl'\n)\n\naddFilter(\n    'editor.BlockEdit',\n    'capitzalize-headings',\n    withCapitalizeHeadings\n)"],"names":["$b6b4a48919876f73$export$2e2bcd8739ae039","obj","key","value","Object","defineProperty","enumerable","configurable","writable","$cce0e59755c87605$export$2e2bcd8739ae039","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","$8ed9e233ee60a6cb$export$2e2bcd8739ae039","arr","Array","isArray","$501a3fd690a7e10f$export$2e2bcd8739ae039","iter","Symbol","iterator","from","$13dbf1a98e58e3a7$export$2e2bcd8739ae039","TypeError","$84548100180366c6$export$2e2bcd8739ae039","len","arr2","$c8a06c5f6209a8a3$export$2e2bcd8739ae039","o","minLen","n","prototype","toString","call","slice","constructor","name","test","$2aa3a91d115a17c2$export$2e2bcd8739ae039","$8af9d727b4c09fd1$var$defaults","split","$8af9d727b4c09fd1$export$d43fa36570dad8c","options","configuration","stop","stopwords","keep","keepSpaces","map","word","index","all","lower","toLowerCase","includes","charAt","toUpperCase","$8af9d727b4c09fd1$var$capitalize","join","$7c7d5b08462333a9$var$registerPlugin","wp","plugins","registerPlugin","$7c7d5b08462333a9$var$_wp_data","data","$7c7d5b08462333a9$var$select","select","$7c7d5b08462333a9$var$dispatch","dispatch","$7c7d5b08462333a9$var$useSelect","useSelect","$7c7d5b08462333a9$var$_wp_element","element","$7c7d5b08462333a9$var$useEffect","useEffect","$7c7d5b08462333a9$var$useRef","useCallback","useRef","$7c7d5b08462333a9$var$useState","useState","$7c7d5b08462333a9$var$createElement","createElement","$7c7d5b08462333a9$var$addFilter","Fragment","hooks","addFilter","$7c7d5b08462333a9$var$createHigherOrderComponent","compose","createHigherOrderComponent","$7c7d5b08462333a9$var$capitalize","replace","render","setPrevTitle","getEditedPostAttribute","_useState1","forceUpdate","setForceUpdate","deviceType","_select","_select1","__experimentalGetPreviewDeviceType","getDeviceType","_document_querySelector","_document_querySelector_contentDocument","titleEl","document","querySelector","contentDocument","updateTitleFunc","prevTitle","title","newTitle","editPost","addEventListener","removeEventListener","setTimeout","$7c7d5b08462333a9$var$capitalizeHtml","htmlContent","el","innerHTML","childNodes","node","nodeType","Node","TEXT_NODE","textContent","querySelectorAll","childNode","BlockEdit","props","isSelected","attributes","setAttributes","prevText","current","content","text","newContent","newContent1"],"version":3,"file":"editor.js.map"}