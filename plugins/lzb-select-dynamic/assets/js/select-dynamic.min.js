!function(){"use strict";const{withSelect:e}=wp.data,{Component:t}=wp.element,{__:a}=wp.i18n,{withInstanceId:o,compose:n}=wp.compose,{SelectControl:l}=wp.components,p=["pages","media","blocks","menu-items","navigation","templates","template-parts","lazyblocks","lazyblocks_templates"];var y=n([o,e(((e,t)=>{let a="",o="",n={per_page:-1};if("post"===t.entityType?(a="postType",o=t.postType||"post"):"page"===t.entityType?(a="postType",o="page"):"taxonomy"===t.entityType&&(a="taxonomy",o=t.taxonomyType||"category"),("page"===t.entityType||"taxonomy"===t.entityType&&"tag"!==t.taxonomyType)&&t.parentEntity&&(n.parent=t.parentEntity),"post-type"===t.entityType)return{items:e("core").getPostTypes({per_page:-1})};if("taxonomy-type"===t.entityType)return{items:e("core").getTaxonomies()};if("post"===t.entityType&&""!==t.conditional&&Array.isArray(t.postType)){let o=[];return t.postType.forEach((t=>{const l=[a,t,n];if(!e("core/data").isResolving("core","getEntityRecords",l)){const l=e("core").getEntityRecords(a,t,n);null!==l&&(o=[...o,...l])}})),{items:o}}return{items:e("core").getEntityRecords(a,o,n)}}))])(class extends t{render(){const{label:e,value:t,help:o,entityType:n,multiple:y,onChange:i=(()=>{}),items:s}=this.props;let c=[];if(s)if(0===s.length)c.push({value:"",label:a("No items found","lzb-select-dynamic")});else{for(const e of s)"post"===n||"page"===n?c.push({label:e.title.rendered,value:e.id}):"taxonomy"===n?c.push({label:e.name,value:e.id}):"post-type"===n?-1===p.indexOf(e.rest_base)&&c.push({label:e.labels.singular_name,value:e.slug}):"taxonomy-type"===n&&c.push({label:e.labels.singular_name,value:e.slug});c=[{value:"",label:a("Please Select","lzb-select-dynamic")},...c]}else c.push({value:"",label:a("Loading..","lzb-select-dynamic")});return React.createElement("div",{className:"ww-lzb-control_select_dynamic"},React.createElement(l,{label:e,options:c,help:o,value:t,multiple:y,className:"lzb-gutenberg-select",onChange:e=>{i(e)}}))}});const{addFilter:i}=wp.hooks,{__:s}=wp.i18n,{Fragment:c}=wp.element,{PanelBody:m,BaseControl:r,RadioControl:d,CheckboxControl:u,TextControl:_}=wp.components;i("lzb.editor.control.select_dynamic.render","lzb.editor",((e,t,a)=>React.createElement(y,{label:t.data.label,help:t.data.help,entityType:t.data.entity_type,postType:""!==t.data.conditional?a.attributes[t.data.conditional]:t.data.post_type,taxonomyType:t.data.taxonomy_type,parentEntity:t.data.parent_entity,multiple:"true"===t.data.multiple,conditional:t.data.conditional,value:t.getValue(),onChange:t.onChange}))),i("lzb.constructor.control.select_dynamic.settings","lzb.constructor",((e,t)=>{const{updateData:a,data:o}=t;return React.createElement(c,null,React.createElement(m,null,React.createElement(r,{label:s("Entity Type","lzb-select-dynamic"),help:s("Allows you to select the entity type to render as select options","lzb-select-dynamic")},React.createElement(d,{options:[{label:s("Post Type","lzb-select-dynamic"),value:"post-type"},{label:s("Taxonomy Type","lzb-select-dynamic"),value:"taxonomy-type"},{label:s("Post","lzb-select-dynamic"),value:"post"},{label:s("Page","lzb-select-dynamic"),value:"page"},{label:s("Taxonomy","lzb-select-dynamic"),value:"taxonomy"}],selected:o.entity_type||"",onChange:e=>a({entity_type:e})})),t.data.entity_type&&"post"===t.data.entity_type&&React.createElement(r,{label:s("Post type","lzb-select-dynamic"),help:s('Allows you to select a custom post type. Defaults to "Post" if nothing is selected',"lzb-select-dynamic")},React.createElement(y,{entityType:"post-type",value:t.data.post_type,onChange:e=>a({post_type:e})})),t.data.entity_type&&"taxonomy"===t.data.entity_type&&React.createElement(r,{label:s("Taxonomy type","lzb-select-dynamic"),help:s('Allows you to select a taxonomy type. Defaults to "Category" if nothing is selected',"lzb-select-dynamic")},React.createElement(y,{entityType:"taxonomy-type",value:t.data.taxonomy_type,onChange:e=>a({taxonomy_type:e})})),(t.data.entity_type&&"page"===t.data.entity_type||t.data.taxonomy_type&&"tags"!==t.data.taxonomy_type)&&React.createElement(r,{label:s("Parent entity","lzb-select-dynamic"),help:s("Allows you to restrict the select options to a certain parent entity, otherwise leave blank","lzb-select-dynamic")},React.createElement(y,{entityType:t.data.entity_type,postType:t.data.post_type,taxonomyType:t.data.taxonomy_type,value:t.data.parent_entity,onChange:e=>a({parent_entity:e})}))),t.data.entity_type&&("post-type"===t.data.entity_type||"post"===t.data.entity_type||"page"===t.data.entity_type||"taxonomy"===t.data.entity_type)&&React.createElement(m,null,React.createElement(r,{label:s("Multiple","lzb-select-dynamic"),help:s("Allows you to select multiple values","lzb-select-dynamic")},React.createElement(u,{label:s("Yes","lzb-select-dynamic"),checked:"true"===o.multiple,onChange:e=>a({multiple:e?"true":"false"})}))),t.data.entity_type&&"post"===t.data.entity_type&&React.createElement(m,null,React.createElement(_,{label:s("Conditional","lzb-select-dynamic"),help:s('Allows you to select Posts based on another control value. Please enter the "Name" of the field, where the Post types should be taken from.',"lzb-select-dynamic"),value:o.conditional,onChange:e=>a({conditional:e})})))}))}();