{"mappings":"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","sources":["src/presets.js"],"sourcesContent":["let excludeSelectors = [];\r\nexcludeSelectors = [\"#adminmenuwrap\", \"#adminmenuwrap *\"];\r\nlet applyBgOverlay = false;\r\nif (DarklupJs.apply_bg_overlay == \"yes\") {\r\n  applyBgOverlay = true;\r\n}\r\n// console.log(\"free dynamic presets 5\");\r\n// console.log(\"free dynamic presets 2\");\r\nclass Darkluplite {\r\n  constructor() {\r\n    this.setRequiredVariables();\r\n    if (this.isGutenburg) {\r\n      this.htmlElement.style.display = \"block\";\r\n      return;\r\n    }\r\n    this.getAllElements();\r\n    this.applyDarklupDarkModeToAll();\r\n\r\n    if (this.isWpAdmin) {\r\n      this.dashboardDarkMode();\r\n    } else {\r\n      this.frontEndDarkMode();\r\n    }\r\n    this.htmlElement.style.display = \"block\";\r\n  }\r\n  dashboardDarkMode() {\r\n    this.dashboardWindowOnLoad();\r\n    this.dashboardDarkModeSwitchEvent();\r\n    this.windowOnLoaded();\r\n  }\r\n  frontEndDarkMode() {\r\n    this.prevWindowOnLoad();\r\n    this.prevDarkModeSwitchEvent();\r\n    this.prevHandleKeyShortcut();\r\n    this.windowOnLoaded();\r\n    this.prevHandleOSDark();\r\n  }\r\n  setRequiredVariables() {\r\n    this.allElements = [];\r\n    this.allAnchors = [];\r\n    this.allButtons = [];\r\n    this.allInputs = [];\r\n    this.allImages = [];\r\n    this.allInlineSvgs = [];\r\n    this.elementsWithText = [];\r\n    this.elementsWithRealBgColor = [];\r\n    this.elementsWithRealBorder = [];\r\n    this.elementsWithBgImage = [];\r\n    this.elementsWithAlphaBg = [];\r\n    this.elementsWithBoxShadow = [];\r\n    this.isWpAdmin = false;\r\n    this.isGutenburg = false;\r\n    this.maxArea = 0;\r\n    this.htmlElement = document.querySelector(\"html\");\r\n    this.switcherCheckbox = document.querySelector(\".switch-trigger\");\r\n    this.switcherCheckboxes = document.querySelectorAll(\".switch-trigger\");\r\n    this.switchTrigger = \".switch-trigger\";\r\n    this.switchWrapper = document.querySelector(\".darkluplite-mode-switcher\");\r\n    this.switchWrapper2 = document.querySelector(\"#wp-admin-bar-darkluplite-admin-switch\");\r\n    this.switchWrapper3 = document.querySelector(\".darkluplite-menu-switch\");\r\n    this.switchWrappers = [this.switchWrapper, this.switchWrapper2, this.switchWrapper3];\r\n    this.floatingSwitch = this.switchWrapper?.querySelector(\".switch-trigger\");\r\n    this.adminSwitch = this.switchWrapper2?.querySelector(\".switch-trigger\");\r\n    this.menuSwitch = this.switchWrapper3?.querySelector(\".switch-trigger\");\r\n    this.switches = [this.floatingSwitch, this.adminSwitch, this.menuSwitch];\r\n    this.darkEnabledClass = \"darkluplite-dark-mode-enabled\";\r\n    this.adminDarkEnabledClass = \"darkluplite-admin-dark-mode-enabled\";\r\n\r\n    // Set Body Width And Primary BG\r\n    let bodyElement = document.querySelector(\"body\");\r\n    if (bodyElement.classList.contains(\"wp-admin\")) {\r\n      this.isWpAdmin = true;\r\n    }\r\n    if (bodyElement.classList.contains(\"block-editor-page\")) {\r\n      this.isGutenburg = true;\r\n    }\r\n    if (bodyElement.classList.contains(\"site-editor-php\")) {\r\n      this.isGutenburg = true;\r\n    }\r\n    this.bodyWidth = this.getElementWidth(bodyElement);\r\n    let bodyBg = this.hasBgColor(bodyElement);\r\n    let htmlBg = this.hasBgColor(this.htmlElement);\r\n    if (bodyBg) {\r\n      this.primaryBg = bodyBg;\r\n    } else if (htmlBg) {\r\n      this.primaryBg = htmlBg;\r\n    } else {\r\n      this.primaryBg = \"rgb(255, 255, 255)\";\r\n      bodyElement.classList.add(\"darkluplite--bg\");\r\n    }\r\n  }\r\n  getAllElements() {\r\n    let excludes, selectAll;\r\n\r\n    excludes = [\r\n      \"head\",\r\n      \"meta\",\r\n      \"link\",\r\n      \"title\",\r\n      \"style\",\r\n      \"script\",\r\n      \".darkluplite-mode-switcher\",\r\n      \".darkluplite-mode-switcher *\",\r\n      \".darkluplite-menu-switch\",\r\n      \".darkluplite-menu-switch *\",\r\n      \".darkluplite-switch-preview-inner\",\r\n      \".darkluplite-switch-preview-inner *\",\r\n      \".darkluplite-admin-settings-area .on-off-toggle\",\r\n      \".darkluplite-admin-settings-area .on-off-toggle *\",\r\n      \".wp-core-ui .darkluplite-section-title .button\",\r\n      \".darklup-pro-ribbon\",\r\n      \".wpc-color-picker--input\",\r\n      \".wpc-color-picker--input *\",\r\n      \".darklup-single-popup-wrapper .darklup-single-popup\",\r\n      \"iframe\",\r\n      // \".darkluplite-settings-area\",\r\n      // '.darkluplite-dark-ignore',\r\n      // \"a\",\r\n      // \"a *\",\r\n      // \"input\",\r\n      // \"button\",\r\n      // \"button *\",\r\n      // \"select\",\r\n      // \"textarea\",\r\n      // \"svg\",\r\n      // \"img\",\r\n      // \"i\",\r\n      \"video\",\r\n      \"mark\",\r\n      \"code\",\r\n      \"pre\",\r\n      \"ins\",\r\n      \"option\",\r\n      \"progress\",\r\n      \"iframe\",\r\n      \".mejs-iframe-overlay\",\r\n      \"svg *\",\r\n      \"path\",\r\n      \"canvas\",\r\n      // '.elementor-element-overlay',\r\n      // '.elementor-background-overlay',\r\n      \"#wpadminbar\",\r\n      \"#wpadminbar *\",\r\n      \"#wpadminbar a\",\r\n      \"noscript\",\r\n    ];\r\n\r\n    if (excludeSelectors.length > 0) {\r\n      excludes = [...excludeSelectors, ...excludes];\r\n    }\r\n\r\n    selectAll = this.excludeAndSelect(excludes, \"html, html *\");\r\n    this.allElements = document.querySelectorAll(selectAll);\r\n  }\r\n\r\n  dashboardWindowOnLoad() {\r\n    let adminDarkMode = this.isAdminDarkModeEnabled();\r\n    if (adminDarkMode) {\r\n      this.enableAdminDarkMode();\r\n    }\r\n    this.elementsWithRealBgColor.forEach((element) => {\r\n      this.applyBgColor(element);\r\n    });\r\n  }\r\n  prevWindowOnLoad() {\r\n    if (this.isActiveDarkMode()) {\r\n      this.enableDarkMode();\r\n    }\r\n    this.elementsWithRealBgColor.forEach((element) => {\r\n      this.applyBgColor(element);\r\n    });\r\n  }\r\n  isActiveDarkMode() {\r\n    let darkModeActivity = false;\r\n    let lightOnDefaultDarkMode = localStorage.getItem(\"lightOnDefaultDarkMode\");\r\n    let lightOnOSDarkChecked = localStorage.getItem(\"lightOnOSDarkChecked\");\r\n    let lightOnTimeBasedDarkMode = localStorage.getItem(\"lightOnTimeBasedDarkMode\");\r\n    let defaultDarkMode = false;\r\n    if (typeof isDefaultDarkModeEnabled !== \"undefined\") {\r\n      defaultDarkMode = isDefaultDarkModeEnabled;\r\n    }\r\n    let OSDarkMode = false;\r\n    if (typeof isOSDarkModeEnabled !== \"undefined\") {\r\n      OSDarkMode = isOSDarkModeEnabled;\r\n    }\r\n\r\n    let darkMode = this.isDarkModeEnabled();\r\n    if (darkMode) {\r\n      darkModeActivity = true;\r\n    } else if (defaultDarkMode && !lightOnDefaultDarkMode) {\r\n      darkModeActivity = true;\r\n    } else if (OSDarkMode && window.matchMedia && window.matchMedia(\"(prefers-color-scheme: dark)\").matches && !lightOnOSDarkChecked) {\r\n      darkModeActivity = true;\r\n    } else if (this.isActiveTimeBasedDarkMode() && !lightOnTimeBasedDarkMode) {\r\n      darkModeActivity = true;\r\n    }\r\n    return darkModeActivity;\r\n  }\r\n  getUserTime() {\r\n    let now = new Date();\r\n    let hours = now.getHours();\r\n    let minutes = now.getMinutes();\r\n    if (hours < 10) hours = \"0\" + hours;\r\n    if (minutes < 10) minutes = \"0\" + minutes;\r\n    let time = hours + \":\" + minutes;\r\n    return time;\r\n    // console.log(time);\r\n  }\r\n  isActiveTimeBasedDarkMode() {\r\n    let darkModeActivity = false;\r\n    if (frontendObject.time_based_mode_active == \"yes\") {\r\n      let startTime = this.createDateObject(frontendObject.time_based_mode_start_time);\r\n      let endTime = this.createDateObject(frontendObject.time_based_mode_end_time);\r\n      let currentTime = new Date();\r\n      // console.log(currentTime, startTime, endTime);\r\n      currentTime = Date.parse(currentTime) / 1000;\r\n      startTime = Date.parse(startTime) / 1000;\r\n      endTime = Date.parse(endTime) / 1000;\r\n\r\n      if (startTime > endTime) {\r\n        if (currentTime <= endTime) {\r\n          darkModeActivity = true;\r\n        }\r\n        endTime += 24 * 3600;\r\n      }\r\n\r\n      if (currentTime >= startTime && currentTime <= endTime) {\r\n        darkModeActivity = true;\r\n      }\r\n\r\n      // console.log(currentTime, startTime, endTime, darkModeActivity);\r\n    }\r\n    return darkModeActivity;\r\n  }\r\n  createDateObject(timeString) {\r\n    // Split the time string into hour and minute components\r\n    var parts = timeString.split(\":\");\r\n    var hours = parseInt(parts[0]);\r\n    var minutes = parseInt(parts[1]);\r\n\r\n    // Create a new Date object with today's date and the specified time\r\n    var now = new Date();\r\n    var dateObject = new Date(now.getFullYear(), now.getMonth(), now.getDate(), hours, minutes);\r\n\r\n    return dateObject;\r\n  }\r\n\r\n  dashboardDarkModeSwitchEvent() {\r\n    this.switchWrappers.forEach((s) => {\r\n      s?.addEventListener(\"click\", (e) => {\r\n        if (e.target.classList.contains(\"switch-trigger\")) {\r\n          let thisTrigger = e.target;\r\n          if (thisTrigger.checked) {\r\n            this.activateAdminDarkMode();\r\n          } else {\r\n            this.deactivateAdminDarkMode();\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n  prevDarkModeSwitchEvent() {\r\n    this.switchWrappers.forEach((s) => {\r\n      s?.addEventListener(\"click\", (e) => {\r\n        if (e.target.classList.contains(\"switch-trigger\")) {\r\n          // this.htmlElement.classList.toggle(this.darkEnabledClass);\r\n          let thisTrigger = e.target;\r\n          if (thisTrigger.checked) {\r\n            this.activateDarkMode();\r\n\r\n            if (window.matchMedia && window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\r\n              localStorage.removeItem(\"lightOnOSDarkChecked\");\r\n            }\r\n            if (this.switchWrapper.contains(thisTrigger)) {\r\n              if (this.menuSwitch) this.menuSwitch.checked = true;\r\n            } else {\r\n              if (this.floatingSwitch) this.floatingSwitch.checked = true;\r\n            }\r\n            // if (this.switchWrapper.contains(thisTrigger)) {\r\n            //   if (this.adminSwitch) this.adminSwitch.checked = true;\r\n            // } else {\r\n            //   if (this.floatingSwitch) this.floatingSwitch.checked = true;\r\n            // }\r\n          } else {\r\n            this.deactivateDarkMode();\r\n\r\n            if (window.matchMedia && window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\r\n              localStorage.setItem(\"lightOnOSDarkChecked\", true);\r\n            }\r\n\r\n            if (isDefaultDarkModeEnabled) {\r\n              localStorage.setItem(\"lightOnDefaultDarkMode\", true);\r\n            }\r\n\r\n            // if (frontendObject.timeBasedMode) {\r\n            if (frontendObject.time_based_mode_active) {\r\n              localStorage.setItem(\"lightOnTimeBasedDarkMode\", true);\r\n            }\r\n\r\n            if (this.switchWrapper.contains(thisTrigger)) {\r\n              if (this.menuSwitch) this.menuSwitch.checked = false;\r\n            } else {\r\n              if (this.floatingSwitch) this.floatingSwitch.checked = false;\r\n            }\r\n            // if (this.switchWrapper.contains(thisTrigger)) {\r\n            //   if (this.adminSwitch) this.adminSwitch.checked = false;\r\n            // } else {\r\n            //   if (this.floatingSwitch) this.floatingSwitch.checked = false;\r\n            // }\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  prevHandleOSDark() {\r\n    if (typeof isOSDarkModeEnabled !== \"undefined\") {\r\n      if (isOSDarkModeEnabled) {\r\n        let lightOnOSDarkChecked = localStorage.getItem(\"lightOnOSDarkChecked\");\r\n        window.matchMedia(\"(prefers-color-scheme: dark)\").addEventListener(\"change\", (e) => {\r\n          const newColorScheme = e.matches ? \"dark\" : \"light\";\r\n          if (newColorScheme === \"dark\") {\r\n            if (!lightOnOSDarkChecked) {\r\n              this.enableDarkMode();\r\n            }\r\n          } else {\r\n            this.disableDarkMode();\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  prevHandleKeyShortcut() {\r\n    if (isKeyShortDarkModeEnabled) {\r\n      let ctrlDown = false;\r\n      document.addEventListener(\"keydown\", (e) => {\r\n        if (e.which === 17) ctrlDown = true;\r\n      });\r\n      document.addEventListener(\"keyup\", (e) => {\r\n        if (e.which === 17) ctrlDown = false;\r\n      });\r\n      document.addEventListener(\"keydown\", (event) => {\r\n        if (ctrlDown && event.altKey && event.which === 68) {\r\n          let darkMode = this.isDarkModeEnabled();\r\n          if (darkMode) {\r\n            this.deactivateDarkMode();\r\n          } else {\r\n            this.activateDarkMode();\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n  activateDarkMode() {\r\n    this.saveDarkModeStatus();\r\n    this.enableDarkMode();\r\n  }\r\n  deactivateDarkMode() {\r\n    this.removeDarkModeStatus();\r\n    this.disableDarkMode();\r\n  }\r\n  activateAdminDarkMode() {\r\n    this.saveAdminDarkModeStatus();\r\n    this.enableAdminDarkMode();\r\n  }\r\n  deactivateAdminDarkMode() {\r\n    this.removeAdminDarkModeStatus();\r\n    this.disableAdminDarkMode();\r\n  }\r\n  saveDarkModeStatus() {\r\n    localStorage.setItem(\"darklupModeEnabled\", this.darkEnabledClass);\r\n    localStorage.setItem(\"triggerCheked\", \"checked\");\r\n  }\r\n  removeDarkModeStatus() {\r\n    localStorage.removeItem(\"darklupModeEnabled\");\r\n    localStorage.removeItem(\"triggerCheked\");\r\n  }\r\n  saveAdminDarkModeStatus() {\r\n    localStorage.setItem(\"adminDarklupModeEnabled\", this.darkEnabledClass);\r\n    localStorage.setItem(\"adminTriggerChecked\", \"checked\");\r\n  }\r\n  removeAdminDarkModeStatus() {\r\n    localStorage.removeItem(\"adminDarklupModeEnabled\");\r\n    localStorage.removeItem(\"adminTriggerChecked\");\r\n  }\r\n  enableDarkMode() {\r\n    this.htmlElement.classList.add(this.darkEnabledClass);\r\n    this.applyDynamicStyles();\r\n    this.switches.forEach((s) => {\r\n      if (s) s.checked = true;\r\n    });\r\n  }\r\n  disableDarkMode() {\r\n    this.htmlElement.classList.remove(this.darkEnabledClass);\r\n    this.resetDynamicStyles();\r\n    this.switches.forEach((s) => {\r\n      if (s) s.checked = false;\r\n    });\r\n  }\r\n  enableAdminDarkMode() {\r\n    this.htmlElement.classList.add(this.adminDarkEnabledClass);\r\n\r\n    this.applyDynamicStyles();\r\n    this.switches.forEach((s) => {\r\n      if (s) s.checked = true;\r\n    });\r\n\r\n    let darkIcon = document.querySelectorAll(\".admin-dark-icon\");\r\n    let lightIcon = document.querySelectorAll(\".admin-light-icon\");\r\n\r\n    darkIcon.forEach((i) => {\r\n      i.style.display = \"block\";\r\n    });\r\n    lightIcon.forEach((i) => {\r\n      i.style.display = \"none\";\r\n    });\r\n  }\r\n  disableAdminDarkMode() {\r\n    this.htmlElement.classList.remove(this.adminDarkEnabledClass);\r\n    this.resetDynamicStyles();\r\n    this.switches.forEach((s) => {\r\n      if (s) s.checked = false;\r\n    });\r\n\r\n    let darkIcon = document.querySelectorAll(\".admin-dark-icon\");\r\n    let lightIcon = document.querySelectorAll(\".admin-light-icon\");\r\n    darkIcon.forEach((i) => {\r\n      i.style.display = \"none\";\r\n    });\r\n    lightIcon.forEach((i) => {\r\n      i.style.display = \"block\";\r\n    });\r\n  }\r\n  // removed, may need for dashboard support\r\n  dynamicSwitchStyle() {\r\n    if (this.isWpAdmin) {\r\n      let adminDarkMode = this.isAdminDarkModeEnabled();\r\n      if (adminDarkMode) {\r\n        this.applyDynamicStyles();\r\n      } else {\r\n        this.resetDynamicStyles();\r\n      }\r\n    } else {\r\n      let darkMode = this.isDarkModeEnabled();\r\n      if (darkMode) {\r\n        this.applyDynamicStyles();\r\n      } else {\r\n        this.resetDynamicStyles();\r\n      }\r\n    }\r\n  }\r\n  documentOnReady() {\r\n    // this.prevWindowOnLoad();\r\n    document.addEventListener(\"DOMContentLoaded\", function () {});\r\n  }\r\n  windowOnLoaded() {\r\n    // Window On Load\r\n    window.addEventListener(\"load\", () => {\r\n      // this.prevWindowOnLoad();\r\n      this.handleDynamicContents();\r\n    });\r\n  }\r\n\r\n  applyDarklupDarkModeToAll() {\r\n    for (let element of this.allElements) {\r\n      let tag = element.tagName?.toLowerCase();\r\n      if (tag == \"a\") {\r\n        let bgColor = this.hasBgColor(element);\r\n        if (!bgColor) {\r\n          element.classList.add(\"darkluplite--link\");\r\n        }\r\n      } else if (tag == \"button\") {\r\n        element.classList.add(\"darkluplite--btn\");\r\n      } else if (tag == \"img\") {\r\n        element.classList.add(\"darkluplite--img\");\r\n      } else if (tag == \"svg\") {\r\n        element.classList.add(\"darkluplite--inline-svg\");\r\n      } else if (tag == \"input\" || tag == \"textarea\" || tag == \"select\") {\r\n        element.classList.add(\"darkluplite--input\");\r\n      } else if (tag == \"del\") {\r\n        element.classList.add(\"darkluplite--text\");\r\n      } else {\r\n        element.classList.add(\"wpc--darkluplite-element\");\r\n        this.handleCommonElement(element);\r\n      }\r\n      this.handleBoxShadow(element);\r\n    }\r\n  }\r\n  handleCommonElement(element) {\r\n    let BgImage, bgColor;\r\n    // For BG Image and Color\r\n    BgImage = this.hasBgImage(element);\r\n    if (BgImage) {\r\n      this.elementsWithBgImage.push(element);\r\n    }\r\n    // For BG Color\r\n    bgColor = this.hasBgColor(element);\r\n    if (bgColor) {\r\n      // console.log(bgColor);\r\n      if (this.hasAlphaBgColor(element)) {\r\n        this.elementsWithAlphaBg.push(element);\r\n        element.classList.add(\"darkluplite--alpha-bg\");\r\n      } else {\r\n        this.elementsWithRealBgColor.push(element);\r\n      }\r\n    }\r\n\r\n    /************************************************************ */\r\n    // For Text\r\n    if (this.hasOwnText(element)) {\r\n      this.elementsWithText.push(element);\r\n      element.classList.add(\"darkluplite--text\");\r\n    }\r\n\r\n    let sudoElements = [\"after\", \"before\"];\r\n    sudoElements.forEach((e) => {\r\n      let sudoStyle = window.getComputedStyle(element, `:${e}`);\r\n      if (sudoStyle.content !== \"none\") {\r\n        element.classList.add(`darkluplite--text-${e}`);\r\n      }\r\n    });\r\n\r\n    /************************************************************ */\r\n    // For border Color\r\n    if (this.hasBorderWidth(element)) {\r\n      this.elementsWithRealBorder.push(element);\r\n      element.classList.add(\"darkluplite--border\");\r\n    }\r\n  }\r\n  handleBoxShadow(element) {\r\n    let boxShadow = getComputedStyle(element).boxShadow;\r\n    if (boxShadow !== \"none\") {\r\n      this.elementsWithBoxShadow.push(element);\r\n      element.classList.add(\"wpc--darkluplite-box-shadow\");\r\n      let bgColor = this.hasBgColor(element);\r\n      if (!bgColor) {\r\n        element.classList.add(\"wpc--darkluplite-non-bg-box-shadow\");\r\n      }\r\n    }\r\n  }\r\n  applyBoxShadow(e) {\r\n    let boxShadow = getComputedStyle(e).boxShadow;\r\n    let newShadow = this.replaceRgbColorValue(boxShadow);\r\n    if (newShadow) {\r\n      e.dataset.boxshadow = boxShadow;\r\n      e.style.setProperty(\"box-shadow\", newShadow, \"important\");\r\n    }\r\n  }\r\n  handleOsDarkMode() {\r\n    if (isOSDarkModeEnabled) {\r\n      let WpcFrontEndSwitcherClicked = localStorage.getItem(\"WpcFrontEndSwitcherClicked\");\r\n      if (!WpcFrontEndSwitcherClicked) {\r\n        window.matchMedia(\"(prefers-color-scheme: dark)\").addEventListener(\"change\", (e) => {\r\n          const newColorScheme = e.matches ? \"dark\" : \"light\";\r\n          if (newColorScheme === \"dark\") {\r\n            this.applyDynamicStyles();\r\n          } else {\r\n            this.resetDynamicStyles();\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n  applyDarkModeToDynamicElement(element) {\r\n    let tag = element.tagName?.toLowerCase();\r\n    if (tag == \"a\") {\r\n      element.classList.add(\"darkluplite--link\");\r\n    } else if (tag == \"button\") {\r\n      element.classList.add(\"darkluplite--btn\");\r\n    } else if (tag == \"img\") {\r\n      element.classList.add(\"darkluplite--img\");\r\n    } else if (tag == \"svg\") {\r\n      element.classList.add(\"darkluplite--inline-svg\");\r\n    } else if (tag == \"input\" || tag == \"textarea\" || tag == \"select\") {\r\n      element.classList.add(\"darkluplite--input\");\r\n    } else if (tag == \"del\") {\r\n      element.classList.add(\"darkluplite--text\");\r\n    } else {\r\n      if (this.hasOwnText(element)) {\r\n        element.classList.add(\"darkluplite--text\");\r\n      }\r\n      element.classList.add(\"wpc--darkluplite--observed\");\r\n    }\r\n  }\r\n  getElementArea(element) {\r\n    let area = 0;\r\n    let dimensions = element.getBoundingClientRect();\r\n    if (dimensions) area = dimensions.width * dimensions.height;\r\n    return area;\r\n  }\r\n  activateSwitches() {\r\n    if (this.isWpAdmin) {\r\n      let adminDarkMode = this.isAdminDarkModeEnabled();\r\n      if (adminDarkMode) {\r\n        this.switches.forEach((s) => {\r\n          if (s) s.checked = true;\r\n        });\r\n      }\r\n    } else {\r\n      if (this.isActiveDarkMode()) {\r\n        this.switches.forEach((s) => {\r\n          if (s) s.checked = true;\r\n        });\r\n      }\r\n    }\r\n  }\r\n  getElementWidth(element) {\r\n    // this.activateSwitches();\r\n    this.htmlElement.style.display = \"block\";\r\n    let width = 0;\r\n    let dimensions = element?.getBoundingClientRect();\r\n    if (dimensions) width = dimensions.width;\r\n    this.htmlElement.style.display = \"none\";\r\n    // console.log(width);\r\n    return width;\r\n  }\r\n  getParentBg(element) {\r\n    let parentBg = \"primary\";\r\n    const closeBg = element.closest(\".darkluplite--bg-applied\");\r\n    if (closeBg) {\r\n      if (closeBg.classList.contains(\"darkluplite--bg\")) {\r\n        parentBg = \"primary\";\r\n      } else if (closeBg.classList.contains(\"darkluplite--secondary-bg\")) {\r\n        parentBg = \"secondary\";\r\n      } else if (closeBg.classList.contains(\"darkluplite--tertiary-bg\")) {\r\n        parentBg = \"tertiary\";\r\n      }\r\n    }\r\n\r\n    return parentBg;\r\n  }\r\n  parentHasTertiary(element) {\r\n    let hasTertiary = false;\r\n    let closeBg = element.closest(\".darkluplite--bg-applied\");\r\n    if (closeBg) {\r\n      if (closeBg.classList.contains(\"darkluplite--tertiary-bg\")) {\r\n        hasTertiary = true;\r\n      }\r\n    }\r\n    return hasTertiary;\r\n  }\r\n  hasBorderWidth(e) {\r\n    let borderTopWidth, borderRightWidth, borderBottomWidth, borderLeftWidth;\r\n    let style = window.getComputedStyle(e);\r\n    borderTopWidth = parseFloat(style.getPropertyValue(\"border-top-width\"));\r\n    borderRightWidth = parseFloat(style.getPropertyValue(\"border-right-width\"));\r\n    borderBottomWidth = parseFloat(style.getPropertyValue(\"border-bottom-width\"));\r\n    borderLeftWidth = parseFloat(style.getPropertyValue(\"border-left-width\"));\r\n\r\n    if (borderTopWidth > 0 || borderRightWidth > 0 || borderBottomWidth > 0 || borderLeftWidth > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  hasBgColor(e) {\r\n    let style = window.getComputedStyle(e);\r\n    let bgColor = style.getPropertyValue(\"background-color\");\r\n    let isRealBgColor = bgColor !== \"rgba(0, 0, 0, 0)\" && bgColor !== \"transparent\" && bgColor !== \"inherit\";\r\n    if (isRealBgColor) {\r\n      if (bgColor.includes(\"rgba\")) {\r\n        let alphaValue;\r\n        alphaValue = this.getRgbaAlpha(bgColor);\r\n        if (alphaValue && alphaValue == 0) return false;\r\n      }\r\n      return bgColor;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  hasOwnText(e) {\r\n    let txtVal;\r\n    txtVal = e.childNodes[0]?.nodeValue?.trim();\r\n    if (!txtVal) {\r\n      txtVal = e.childNodes[e.childNodes.length - 1]?.nodeValue?.trim();\r\n    }\r\n    if (txtVal !== \"\" && typeof txtVal !== \"undefined\" && txtVal !== \"inherit\") {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  getRgbaAlpha(color) {\r\n    let alphaValue = false;\r\n    let rgbaMatch = color.match(/rgba?\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3}),? ?([\\d\\.]*)?\\)/);\r\n    if (rgbaMatch) {\r\n      alphaValue = rgbaMatch[4] ? rgbaMatch[4] : false;\r\n    }\r\n    return alphaValue;\r\n  }\r\n  hasAlphaBgColor(e) {\r\n    let style = window.getComputedStyle(e);\r\n    let bgColor = style.getPropertyValue(\"background-color\");\r\n    let rgbaMatch = bgColor.match(/rgba?\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3}),? ?([\\d\\.]*)?\\)/);\r\n    let alphaValue = false;\r\n    if (rgbaMatch) {\r\n      alphaValue = rgbaMatch[4] ? parseFloat(rgbaMatch[4]) : false;\r\n    }\r\n    return alphaValue;\r\n  }\r\n  OpApplyBgColor(e) {\r\n    let elementWidth = this.getElementWidth(e);\r\n    let bgColor = this.hasBgColor(e);\r\n    if (bgColor) {\r\n      let alphaValue = this.hasAlphaBgColor(e);\r\n      if (alphaValue) {\r\n        e.classList.add(\"darkluplite--alpha-bg\");\r\n      } else if (elementWidth == this.bodyWidth) {\r\n        if (bgColor == this.primaryBg) {\r\n          e.classList.add(\"darkluplite--bg\");\r\n        } else {\r\n          e.classList.add(\"darkluplite--secondary-bg\");\r\n        }\r\n        e.classList.add(\"darkluplite--bg-applied\");\r\n      } else if (this.bodyWidth > elementWidth && elementWidth > 0) {\r\n        if (this.parentHasTertiary(e)) {\r\n          e.classList.add(\"darkluplite--secondary-bg\");\r\n          // e.classList.add(\"darkluplite--tertiary-bg\");\r\n        } else {\r\n          e.classList.add(\"darkluplite--tertiary-bg\");\r\n        }\r\n        e.classList.add(\"darkluplite--bg-applied\");\r\n      } else {\r\n        e.classList.add(\"darkluplite--bg\");\r\n        e.classList.add(\"darkluplite--bg-applied\");\r\n      }\r\n    }\r\n  }\r\n  getBgColor(e) {\r\n    let style = window.getComputedStyle(e);\r\n    let appliedBgColor = style.getPropertyValue(\"background-color\");\r\n    return appliedBgColor;\r\n  }\r\n\r\n  applyBgColor(e) {\r\n    let elementWidth = this.getElementWidth(e);\r\n    // console.log(elementWidth);\r\n    let bgColor = this.hasBgColor(e);\r\n    if (bgColor) {\r\n      let alphaValue = this.hasAlphaBgColor(e);\r\n      if (alphaValue) {\r\n        e.classList.add(\"darkluplite--alpha-bg\");\r\n      } else if (elementWidth == this.bodyWidth) {\r\n        if (bgColor == this.primaryBg) {\r\n          e.classList.add(\"darkluplite--bg\");\r\n        } else {\r\n          e.classList.add(\"darkluplite--secondary-bg\");\r\n        }\r\n        e.classList.add(\"darkluplite--bg-applied\");\r\n      } else if (this.bodyWidth > elementWidth && elementWidth > 0) {\r\n        let parentBg = this.getParentBg(e);\r\n        if (parentBg == \"primary\" || parentBg == \"secondary\") {\r\n          e.classList.add(\"darkluplite--tertiary-bg\");\r\n        } else {\r\n          // e.classList.add(\"darkluplite--secondary-bg\");\r\n          e.classList.add(\"darkluplite--bg\");\r\n        }\r\n        e.classList.add(\"darkluplite--bg-applied\");\r\n      } else {\r\n        // e.classList.add(\"darkluplite--bg\");\r\n        e.classList.add(\"darkluplite--bg-applied\");\r\n        e.classList.add(\"darkluplite--tertiary-bg\");\r\n      }\r\n    }\r\n  }\r\n  applyAlphaBgColor(e) {\r\n    let alphaValue = this.hasAlphaBgColor(e);\r\n    if (alphaValue) {\r\n      let newBg = DarklupJs.secondary_bg;\r\n      let style = window.getComputedStyle(e);\r\n      let bgColor = style.getPropertyValue(\"background-color\");\r\n      e.dataset.alphabg = bgColor;\r\n      let alphaBg = newBg.replace(\")\", `, ${alphaValue})`).replace(\"rgb\", \"rgba\");\r\n      e.style.backgroundColor = alphaBg;\r\n    }\r\n  }\r\n\r\n  hasBgImage(e) {\r\n    // let bgImage = getComputedStyle(e).getPropertyValue(\"background-image\");\r\n    let bgImage = getComputedStyle(e).backgroundImage;\r\n    if (bgImage !== \"none\" && (bgImage.includes(\"linear-gradient\") || bgImage.includes(\"url\"))) {\r\n      return bgImage;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  applyBgImage(element) {\r\n    let BgImage = this.hasBgImage(element);\r\n    if (BgImage) {\r\n      if (BgImage.includes(\"linear-gradient\") && BgImage.includes(\"url\")) {\r\n        element.classList.add(\"darkluplite-bg-gradient--image\");\r\n      } else if (BgImage.includes(\"url\")) {\r\n        element.classList.add(\"darkluplite-bg--image\");\r\n        if (!this.alreadyHasOverlay(element)) {\r\n          if (applyBgOverlay) {\r\n            let imgGrad = `linear-gradient(rgba(0, 0, 0, ${DarklupJs.bg_image_dark_opacity}), rgba(0, 0, 0,${DarklupJs.bg_image_dark_opacity}))`;\r\n            let imgOverlay = `${imgGrad}, ${BgImage}`;\r\n            element.style.setProperty(\"background-image\", imgOverlay);\r\n          }\r\n        }\r\n        this.addDarkenClassToChild(element);\r\n      } else if (BgImage.includes(\"linear-gradient\")) {\r\n        element.classList.add(\"darkluplite-bg-gradient\");\r\n        this.applyGradientBgImage(element);\r\n        this.addDarkenClassToChild(element);\r\n      }\r\n      element.dataset.lightbg = BgImage;\r\n    }\r\n  }\r\n  alreadyHasOverlay(element) {\r\n    let hasOverlay = false;\r\n    if (element.classList.contains(\"darkluplite-under-darken-bg\")) {\r\n      hasOverlay = true;\r\n    }\r\n    let overlay = element.querySelector(\":scope > .elementor-background-overlay\");\r\n    if (overlay) {\r\n      let overlayBgImage = this.hasBgImage(overlay);\r\n      let overlayBgColor = this.hasBgColor(overlay);\r\n      if (overlayBgImage) {\r\n        hasOverlay = true;\r\n      } else if (overlayBgColor) {\r\n        hasOverlay = true;\r\n      }\r\n    }\r\n\r\n    return hasOverlay;\r\n  }\r\n  replaceRgbColorValue(currentStr) {\r\n    let newColor1 = DarklupJs.primary_bg;\r\n    let newColor2 = DarklupJs.secondary_bg;\r\n    let newColor3 = DarklupJs.tertiary_bg;\r\n    let newColors = [newColor1, newColor2, newColor3];\r\n    let newStr = \"\";\r\n\r\n    const colorRegexMatch = /rgba?\\((\\s*\\d{1,3}\\s*,){2}\\s*\\d{1,3}\\s*(,\\s*[0-9\\.]+)?\\)/g;\r\n    const rgbaMatches = currentStr.match(colorRegexMatch);\r\n\r\n    newColors.forEach((color, i) => {\r\n      if (!rgbaMatches[i]) return;\r\n      if (color.includes(\"rgba\")) {\r\n        if (rgbaMatches[i]) {\r\n          newStr = currentStr?.replace(rgbaMatches[i], color);\r\n          currentStr = newStr;\r\n        }\r\n      } else if (color.includes(\"rgb\") && rgbaMatches[i].includes(\"rgb\") && !rgbaMatches[i].includes(\"rgba\")) {\r\n        if (rgbaMatches[i]) {\r\n          newStr = currentStr?.replace(rgbaMatches[i], color);\r\n          currentStr = newStr;\r\n        }\r\n      } else if (color.includes(\"rgb\") && rgbaMatches[i].includes(\"rgba\")) {\r\n        let lastCommaPosition = rgbaMatches[i].lastIndexOf(\",\");\r\n        let alphaStr = rgbaMatches[i].slice(lastCommaPosition);\r\n        color = color.replace(\"rgb(\", \"rgba(\").replace(\")\", alphaStr);\r\n        newStr = currentStr?.replace(rgbaMatches[i], color);\r\n        currentStr = newStr;\r\n      }\r\n    });\r\n    return newStr;\r\n    // console.log(newStr);\r\n  }\r\n  applyGradientBgImage(element) {\r\n    let currentBg = getComputedStyle(element).getPropertyValue(\"background-image\");\r\n    // console.log(`Current Gradient ${currentBg}`);\r\n    if (currentBg !== \"none\" && currentBg.includes(\"linear-gradient\")) {\r\n      // let newColors = ['rgba(23, 24, 25)', 'rgba(26, 27, 28)'];\r\n      // let newColors = ['rgba(23, 24, 25, 0.5)', 'rgba(26, 27, 28, 0.6)'];\r\n      let newColor1 = DarklupJs.primary_bg;\r\n      let newColor2 = DarklupJs.secondary_bg;\r\n      let newColors = [newColor1, newColor2];\r\n      let newGradient;\r\n      newGradient = `linear-gradient(${DarklupJs.primary_bg}, ${DarklupJs.secondary_bg})`;\r\n      // newGradient = `linear-gradient(${DarklupJs.primary_bg_rgba}, ${DarklupJs.secondary_bg_rgba})`;\r\n      const colorRegexMatch = /rgba?\\((\\s*\\d{1,3}\\s*,){2}\\s*\\d{1,3}\\s*(,\\s*[0-9\\.]+)?\\)/g;\r\n      const rgbaMatches = currentBg.match(colorRegexMatch);\r\n\r\n      newColors.forEach((color, i) => {\r\n        if (color.includes(\"rgba\")) {\r\n          if (rgbaMatches[i]) {\r\n            newGradient = currentBg?.replace(rgbaMatches[i], color);\r\n            currentBg = newGradient;\r\n          }\r\n        } else if (color.includes(\"rgb\") && rgbaMatches[i].includes(\"rgb\") && !rgbaMatches[i].includes(\"rgba\")) {\r\n          if (rgbaMatches[i]) {\r\n            newGradient = currentBg?.replace(rgbaMatches[i], color);\r\n            currentBg = newGradient;\r\n          }\r\n        } else if (color.includes(\"rgb\") && rgbaMatches[i].includes(\"rgba\")) {\r\n          let lastCommaPosition = rgbaMatches[i].lastIndexOf(\",\");\r\n          let alphaStr = rgbaMatches[i].slice(lastCommaPosition);\r\n          color = color.replace(\"rgb(\", \"rgba(\").replace(\")\", alphaStr);\r\n          newGradient = currentBg?.replace(rgbaMatches[i], color);\r\n          currentBg = newGradient;\r\n        }\r\n      });\r\n\r\n      if (rgbaMatches) {\r\n        if (newGradient) element.style.backgroundImage = newGradient;\r\n      }\r\n      // console.log(`newGradient ${newGradient}`);\r\n    }\r\n  }\r\n\r\n  addDarkenClassToChild(element) {\r\n    let darkenChild = element.querySelectorAll(`*`);\r\n    if (darkenChild) {\r\n      darkenChild.forEach((e) => {\r\n        e.classList.add(\"darkluplite-under-darken-bg\");\r\n      });\r\n    }\r\n  }\r\n\r\n  resetBgImage(e) {\r\n    e.style.backgroundImage = e.dataset.lightbg;\r\n  }\r\n  resetAlphaBgColor(e) {\r\n    e.style.backgroundColor = e.dataset.alphabg;\r\n  }\r\n  resetBoxShadow(e) {\r\n    e.style.boxShadow = e.dataset.boxshadow;\r\n  }\r\n  excludeAndSelect(excludes = [], selector = \"html *\") {\r\n    excludes.forEach(function (exclude) {\r\n      selector += `:not(${exclude})`;\r\n    });\r\n    return selector;\r\n  }\r\n  isDarkModeEnabled() {\r\n    let darkMode = localStorage.getItem(\"darklupModeEnabled\");\r\n    let getTriggerChecked = localStorage.getItem(\"triggerCheked\");\r\n    if (darkMode && getTriggerChecked) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  isAdminDarkModeEnabled() {\r\n    let darkMode = localStorage.getItem(\"adminDarklupModeEnabled\");\r\n    let getTriggerChecked = localStorage.getItem(\"adminTriggerChecked\");\r\n    if (darkMode && getTriggerChecked) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  applyDynamicStyles() {\r\n    this.elementsWithBgImage?.forEach((element) => this.applyBgImage(element));\r\n    this.elementsWithAlphaBg?.forEach((element) => this.applyAlphaBgColor(element));\r\n    this.elementsWithBoxShadow?.forEach((element) => this.applyBoxShadow(element));\r\n  }\r\n  resetDynamicStyles() {\r\n    this.elementsWithBgImage?.forEach((element) => this.resetBgImage(element));\r\n    this.elementsWithAlphaBg?.forEach((element) => this.resetAlphaBgColor(element));\r\n    this.elementsWithBoxShadow?.forEach((element) => this.resetBoxShadow(element));\r\n  }\r\n  // Initializes the mutation observer for dynamically added elements\r\n  handleDynamicContents() {\r\n    const observerConfig = {\r\n      attributes: true,\r\n      childList: true,\r\n      characterData: true,\r\n      subtree: true,\r\n    };\r\n\r\n    const parentElement = document.querySelector(\"body\");\r\n    const newObserver = new MutationObserver((mutations) => {\r\n      mutations.forEach((mutation) => {\r\n        mutation.addedNodes.forEach((node) => {\r\n          if (!(node instanceof HTMLElement)) return;\r\n          node.classList?.add(\"wpc-darklup-observer--node\");\r\n          this.applyDarkModeToDynamicElement(node);\r\n          const childNodes = node.querySelectorAll(\"*\");\r\n          childNodes.forEach((childNode) => {\r\n            if (childNode.nodeType === Node.ELEMENT_NODE) {\r\n              this.applyDarkModeToDynamicElement(childNode);\r\n            }\r\n          });\r\n        });\r\n      });\r\n    });\r\n\r\n    newObserver.observe(parentElement.parentNode, observerConfig);\r\n  }\r\n}\r\n\r\n// Document on Ready\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n  let darkluplite = new Darkluplite();\r\n});\r\n\r\n// Window On Load\r\nwindow.addEventListener(\"load\", function () {\r\n  // let darkluplite = new Darkluplite();\r\n});\r\n\r\n// console.log(`Hi Mahbub, your darkup calculation is complete`);\r\n"],"names":["$37ba0a28b886fcb3$var$excludeSelectors","$37ba0a28b886fcb3$var$applyBgOverlay","DarklupJs","apply_bg_overlay","$37ba0a28b886fcb3$var$Darkluplite","constructor","this","setRequiredVariables","isGutenburg","getAllElements","applyDarklupDarkModeToAll","isWpAdmin","dashboardDarkMode","frontEndDarkMode","htmlElement","style","display","dashboardWindowOnLoad","dashboardDarkModeSwitchEvent","windowOnLoaded","prevWindowOnLoad","prevDarkModeSwitchEvent","prevHandleKeyShortcut","prevHandleOSDark","allElements","allAnchors","allButtons","allInputs","allImages","allInlineSvgs","elementsWithText","elementsWithRealBgColor","elementsWithRealBorder","elementsWithBgImage","elementsWithAlphaBg","elementsWithBoxShadow","maxArea","document","querySelector","switcherCheckbox","switcherCheckboxes","querySelectorAll","switchTrigger","switchWrapper","switchWrapper2","switchWrapper3","switchWrappers","floatingSwitch","adminSwitch","menuSwitch","switches","darkEnabledClass","adminDarkEnabledClass","bodyElement","classList","contains","bodyWidth","getElementWidth","bodyBg","hasBgColor","htmlBg","primaryBg","add","excludes","selectAll","length","excludeAndSelect","isAdminDarkModeEnabled","enableAdminDarkMode","forEach","element","applyBgColor","isActiveDarkMode","enableDarkMode","darkModeActivity","lightOnDefaultDarkMode","localStorage","getItem","lightOnOSDarkChecked","lightOnTimeBasedDarkMode","defaultDarkMode","isDefaultDarkModeEnabled","OSDarkMode","isOSDarkModeEnabled","isDarkModeEnabled","window","matchMedia","matches","isActiveTimeBasedDarkMode","getUserTime","now","Date","hours","getHours","minutes","getMinutes","frontendObject","time_based_mode_active","startTime","createDateObject","time_based_mode_start_time","endTime","time_based_mode_end_time","currentTime","parse","timeString","parts","split","parseInt","getFullYear","getMonth","getDate","s","addEventListener","e","target","checked","activateAdminDarkMode","deactivateAdminDarkMode","thisTrigger","activateDarkMode","removeItem","deactivateDarkMode","setItem","disableDarkMode","isKeyShortDarkModeEnabled","ctrlDown","which","event","altKey","saveDarkModeStatus","removeDarkModeStatus","saveAdminDarkModeStatus","removeAdminDarkModeStatus","disableAdminDarkMode","applyDynamicStyles","remove","resetDynamicStyles","darkIcon","lightIcon","i","dynamicSwitchStyle","documentOnReady","handleDynamicContents","tag","tagName","toLowerCase","handleCommonElement","handleBoxShadow","BgImage","bgColor","hasBgImage","push","hasAlphaBgColor","hasOwnText","getComputedStyle","content","hasBorderWidth","boxShadow","applyBoxShadow","newShadow","replaceRgbColorValue","dataset","boxshadow","setProperty","handleOsDarkMode","applyDarkModeToDynamicElement","getElementArea","area","dimensions","getBoundingClientRect","width","height","activateSwitches","getParentBg","parentBg","closeBg","closest","parentHasTertiary","hasTertiary","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","parseFloat","getPropertyValue","includes","alphaValue","getRgbaAlpha","txtVal","childNodes","nodeValue","trim","color","rgbaMatch","match","OpApplyBgColor","elementWidth","getBgColor","applyAlphaBgColor","newBg","secondary_bg","alphabg","alphaBg","replace","backgroundColor","bgImage","backgroundImage","applyBgImage","alreadyHasOverlay","imgOverlay","bg_image_dark_opacity","addDarkenClassToChild","applyGradientBgImage","lightbg","hasOverlay","overlay","overlayBgImage","overlayBgColor","currentStr","newColors","primary_bg","tertiary_bg","newStr","rgbaMatches","lastCommaPosition","lastIndexOf","alphaStr","slice","currentBg","newGradient","colorRegexMatch","darkenChild","resetBgImage","resetAlphaBgColor","resetBoxShadow","selector","exclude","darkMode","getTriggerChecked","parentElement","MutationObserver","mutations","mutation","addedNodes","node","HTMLElement","childNode","nodeType","Node","ELEMENT_NODE","observe","parentNode","attributes","childList","characterData","subtree"],"version":3,"file":"presets.js.map"}