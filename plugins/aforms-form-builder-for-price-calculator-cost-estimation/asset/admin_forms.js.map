{"mappings":"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","sources":["node_modules/hyperapp/src/index.js","node_modules/src/php/var/index.js","node_modules/src/php/var/boolval.js","node_modules/src/php/var/doubleval.js","node_modules/src/php/var/floatval.js","node_modules/src/php/var/empty.js","node_modules/src/php/var/gettype.js","node_modules/src/php/var/is_float.js","node_modules/src/php/var/intval.js","node_modules/src/php/var/is_array.js","node_modules/src/php/info/ini_get.js","node_modules/src/php/var/is_binary.js","node_modules/src/php/var/is_bool.js","node_modules/src/php/var/is_buffer.js","node_modules/src/php/var/is_callable.js","node_modules/src/php/var/is_double.js","node_modules/src/php/var/is_int.js","node_modules/src/php/var/is_integer.js","node_modules/src/php/var/is_long.js","node_modules/src/php/var/is_null.js","node_modules/src/php/var/is_numeric.js","node_modules/src/php/var/is_object.js","node_modules/src/php/var/is_real.js","node_modules/src/php/var/is_scalar.js","node_modules/src/php/var/is_string.js","node_modules/src/php/var/is_unicode.js","node_modules/src/php/var/isset.js","node_modules/src/php/var/print_r.js","node_modules/src/php/strings/echo.js","node_modules/src/php/var/serialize.js","node_modules/src/php/var/strval.js","node_modules/src/php/var/unserialize.js","node_modules/src/php/var/var_dump.js","node_modules/src/php/var/var_export.js","src/asset/admin_common.js","src/asset/admin_forms.js"],"sourcesContent":["export function h(name, attributes) {\n  var rest = []\n  var children = []\n  var length = arguments.length\n\n  while (length-- > 2) rest.push(arguments[length])\n\n  while (rest.length) {\n    var node = rest.pop()\n    if (node && node.pop) {\n      for (length = node.length; length--; ) {\n        rest.push(node[length])\n      }\n    } else if (node != null && node !== true && node !== false) {\n      children.push(node)\n    }\n  }\n\n  return typeof name === \"function\"\n    ? name(attributes || {}, children)\n    : {\n        nodeName: name,\n        attributes: attributes || {},\n        children: children,\n        key: attributes && attributes.key\n      }\n}\n\nexport function app(state, actions, view, container) {\n  var map = [].map\n  var rootElement = (container && container.children[0]) || null\n  var oldNode = rootElement && recycleElement(rootElement)\n  var lifecycle = []\n  var skipRender\n  var isRecycling = true\n  var globalState = clone(state)\n  var wiredActions = wireStateToActions([], globalState, clone(actions))\n\n  scheduleRender()\n\n  return wiredActions\n\n  function recycleElement(element) {\n    return {\n      nodeName: element.nodeName.toLowerCase(),\n      attributes: {},\n      children: map.call(element.childNodes, function(element) {\n        return element.nodeType === 3 // Node.TEXT_NODE\n          ? element.nodeValue\n          : recycleElement(element)\n      })\n    }\n  }\n\n  function resolveNode(node) {\n    return typeof node === \"function\"\n      ? resolveNode(node(globalState, wiredActions))\n      : node != null\n        ? node\n        : \"\"\n  }\n\n  function render() {\n    skipRender = !skipRender\n\n    var node = resolveNode(view)\n\n    if (container && !skipRender) {\n      rootElement = patch(container, rootElement, oldNode, (oldNode = node))\n    }\n\n    isRecycling = false\n\n    while (lifecycle.length) lifecycle.pop()()\n  }\n\n  function scheduleRender() {\n    if (!skipRender) {\n      skipRender = true\n      setTimeout(render)\n    }\n  }\n\n  function clone(target, source) {\n    var out = {}\n\n    for (var i in target) out[i] = target[i]\n    for (var i in source) out[i] = source[i]\n\n    return out\n  }\n\n  function setPartialState(path, value, source) {\n    var target = {}\n    if (path.length) {\n      target[path[0]] =\n        path.length > 1\n          ? setPartialState(path.slice(1), value, source[path[0]])\n          : value\n      return clone(source, target)\n    }\n    return value\n  }\n\n  function getPartialState(path, source) {\n    var i = 0\n    while (i < path.length) {\n      source = source[path[i++]]\n    }\n    return source\n  }\n\n  function wireStateToActions(path, state, actions) {\n    for (var key in actions) {\n      typeof actions[key] === \"function\"\n        ? (function(key, action) {\n            actions[key] = function(data) {\n              var result = action(data)\n\n              if (typeof result === \"function\") {\n                result = result(getPartialState(path, globalState), actions)\n              }\n\n              if (\n                result &&\n                result !== (state = getPartialState(path, globalState)) &&\n                !result.then // !isPromise\n              ) {\n                scheduleRender(\n                  (globalState = setPartialState(\n                    path,\n                    clone(state, result),\n                    globalState\n                  ))\n                )\n              }\n\n              return result\n            }\n          })(key, actions[key])\n        : wireStateToActions(\n            path.concat(key),\n            (state[key] = clone(state[key])),\n            (actions[key] = clone(actions[key]))\n          )\n    }\n\n    return actions\n  }\n\n  function getKey(node) {\n    return node ? node.key : null\n  }\n\n  function eventListener(event) {\n    return event.currentTarget.events[event.type](event)\n  }\n\n  function updateAttribute(element, name, value, oldValue, isSvg) {\n    if (name === \"key\") {\n    } else if (name === \"style\") {\n      if (typeof value === \"string\") {\n        element.style.cssText = value\n      } else {\n        if (typeof oldValue === \"string\") oldValue = element.style.cssText = \"\"\n        for (var i in clone(oldValue, value)) {\n          var style = value == null || value[i] == null ? \"\" : value[i]\n          if (i[0] === \"-\") {\n            element.style.setProperty(i, style)\n          } else {\n            element.style[i] = style\n          }\n        }\n      }\n    } else {\n      if (name[0] === \"o\" && name[1] === \"n\") {\n        name = name.slice(2)\n\n        if (element.events) {\n          if (!oldValue) oldValue = element.events[name]\n        } else {\n          element.events = {}\n        }\n\n        element.events[name] = value\n\n        if (value) {\n          if (!oldValue) {\n            element.addEventListener(name, eventListener)\n          }\n        } else {\n          element.removeEventListener(name, eventListener)\n        }\n      } else if (\n        name in element &&\n        name !== \"list\" &&\n        name !== \"type\" &&\n        name !== \"draggable\" &&\n        name !== \"spellcheck\" &&\n        name !== \"translate\" &&\n        !isSvg\n      ) {\n        element[name] = value == null ? \"\" : value\n      } else if (value != null && value !== false) {\n        element.setAttribute(name, value)\n      }\n\n      if (value == null || value === false) {\n        element.removeAttribute(name)\n      }\n    }\n  }\n\n  function createElement(node, isSvg) {\n    var element =\n      typeof node === \"string\" || typeof node === \"number\"\n        ? document.createTextNode(node)\n        : (isSvg = isSvg || node.nodeName === \"svg\")\n          ? document.createElementNS(\n              \"http://www.w3.org/2000/svg\",\n              node.nodeName\n            )\n          : document.createElement(node.nodeName)\n\n    var attributes = node.attributes\n    if (attributes) {\n      if (attributes.oncreate) {\n        lifecycle.push(function() {\n          attributes.oncreate(element)\n        })\n      }\n\n      for (var i = 0; i < node.children.length; i++) {\n        element.appendChild(\n          createElement(\n            (node.children[i] = resolveNode(node.children[i])),\n            isSvg\n          )\n        )\n      }\n\n      for (var name in attributes) {\n        updateAttribute(element, name, attributes[name], null, isSvg)\n      }\n    }\n\n    return element\n  }\n\n  function updateElement(element, oldAttributes, attributes, isSvg) {\n    for (var name in clone(oldAttributes, attributes)) {\n      if (\n        attributes[name] !==\n        (name === \"value\" || name === \"checked\"\n          ? element[name]\n          : oldAttributes[name])\n      ) {\n        updateAttribute(\n          element,\n          name,\n          attributes[name],\n          oldAttributes[name],\n          isSvg\n        )\n      }\n    }\n\n    var cb = isRecycling ? attributes.oncreate : attributes.onupdate\n    if (cb) {\n      lifecycle.push(function() {\n        cb(element, oldAttributes)\n      })\n    }\n  }\n\n  function removeChildren(element, node) {\n    var attributes = node.attributes\n    if (attributes) {\n      for (var i = 0; i < node.children.length; i++) {\n        removeChildren(element.childNodes[i], node.children[i])\n      }\n\n      if (attributes.ondestroy) {\n        attributes.ondestroy(element)\n      }\n    }\n    return element\n  }\n\n  function removeElement(parent, element, node) {\n    function done() {\n      parent.removeChild(removeChildren(element, node))\n    }\n\n    var cb = node.attributes && node.attributes.onremove\n    if (cb) {\n      cb(element, done)\n    } else {\n      done()\n    }\n  }\n\n  function patch(parent, element, oldNode, node, isSvg) {\n    if (node === oldNode) {\n    } else if (oldNode == null || oldNode.nodeName !== node.nodeName) {\n      var newElement = createElement(node, isSvg)\n      parent.insertBefore(newElement, element)\n\n      if (oldNode != null) {\n        removeElement(parent, element, oldNode)\n      }\n\n      element = newElement\n    } else if (oldNode.nodeName == null) {\n      element.nodeValue = node\n    } else {\n      updateElement(\n        element,\n        oldNode.attributes,\n        node.attributes,\n        (isSvg = isSvg || node.nodeName === \"svg\")\n      )\n\n      var oldKeyed = {}\n      var newKeyed = {}\n      var oldElements = []\n      var oldChildren = oldNode.children\n      var children = node.children\n\n      for (var i = 0; i < oldChildren.length; i++) {\n        oldElements[i] = element.childNodes[i]\n\n        var oldKey = getKey(oldChildren[i])\n        if (oldKey != null) {\n          oldKeyed[oldKey] = [oldElements[i], oldChildren[i]]\n        }\n      }\n\n      var i = 0\n      var k = 0\n\n      while (k < children.length) {\n        var oldKey = getKey(oldChildren[i])\n        var newKey = getKey((children[k] = resolveNode(children[k])))\n\n        if (newKeyed[oldKey]) {\n          i++\n          continue\n        }\n\n        if (newKey != null && newKey === getKey(oldChildren[i + 1])) {\n          if (oldKey == null) {\n            removeElement(element, oldElements[i], oldChildren[i])\n          }\n          i++\n          continue\n        }\n\n        if (newKey == null || isRecycling) {\n          if (oldKey == null) {\n            patch(element, oldElements[i], oldChildren[i], children[k], isSvg)\n            k++\n          }\n          i++\n        } else {\n          var keyedNode = oldKeyed[newKey] || []\n\n          if (oldKey === newKey) {\n            patch(element, keyedNode[0], keyedNode[1], children[k], isSvg)\n            i++\n          } else if (keyedNode[0]) {\n            patch(\n              element,\n              element.insertBefore(keyedNode[0], oldElements[i]),\n              keyedNode[1],\n              children[k],\n              isSvg\n            )\n          } else {\n            patch(element, oldElements[i], null, children[k], isSvg)\n          }\n\n          newKeyed[newKey] = children[k]\n          k++\n        }\n      }\n\n      while (i < oldChildren.length) {\n        if (getKey(oldChildren[i]) == null) {\n          removeElement(element, oldElements[i], oldChildren[i])\n        }\n        i++\n      }\n\n      for (var i in oldKeyed) {\n        if (!newKeyed[i]) {\n          removeElement(element, oldKeyed[i][0], oldKeyed[i][1])\n        }\n      }\n    }\n    return element\n  }\n}\n","module.exports.boolval = require('./boolval')\nmodule.exports.doubleval = require('./doubleval')\nmodule.exports.empty = require('./empty')\nmodule.exports.floatval = require('./floatval')\nmodule.exports.gettype = require('./gettype')\nmodule.exports.intval = require('./intval')\nmodule.exports.is_array = require('./is_array')\nmodule.exports.is_binary = require('./is_binary')\nmodule.exports.is_bool = require('./is_bool')\nmodule.exports.is_buffer = require('./is_buffer')\nmodule.exports.is_callable = require('./is_callable')\nmodule.exports.is_double = require('./is_double')\nmodule.exports.is_float = require('./is_float')\nmodule.exports.is_int = require('./is_int')\nmodule.exports.is_integer = require('./is_integer')\nmodule.exports.is_long = require('./is_long')\nmodule.exports.is_null = require('./is_null')\nmodule.exports.is_numeric = require('./is_numeric')\nmodule.exports.is_object = require('./is_object')\nmodule.exports.is_real = require('./is_real')\nmodule.exports.is_scalar = require('./is_scalar')\nmodule.exports.is_string = require('./is_string')\nmodule.exports.is_unicode = require('./is_unicode')\nmodule.exports.isset = require('./isset')\nmodule.exports.print_r = require('./print_r')\nmodule.exports.serialize = require('./serialize')\nmodule.exports.strval = require('./strval')\nmodule.exports.unserialize = require('./unserialize')\nmodule.exports.var_dump = require('./var_dump')\nmodule.exports.var_export = require('./var_export')\n","module.exports = function boolval (mixedVar) {\n  // original by: Will Rowe\n  //   example 1: boolval(true)\n  //   returns 1: true\n  //   example 2: boolval(false)\n  //   returns 2: false\n  //   example 3: boolval(0)\n  //   returns 3: false\n  //   example 4: boolval(0.0)\n  //   returns 4: false\n  //   example 5: boolval('')\n  //   returns 5: false\n  //   example 6: boolval('0')\n  //   returns 6: false\n  //   example 7: boolval([])\n  //   returns 7: false\n  //   example 8: boolval('')\n  //   returns 8: false\n  //   example 9: boolval(null)\n  //   returns 9: false\n  //   example 10: boolval(undefined)\n  //   returns 10: false\n  //   example 11: boolval('true')\n  //   returns 11: true\n\n  if (mixedVar === false) {\n    return false\n  }\n\n  if (mixedVar === 0 || mixedVar === 0.0) {\n    return false\n  }\n\n  if (mixedVar === '' || mixedVar === '0') {\n    return false\n  }\n\n  if (Array.isArray(mixedVar) && mixedVar.length === 0) {\n    return false\n  }\n\n  if (mixedVar === null || mixedVar === undefined) {\n    return false\n  }\n\n  return true\n}\n","module.exports = function doubleval (mixedVar) {\n  //  discuss at: https://locutus.io/php/doubleval/\n  // original by: Brett Zamir (https://brett-zamir.me)\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: doubleval(186)\n  //   returns 1: 186.00\n\n  const floatval = require('../var/floatval')\n\n  return floatval(mixedVar)\n}\n","module.exports = function floatval (mixedVar) {\n  //  discuss at: https://locutus.io/php/floatval/\n  // original by: Michael White (https://getsprink.com)\n  //      note 1: The native parseFloat() method of JavaScript returns NaN\n  //      note 1: when it encounters a string before an int or float value.\n  //   example 1: floatval('150.03_page-section')\n  //   returns 1: 150.03\n  //   example 2: floatval('page: 3')\n  //   example 2: floatval('-50 + 8')\n  //   returns 2: 0\n  //   returns 2: -50\n\n  return (parseFloat(mixedVar) || 0)\n}\n","module.exports = function empty (mixedVar) {\n  //  discuss at: https://locutus.io/php/empty/\n  // original by: Philippe Baumann\n  //    input by: Onno Marsman (https://twitter.com/onnomarsman)\n  //    input by: LH\n  //    input by: Stoyan Kyosev (https://www.svest.org/)\n  // bugfixed by: Kevin van Zonneveld (https://kvz.io)\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Francesco\n  // improved by: Marc Jansen\n  // improved by: Rafał Kukawski (https://blog.kukawski.pl)\n  //   example 1: empty(null)\n  //   returns 1: true\n  //   example 2: empty(undefined)\n  //   returns 2: true\n  //   example 3: empty([])\n  //   returns 3: true\n  //   example 4: empty({})\n  //   returns 4: true\n  //   example 5: empty({'aFunc' : function () { alert('humpty'); } })\n  //   returns 5: false\n\n  let undef\n  let key\n  let i\n  let len\n  const emptyValues = [undef, null, false, 0, '', '0']\n\n  for (i = 0, len = emptyValues.length; i < len; i++) {\n    if (mixedVar === emptyValues[i]) {\n      return true\n    }\n  }\n\n  if (typeof mixedVar === 'object') {\n    for (key in mixedVar) {\n      if (mixedVar.hasOwnProperty(key)) {\n        return false\n      }\n    }\n    return true\n  }\n\n  return false\n}\n","module.exports = function gettype (mixedVar) {\n  //  discuss at: https://locutus.io/php/gettype/\n  // original by: Paulo Freitas\n  // improved by: Kevin van Zonneveld (https://kvz.io)\n  // improved by: Douglas Crockford (https://javascript.crockford.com)\n  // improved by: Brett Zamir (https://brett-zamir.me)\n  //    input by: KELAN\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: gettype(1)\n  //   returns 1: 'integer'\n  //   example 2: gettype(undefined)\n  //   returns 2: 'undefined'\n  //   example 3: gettype({0: 'Kevin van Zonneveld'})\n  //   returns 3: 'object'\n  //   example 4: gettype('foo')\n  //   returns 4: 'string'\n  //   example 5: gettype({0: function () {return false;}})\n  //   returns 5: 'object'\n  //   example 6: gettype({0: 'test', length: 1, splice: function () {}})\n  //   returns 6: 'object'\n  //   example 7: gettype(['test'])\n  //   returns 7: 'array'\n\n  const isFloat = require('../var/is_float')\n\n  let s = typeof mixedVar\n  let name\n  const _getFuncName = function (fn) {\n    const name = (/\\W*function\\s+([\\w$]+)\\s*\\(/).exec(fn)\n    if (!name) {\n      return '(Anonymous)'\n    }\n    return name[1]\n  }\n\n  if (s === 'object') {\n    if (mixedVar !== null) {\n      // From: https://javascript.crockford.com/remedial.html\n      // @todo: Break up this lengthy if statement\n      if (typeof mixedVar.length === 'number' &&\n        !(mixedVar.propertyIsEnumerable('length')) &&\n        typeof mixedVar.splice === 'function') {\n        s = 'array'\n      } else if (mixedVar.constructor && _getFuncName(mixedVar.constructor)) {\n        name = _getFuncName(mixedVar.constructor)\n        if (name === 'Date') {\n          // not in PHP\n          s = 'date'\n        } else if (name === 'RegExp') {\n          // not in PHP\n          s = 'regexp'\n        } else if (name === 'LOCUTUS_Resource') {\n          // Check against our own resource constructor\n          s = 'resource'\n        }\n      }\n    } else {\n      s = 'null'\n    }\n  } else if (s === 'number') {\n    s = isFloat(mixedVar) ? 'double' : 'integer'\n  }\n\n  return s\n}\n","module.exports = function is_float (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: https://locutus.io/php/is_float/\n  // original by: Paulo Freitas\n  // bugfixed by: Brett Zamir (https://brett-zamir.me)\n  // improved by: WebDevHobo (https://webdevhobo.blogspot.com/)\n  // improved by: Rafał Kukawski (https://blog.kukawski.pl)\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: is_float(186.31)\n  //   returns 1: true\n\n  return +mixedVar === mixedVar && (!isFinite(mixedVar) || !!(mixedVar % 1))\n}\n","module.exports = function intval (mixedVar, base) {\n  //  discuss at: https://locutus.io/php/intval/\n  // original by: Kevin van Zonneveld (https://kvz.io)\n  // improved by: stensi\n  // bugfixed by: Kevin van Zonneveld (https://kvz.io)\n  // bugfixed by: Brett Zamir (https://brett-zamir.me)\n  // bugfixed by: Rafał Kukawski (https://blog.kukawski.pl)\n  //    input by: Matteo\n  //   example 1: intval('Kevin van Zonneveld')\n  //   returns 1: 0\n  //   example 2: intval(4.2)\n  //   returns 2: 4\n  //   example 3: intval(42, 8)\n  //   returns 3: 42\n  //   example 4: intval('09')\n  //   returns 4: 9\n  //   example 5: intval('1e', 16)\n  //   returns 5: 30\n  //   example 6: intval(0x200000001)\n  //   returns 6: 8589934593\n  //   example 7: intval('0xff', 0)\n  //   returns 7: 255\n  //   example 8: intval('010', 0)\n  //   returns 8: 8\n\n  let tmp, match\n\n  const type = typeof mixedVar\n\n  if (type === 'boolean') {\n    return +mixedVar\n  } else if (type === 'string') {\n    if (base === 0) {\n      match = mixedVar.match(/^\\s*0(x?)/i)\n      base = match ? (match[1] ? 16 : 8) : 10\n    }\n    tmp = parseInt(mixedVar, base || 10)\n    return (isNaN(tmp) || !isFinite(tmp)) ? 0 : tmp\n  } else if (type === 'number' && isFinite(mixedVar)) {\n    return mixedVar < 0 ? Math.ceil(mixedVar) : Math.floor(mixedVar)\n  } else {\n    return 0\n  }\n}\n","module.exports = function is_array (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: https://locutus.io/php/is_array/\n  // original by: Kevin van Zonneveld (https://kvz.io)\n  // improved by: Legaev Andrey\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (https://brett-zamir.me)\n  // improved by: Nathan Sepulveda\n  // improved by: Brett Zamir (https://brett-zamir.me)\n  // bugfixed by: Cord\n  // bugfixed by: Manish\n  // bugfixed by: Brett Zamir (https://brett-zamir.me)\n  //      note 1: In Locutus, javascript objects are like php associative arrays,\n  //      note 1: thus JavaScript objects will also\n  //      note 1: return true in this function (except for objects which inherit properties,\n  //      note 1: being thus used as objects),\n  //      note 1: unless you do ini_set('locutus.objectsAsArrays', 0),\n  //      note 1: in which case only genuine JavaScript arrays\n  //      note 1: will return true\n  //   example 1: is_array(['Kevin', 'van', 'Zonneveld'])\n  //   returns 1: true\n  //   example 2: is_array('Kevin van Zonneveld')\n  //   returns 2: false\n  //   example 3: is_array({0: 'Kevin', 1: 'van', 2: 'Zonneveld'})\n  //   returns 3: true\n  //   example 4: ini_set('locutus.objectsAsArrays', 0)\n  //   example 4: is_array({0: 'Kevin', 1: 'van', 2: 'Zonneveld'})\n  //   returns 4: false\n  //   example 5: is_array(function tmp_a (){ this.name = 'Kevin' })\n  //   returns 5: false\n\n  const _getFuncName = function (fn) {\n    const name = (/\\W*function\\s+([\\w$]+)\\s*\\(/).exec(fn)\n    if (!name) {\n      return '(Anonymous)'\n    }\n    return name[1]\n  }\n  const _isArray = function (mixedVar) {\n    // return Object.prototype.toString.call(mixedVar) === '[object Array]';\n    // The above works, but let's do the even more stringent approach:\n    // (since Object.prototype.toString could be overridden)\n    // Null, Not an object, no length property so couldn't be an Array (or String)\n    if (!mixedVar || typeof mixedVar !== 'object' || typeof mixedVar.length !== 'number') {\n      return false\n    }\n    const len = mixedVar.length\n    mixedVar[mixedVar.length] = 'bogus'\n    // The only way I can think of to get around this (or where there would be trouble)\n    // would be to have an object defined\n    // with a custom \"length\" getter which changed behavior on each call\n    // (or a setter to mess up the following below) or a custom\n    // setter for numeric properties, but even that would need to listen for\n    // specific indexes; but there should be no false negatives\n    // and such a false positive would need to rely on later JavaScript\n    // innovations like __defineSetter__\n    if (len !== mixedVar.length) {\n      // We know it's an array since length auto-changed with the addition of a\n      // numeric property at its length end, so safely get rid of our bogus element\n      mixedVar.length -= 1\n      return true\n    }\n    // Get rid of the property we added onto a non-array object; only possible\n    // side-effect is if the user adds back the property later, it will iterate\n    // this property in the older order placement in IE (an order which should not\n    // be depended on anyways)\n    delete mixedVar[mixedVar.length]\n    return false\n  }\n\n  if (!mixedVar || typeof mixedVar !== 'object') {\n    return false\n  }\n\n  const isArray = _isArray(mixedVar)\n\n  if (isArray) {\n    return true\n  }\n\n  const iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.objectsAsArrays') : undefined) || 'on'\n  if (iniVal === 'on') {\n    const asString = Object.prototype.toString.call(mixedVar)\n    const asFunc = _getFuncName(mixedVar.constructor)\n\n    if (asString === '[object Object]' && asFunc === 'Object') {\n      // Most likely a literal and intended as assoc. array\n      return true\n    }\n  }\n\n  return false\n}\n","module.exports = function ini_get (varname) { // eslint-disable-line camelcase\n  //  discuss at: https://locutus.io/php/ini_get/\n  // original by: Brett Zamir (https://brett-zamir.me)\n  //      note 1: The ini values must be set by ini_set or manually within an ini file\n  //   example 1: ini_set('date.timezone', 'Asia/Hong_Kong')\n  //   example 1: ini_get('date.timezone')\n  //   returns 1: 'Asia/Hong_Kong'\n\n  const $global = (typeof window !== 'undefined' ? window : global)\n  $global.$locutus = $global.$locutus || {}\n  const $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.ini = $locutus.php.ini || {}\n\n  if ($locutus.php.ini[varname] && $locutus.php.ini[varname].local_value !== undefined) {\n    if ($locutus.php.ini[varname].local_value === null) {\n      return ''\n    }\n    return $locutus.php.ini[varname].local_value\n  }\n\n  return ''\n}\n","module.exports = function is_binary (vr) { // eslint-disable-line camelcase\n  //  discuss at: https://locutus.io/php/is_binary/\n  // original by: Brett Zamir (https://brett-zamir.me)\n  //   example 1: is_binary('This could be binary as far as JavaScript knows...')\n  //   returns 1: true\n\n  return typeof vr === 'string' // If it is a string of any kind, it could be binary\n}\n","module.exports = function is_bool (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: https://locutus.io/php/is_bool/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: CoursesWeb (https://www.coursesweb.net/)\n  //   example 1: is_bool(false)\n  //   returns 1: true\n  //   example 2: is_bool(0)\n  //   returns 2: false\n\n  return (mixedVar === true || mixedVar === false) // Faster (in FF) than type checking\n}\n","module.exports = function is_buffer (vr) { // eslint-disable-line camelcase\n  //  discuss at: https://locutus.io/php/is_buffer/\n  // original by: Brett Zamir (https://brett-zamir.me)\n  //   example 1: is_buffer('This could be binary or a regular string...')\n  //   returns 1: true\n\n  return typeof vr === 'string'\n}\n","module.exports = function is_callable (mixedVar, syntaxOnly, callableName) { // eslint-disable-line camelcase\n  //  discuss at: https://locutus.io/php/is_callable/\n  // original by: Brett Zamir (https://brett-zamir.me)\n  //    input by: François\n  // improved by: Brett Zamir (https://brett-zamir.me)\n  // improved by: KnightYoshi\n  // improved by: Waldo Malqui Silva (https://fayr.us/waldo/)\n  //      note 1: The variable callableName cannot work as a string variable passed by\n  //      note 1: reference as in PHP (since JavaScript does not support passing\n  //      note 1: strings by reference), but instead will take the name of\n  //      note 1: a global variable and set that instead.\n  //      note 1: When used on an object, depends on a constructor property\n  //      note 1: being kept on the object prototype\n  //      note 2: Depending on the `callableName` that is passed, this function can use eval.\n  //      note 2: The eval input is however checked to only allow valid function names,\n  //      note 2: So it should not be unsafer than uses without eval (seeing as you can)\n  //      note 2: already pass any function to be executed here.\n  //   example 1: is_callable('is_callable')\n  //   returns 1: true\n  //   example 2: is_callable('bogusFunction', true)\n  //   returns 2: true // gives true because does not do strict checking\n  //   example 3: function SomeClass () {}\n  //   example 3: SomeClass.prototype.someMethod = function (){}\n  //   example 3: var testObj = new SomeClass()\n  //   example 3: is_callable([testObj, 'someMethod'], true, 'myVar')\n  //   example 3: var $result = myVar\n  //   returns 3: 'SomeClass::someMethod'\n  //   example 4: is_callable(function () {})\n  //   returns 4: true\n  //   example 5: is_callable(class MyClass {})\n  //   returns 5: false\n\n  const $global = (typeof window !== 'undefined' ? window : global)\n\n  const validJSFunctionNamePattern = /^[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/\n\n  let name = ''\n  let obj = {}\n  let method = ''\n  let validFunctionName = false\n\n  const getFuncName = function (fn) {\n    const name = (/\\W*function\\s+([\\w$]+)\\s*\\(/).exec(fn)\n    if (!name) {\n      return '(Anonymous)'\n    }\n    return name[1]\n  }\n\n  // eslint-disable-next-line no-useless-escape\n  if (/(^class|\\(this\\,)/.test(mixedVar.toString())) {\n    return false\n  }\n\n  if (typeof mixedVar === 'string') {\n    obj = $global\n    method = mixedVar\n    name = mixedVar\n    validFunctionName = !!name.match(validJSFunctionNamePattern)\n  } else if (typeof mixedVar === 'function') {\n    return true\n  } else if (Object.prototype.toString.call(mixedVar) === '[object Array]' &&\n    mixedVar.length === 2 &&\n    typeof mixedVar[0] === 'object' &&\n    typeof mixedVar[1] === 'string') {\n    obj = mixedVar[0]\n    method = mixedVar[1]\n    name = (obj.constructor && getFuncName(obj.constructor)) + '::' + method\n  }\n\n  if (syntaxOnly || typeof obj[method] === 'function') {\n    if (callableName) {\n      $global[callableName] = name\n    }\n    return true\n  }\n\n  // validFunctionName avoids exploits\n  if (validFunctionName && typeof eval(method) === 'function') { // eslint-disable-line no-eval\n    if (callableName) {\n      $global[callableName] = name\n    }\n    return true\n  }\n\n  return false\n}\n","module.exports = function is_double (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: https://locutus.io/php/is_double/\n  // original by: Paulo Freitas\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: is_double(186.31)\n  //   returns 1: true\n\n  const _isFloat = require('../var/is_float')\n  return _isFloat(mixedVar)\n}\n","module.exports = function is_int (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: https://locutus.io/php/is_int/\n  // original by: Alex\n  // improved by: Kevin van Zonneveld (https://kvz.io)\n  // improved by: WebDevHobo (https://webdevhobo.blogspot.com/)\n  // improved by: Rafał Kukawski (https://blog.kukawski.pl)\n  //  revised by: Matt Bradley\n  // bugfixed by: Kevin van Zonneveld (https://kvz.io)\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: is_int(23)\n  //   returns 1: true\n  //   example 2: is_int('23')\n  //   returns 2: false\n  //   example 3: is_int(23.5)\n  //   returns 3: false\n  //   example 4: is_int(true)\n  //   returns 4: false\n\n  return mixedVar === +mixedVar && isFinite(mixedVar) && !(mixedVar % 1)\n}\n","module.exports = function is_integer (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: https://locutus.io/php/is_integer/\n  // original by: Paulo Freitas\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: is_integer(186.31)\n  //   returns 1: false\n  //   example 2: is_integer(12)\n  //   returns 2: true\n\n  const _isInt = require('../var/is_int')\n  return _isInt(mixedVar)\n}\n","module.exports = function is_long (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: https://locutus.io/php/is_long/\n  // original by: Paulo Freitas\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: is_long(186.31)\n  //   returns 1: true\n\n  const _isFloat = require('../var/is_float')\n  return _isFloat(mixedVar)\n}\n","module.exports = function is_null (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: https://locutus.io/php/is_null/\n  // original by: Kevin van Zonneveld (https://kvz.io)\n  //   example 1: is_null('23')\n  //   returns 1: false\n  //   example 2: is_null(null)\n  //   returns 2: true\n\n  return (mixedVar === null)\n}\n","module.exports = function is_numeric (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: https://locutus.io/php/is_numeric/\n  // original by: Kevin van Zonneveld (https://kvz.io)\n  // improved by: David\n  // improved by: taith\n  // bugfixed by: Tim de Koning\n  // bugfixed by: WebDevHobo (https://webdevhobo.blogspot.com/)\n  // bugfixed by: Brett Zamir (https://brett-zamir.me)\n  // bugfixed by: Denis Chenu (https://shnoulle.net)\n  //   example 1: is_numeric(186.31)\n  //   returns 1: true\n  //   example 2: is_numeric('Kevin van Zonneveld')\n  //   returns 2: false\n  //   example 3: is_numeric(' +186.31e2')\n  //   returns 3: true\n  //   example 4: is_numeric('')\n  //   returns 4: false\n  //   example 5: is_numeric([])\n  //   returns 5: false\n  //   example 6: is_numeric('1 ')\n  //   returns 6: false\n\n  const whitespace = [\n    ' ',\n    '\\n',\n    '\\r',\n    '\\t',\n    '\\f',\n    '\\x0b',\n    '\\xa0',\n    '\\u2000',\n    '\\u2001',\n    '\\u2002',\n    '\\u2003',\n    '\\u2004',\n    '\\u2005',\n    '\\u2006',\n    '\\u2007',\n    '\\u2008',\n    '\\u2009',\n    '\\u200a',\n    '\\u200b',\n    '\\u2028',\n    '\\u2029',\n    '\\u3000'\n  ].join('')\n\n  // @todo: Break this up using many single conditions with early returns\n  return (typeof mixedVar === 'number' ||\n    (typeof mixedVar === 'string' &&\n    whitespace.indexOf(mixedVar.slice(-1)) === -1)) &&\n    mixedVar !== '' &&\n    !isNaN(mixedVar)\n}\n","module.exports = function is_object (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: https://locutus.io/php/is_object/\n  // original by: Kevin van Zonneveld (https://kvz.io)\n  // improved by: Legaev Andrey\n  // improved by: Michael White (https://getsprink.com)\n  //   example 1: is_object('23')\n  //   returns 1: false\n  //   example 2: is_object({foo: 'bar'})\n  //   returns 2: true\n  //   example 3: is_object(null)\n  //   returns 3: false\n\n  if (Object.prototype.toString.call(mixedVar) === '[object Array]') {\n    return false\n  }\n  return mixedVar !== null && typeof mixedVar === 'object'\n}\n","module.exports = function is_real (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: https://locutus.io/php/is_real/\n  // original by: Brett Zamir (https://brett-zamir.me)\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: is_real(186.31)\n  //   returns 1: true\n\n  const _isFloat = require('../var/is_float')\n  return _isFloat(mixedVar)\n}\n","module.exports = function is_scalar (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: https://locutus.io/php/is_scalar/\n  // original by: Paulo Freitas\n  //   example 1: is_scalar(186.31)\n  //   returns 1: true\n  //   example 2: is_scalar({0: 'Kevin van Zonneveld'})\n  //   returns 2: false\n\n  return (/boolean|number|string/).test(typeof mixedVar)\n}\n","module.exports = function is_string (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: https://locutus.io/php/is_string/\n  // original by: Kevin van Zonneveld (https://kvz.io)\n  //   example 1: is_string('23')\n  //   returns 1: true\n  //   example 2: is_string(23.5)\n  //   returns 2: false\n\n  return (typeof mixedVar === 'string')\n}\n","module.exports = function is_unicode (vr) { // eslint-disable-line camelcase\n  //  discuss at: https://locutus.io/php/is_unicode/\n  // original by: Brett Zamir (https://brett-zamir.me)\n  //      note 1: Almost all strings in JavaScript should be Unicode\n  //   example 1: is_unicode('We the peoples of the United Nations...!')\n  //   returns 1: true\n\n  if (typeof vr !== 'string') {\n    return false\n  }\n\n  // If surrogates occur outside of high-low pairs, then this is not Unicode\n  let arr = []\n  const highSurrogate = '[\\uD800-\\uDBFF]'\n  const lowSurrogate = '[\\uDC00-\\uDFFF]'\n  const highSurrogateBeforeAny = new RegExp(highSurrogate + '([\\\\s\\\\S])', 'g')\n  const lowSurrogateAfterAny = new RegExp('([\\\\s\\\\S])' + lowSurrogate, 'g')\n  const singleLowSurrogate = new RegExp('^' + lowSurrogate + '$')\n  const singleHighSurrogate = new RegExp('^' + highSurrogate + '$')\n\n  while ((arr = highSurrogateBeforeAny.exec(vr)) !== null) {\n    if (!arr[1] || !arr[1].match(singleLowSurrogate)) {\n      // If high not followed by low surrogate\n      return false\n    }\n  }\n  while ((arr = lowSurrogateAfterAny.exec(vr)) !== null) {\n    if (!arr[1] || !arr[1].match(singleHighSurrogate)) {\n      // If low not preceded by high surrogate\n      return false\n    }\n  }\n\n  return true\n}\n","module.exports = function isset () {\n  //  discuss at: https://locutus.io/php/isset/\n  // original by: Kevin van Zonneveld (https://kvz.io)\n  // improved by: FremyCompany\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Rafał Kukawski (https://blog.kukawski.pl)\n  //   example 1: isset( undefined, true)\n  //   returns 1: false\n  //   example 2: isset( 'Kevin van Zonneveld' )\n  //   returns 2: true\n\n  const a = arguments\n  const l = a.length\n  let i = 0\n  let undef\n\n  if (l === 0) {\n    throw new Error('Empty isset')\n  }\n\n  while (i !== l) {\n    if (a[i] === undef || a[i] === null) {\n      return false\n    }\n    i++\n  }\n\n  return true\n}\n","module.exports = function print_r (array, returnVal) { // eslint-disable-line camelcase\n  //  discuss at: https://locutus.io/php/print_r/\n  // original by: Michael White (https://getsprink.com)\n  // improved by: Ben Bryan\n  // improved by: Brett Zamir (https://brett-zamir.me)\n  // improved by: Kevin van Zonneveld (https://kvz.io)\n  //    input by: Brett Zamir (https://brett-zamir.me)\n  //   example 1: print_r(1, true)\n  //   returns 1: '1'\n\n  const echo = require('../strings/echo')\n\n  let output = ''\n  const padChar = ' '\n  const padVal = 4\n\n  const _repeatChar = function (len, padChar) {\n    let str = ''\n    for (let i = 0; i < len; i++) {\n      str += padChar\n    }\n    return str\n  }\n  var _formatArray = function (obj, curDepth, padVal, padChar) {\n    if (curDepth > 0) {\n      curDepth++\n    }\n\n    const basePad = _repeatChar(padVal * curDepth, padChar)\n    const thickPad = _repeatChar(padVal * (curDepth + 1), padChar)\n    let str = ''\n\n    if (typeof obj === 'object' &&\n      obj !== null &&\n      obj.constructor) {\n      str += 'Array\\n' + basePad + '(\\n'\n      for (const key in obj) {\n        if (Object.prototype.toString.call(obj[key]) === '[object Array]') {\n          str += thickPad\n          str += '['\n          str += key\n          str += '] => '\n          str += _formatArray(obj[key], curDepth + 1, padVal, padChar)\n        } else {\n          str += thickPad\n          str += '['\n          str += key\n          str += '] => '\n          str += obj[key]\n          str += '\\n'\n        }\n      }\n      str += basePad + ')\\n'\n    } else if (obj === null || obj === undefined) {\n      str = ''\n    } else {\n      // for our \"resource\" class\n      str = obj.toString()\n    }\n\n    return str\n  }\n\n  output = _formatArray(array, 0, padVal, padChar)\n\n  if (returnVal !== true) {\n    echo(output)\n    return true\n  }\n  return output\n}\n","module.exports = function echo () {\n  //  discuss at: https://locutus.io/php/echo/\n  // original by: Philip Peterson\n  // improved by: echo is bad\n  // improved by: Nate\n  // improved by: Brett Zamir (https://brett-zamir.me)\n  // improved by: Brett Zamir (https://brett-zamir.me)\n  // improved by: Brett Zamir (https://brett-zamir.me)\n  //  revised by: Der Simon (https://innerdom.sourceforge.net/)\n  // bugfixed by: Eugene Bulkin (https://doubleaw.com/)\n  // bugfixed by: Brett Zamir (https://brett-zamir.me)\n  // bugfixed by: Brett Zamir (https://brett-zamir.me)\n  // bugfixed by: EdorFaus\n  //      note 1: In 1.3.2 and earlier, this function wrote to the body of the document when it\n  //      note 1: was called in webbrowsers, in addition to supporting XUL.\n  //      note 1: This involved >100 lines of boilerplate to do this in a safe way.\n  //      note 1: Since I can't imageine a complelling use-case for this, and XUL is deprecated\n  //      note 1: I have removed this behavior in favor of just calling `console.log`\n  //      note 2: You'll see functions depends on `echo` instead of `console.log` as we'll want\n  //      note 2: to have 1 contact point to interface with the outside world, so that it's easy\n  //      note 2: to support other ways of printing output.\n  //  revised by: Kevin van Zonneveld (https://kvz.io)\n  //    input by: JB\n  //   example 1: echo('Hello world')\n  //   returns 1: undefined\n\n  const args = Array.prototype.slice.call(arguments)\n  return console.log(args.join(' '))\n}\n","module.exports = function serialize (mixedValue) {\n  //  discuss at: https://locutus.io/php/serialize/\n  // original by: Arpad Ray (mailto:arpad@php.net)\n  // improved by: Dino\n  // improved by: Le Torbi (https://www.letorbi.de/)\n  // improved by: Kevin van Zonneveld (https://kvz.io/)\n  // bugfixed by: Andrej Pavlovic\n  // bugfixed by: Garagoth\n  // bugfixed by: Russell Walker (https://www.nbill.co.uk/)\n  // bugfixed by: Jamie Beck (https://www.terabit.ca/)\n  // bugfixed by: Kevin van Zonneveld (https://kvz.io/)\n  // bugfixed by: Ben (https://benblume.co.uk/)\n  // bugfixed by: Codestar (https://codestarlive.com/)\n  // bugfixed by: idjem (https://github.com/idjem)\n  //    input by: DtTvB (https://dt.in.th/2008-09-16.string-length-in-bytes.html)\n  //    input by: Martin (https://www.erlenwiese.de/)\n  //      note 1: We feel the main purpose of this function should be to ease\n  //      note 1: the transport of data between php & js\n  //      note 1: Aiming for PHP-compatibility, we have to translate objects to arrays\n  //   example 1: serialize(['Kevin', 'van', 'Zonneveld'])\n  //   returns 1: 'a:3:{i:0;s:5:\"Kevin\";i:1;s:3:\"van\";i:2;s:9:\"Zonneveld\";}'\n  //   example 2: serialize({firstName: 'Kevin', midName: 'van'})\n  //   returns 2: 'a:2:{s:9:\"firstName\";s:5:\"Kevin\";s:7:\"midName\";s:3:\"van\";}'\n  //   example 3: serialize( {'ü': 'ü', '四': '四', '𠜎': '𠜎'})\n  //   returns 3: 'a:3:{s:2:\"ü\";s:2:\"ü\";s:3:\"四\";s:3:\"四\";s:4:\"𠜎\";s:4:\"𠜎\";}'\n\n  let val, key, okey\n  let ktype = ''\n  let vals = ''\n  let count = 0\n\n  const _utf8Size = function (str) {\n    return ~-encodeURI(str).split(/%..|./).length\n  }\n\n  const _getType = function (inp) {\n    let match\n    let key\n    let cons\n    let types\n    let type = typeof inp\n\n    if (type === 'object' && !inp) {\n      return 'null'\n    }\n\n    if (type === 'object') {\n      if (!inp.constructor) {\n        return 'object'\n      }\n      cons = inp.constructor.toString()\n      match = cons.match(/(\\w+)\\(/)\n      if (match) {\n        cons = match[1].toLowerCase()\n      }\n      types = ['boolean', 'number', 'string', 'array']\n      for (key in types) {\n        if (cons === types[key]) {\n          type = types[key]\n          break\n        }\n      }\n    }\n    return type\n  }\n\n  const type = _getType(mixedValue)\n\n  switch (type) {\n    case 'function':\n      val = ''\n      break\n    case 'boolean':\n      val = 'b:' + (mixedValue ? '1' : '0')\n      break\n    case 'number':\n      val = (Math.round(mixedValue) === mixedValue ? 'i' : 'd') + ':' + mixedValue\n      break\n    case 'string':\n      val = 's:' + _utf8Size(mixedValue) + ':\"' + mixedValue + '\"'\n      break\n    case 'array':\n    case 'object':\n      val = 'a'\n      /*\n      if (type === 'object') {\n        var objname = mixedValue.constructor.toString().match(/(\\w+)\\(\\)/);\n        if (objname === undefined) {\n          return;\n        }\n        objname[1] = serialize(objname[1]);\n        val = 'O' + objname[1].substring(1, objname[1].length - 1);\n      }\n      */\n\n      for (key in mixedValue) {\n        if (mixedValue.hasOwnProperty(key)) {\n          ktype = _getType(mixedValue[key])\n          if (ktype === 'function') {\n            continue\n          }\n\n          okey = (key.match(/^[0-9]+$/) ? parseInt(key, 10) : key)\n          vals += serialize(okey) + serialize(mixedValue[key])\n          count++\n        }\n      }\n      val += ':' + count + ':{' + vals + '}'\n      break\n    case 'undefined':\n    default:\n      // Fall-through\n      // if the JS object has a property which contains a null value,\n      // the string cannot be unserialized by PHP\n      val = 'N'\n      break\n  }\n  if (type !== 'object' && type !== 'array') {\n    val += ';'\n  }\n\n  return val\n}\n","module.exports = function strval (str) {\n  //  discuss at: https://locutus.io/php/strval/\n  // original by: Brett Zamir (https://brett-zamir.me)\n  // improved by: Kevin van Zonneveld (https://kvz.io)\n  // bugfixed by: Brett Zamir (https://brett-zamir.me)\n  //   example 1: strval({red: 1, green: 2, blue: 3, white: 4})\n  //   returns 1: 'Object'\n\n  const gettype = require('../var/gettype')\n  let type = ''\n\n  if (str === null) {\n    return ''\n  }\n\n  type = gettype(str)\n\n  // Comment out the entire switch if you want JS-like\n  // behavior instead of PHP behavior\n  switch (type) {\n    case 'boolean':\n      if (str === true) {\n        return '1'\n      }\n      return ''\n    case 'array':\n      return 'Array'\n    case 'object':\n      return 'Object'\n  }\n\n  return str\n}\n","function initCache () {\n  const store = []\n  // cache only first element, second is length to jump ahead for the parser\n  const cache = function cache (value) {\n    store.push(value[0])\n    return value\n  }\n\n  cache.get = (index) => {\n    if (index >= store.length) {\n      throw RangeError(`Can't resolve reference ${index + 1}`)\n    }\n\n    return store[index]\n  }\n\n  return cache\n}\n\nfunction expectType (str, cache) {\n  const types = /^(?:N(?=;)|[bidsSaOCrR](?=:)|[^:]+(?=:))/g\n  const type = (types.exec(str) || [])[0]\n\n  if (!type) {\n    throw SyntaxError('Invalid input: ' + str)\n  }\n\n  switch (type) {\n    case 'N':\n      return cache([null, 2])\n    case 'b':\n      return cache(expectBool(str))\n    case 'i':\n      return cache(expectInt(str))\n    case 'd':\n      return cache(expectFloat(str))\n    case 's':\n      return cache(expectString(str))\n    case 'S':\n      return cache(expectEscapedString(str))\n    case 'a':\n      return expectArray(str, cache)\n    case 'O':\n      return expectObject(str, cache)\n    case 'C':\n      return expectClass(str, cache)\n    case 'r':\n    case 'R':\n      return expectReference(str, cache)\n    default:\n      throw SyntaxError(`Invalid or unsupported data type: ${type}`)\n  }\n}\n\nfunction expectBool (str) {\n  const reBool = /^b:([01]);/\n  const [match, boolMatch] = reBool.exec(str) || []\n\n  if (!boolMatch) {\n    throw SyntaxError('Invalid bool value, expected 0 or 1')\n  }\n\n  return [boolMatch === '1', match.length]\n}\n\nfunction expectInt (str) {\n  const reInt = /^i:([+-]?\\d+);/\n  const [match, intMatch] = reInt.exec(str) || []\n\n  if (!intMatch) {\n    throw SyntaxError('Expected an integer value')\n  }\n\n  return [parseInt(intMatch, 10), match.length]\n}\n\nfunction expectFloat (str) {\n  const reFloat = /^d:(NAN|-?INF|(?:\\d+\\.\\d*|\\d*\\.\\d+|\\d+)(?:[eE][+-]\\d+)?);/\n  const [match, floatMatch] = reFloat.exec(str) || []\n\n  if (!floatMatch) {\n    throw SyntaxError('Expected a float value')\n  }\n\n  let floatValue\n\n  switch (floatMatch) {\n    case 'NAN':\n      floatValue = Number.NaN\n      break\n    case '-INF':\n      floatValue = Number.NEGATIVE_INFINITY\n      break\n    case 'INF':\n      floatValue = Number.POSITIVE_INFINITY\n      break\n    default:\n      floatValue = parseFloat(floatMatch)\n      break\n  }\n\n  return [floatValue, match.length]\n}\n\nfunction readBytes (str, len, escapedString = false) {\n  let bytes = 0\n  let out = ''\n  let c = 0\n  const strLen = str.length\n  let wasHighSurrogate = false\n  let escapedChars = 0\n\n  while (bytes < len && c < strLen) {\n    let chr = str.charAt(c)\n    const code = chr.charCodeAt(0)\n    const isHighSurrogate = code >= 0xd800 && code <= 0xdbff\n    const isLowSurrogate = code >= 0xdc00 && code <= 0xdfff\n\n    if (escapedString && chr === '\\\\') {\n      chr = String.fromCharCode(parseInt(str.substr(c + 1, 2), 16))\n      escapedChars++\n\n      // each escaped sequence is 3 characters. Go 2 chars ahead.\n      // third character will be jumped over a few lines later\n      c += 2\n    }\n\n    c++\n\n    bytes += isHighSurrogate || (isLowSurrogate && wasHighSurrogate)\n      // if high surrogate, count 2 bytes, as expectation is to be followed by low surrogate\n      // if low surrogate preceded by high surrogate, add 2 bytes\n      ? 2\n      : code > 0x7ff\n        // otherwise low surrogate falls into this part\n        ? 3\n        : code > 0x7f\n          ? 2\n          : 1\n\n    // if high surrogate is not followed by low surrogate, add 1 more byte\n    bytes += wasHighSurrogate && !isLowSurrogate ? 1 : 0\n\n    out += chr\n    wasHighSurrogate = isHighSurrogate\n  }\n\n  return [out, bytes, escapedChars]\n}\n\nfunction expectString (str) {\n  // PHP strings consist of one-byte characters.\n  // JS uses 2 bytes with possible surrogate pairs.\n  // Serialized length of 2 is still 1 JS string character\n  const reStrLength = /^s:(\\d+):\"/g // also match the opening \" char\n  const [match, byteLenMatch] = reStrLength.exec(str) || []\n\n  if (!match) {\n    throw SyntaxError('Expected a string value')\n  }\n\n  const len = parseInt(byteLenMatch, 10)\n\n  str = str.substr(match.length)\n\n  const [strMatch, bytes] = readBytes(str, len)\n\n  if (bytes !== len) {\n    throw SyntaxError(`Expected string of ${len} bytes, but got ${bytes}`)\n  }\n\n  str = str.substr(strMatch.length)\n\n  // strict parsing, match closing \"; chars\n  if (!str.startsWith('\";')) {\n    throw SyntaxError('Expected \";')\n  }\n\n  return [strMatch, match.length + strMatch.length + 2] // skip last \";\n}\n\nfunction expectEscapedString (str) {\n  const reStrLength = /^S:(\\d+):\"/g // also match the opening \" char\n  const [match, strLenMatch] = reStrLength.exec(str) || []\n\n  if (!match) {\n    throw SyntaxError('Expected an escaped string value')\n  }\n\n  const len = parseInt(strLenMatch, 10)\n\n  str = str.substr(match.length)\n\n  const [strMatch, bytes, escapedChars] = readBytes(str, len, true)\n\n  if (bytes !== len) {\n    throw SyntaxError(`Expected escaped string of ${len} bytes, but got ${bytes}`)\n  }\n\n  str = str.substr(strMatch.length + escapedChars * 2)\n\n  // strict parsing, match closing \"; chars\n  if (!str.startsWith('\";')) {\n    throw SyntaxError('Expected \";')\n  }\n\n  return [strMatch, match.length + strMatch.length + 2] // skip last \";\n}\n\nfunction expectKeyOrIndex (str) {\n  try {\n    return expectString(str)\n  } catch (err) {}\n\n  try {\n    return expectEscapedString(str)\n  } catch (err) {}\n\n  try {\n    return expectInt(str)\n  } catch (err) {\n    throw SyntaxError('Expected key or index')\n  }\n}\n\nfunction expectObject (str, cache) {\n  // O:<class name length>:\"class name\":<prop count>:{<props and values>}\n  // O:8:\"stdClass\":2:{s:3:\"foo\";s:3:\"bar\";s:3:\"bar\";s:3:\"baz\";}\n  const reObjectLiteral = /^O:(\\d+):\"([^\"]+)\":(\\d+):\\{/\n  const [objectLiteralBeginMatch, /* classNameLengthMatch */, className, propCountMatch] = reObjectLiteral.exec(str) || []\n\n  if (!objectLiteralBeginMatch) {\n    throw SyntaxError('Invalid input')\n  }\n\n  if (className !== 'stdClass') {\n    throw SyntaxError(`Unsupported object type: ${className}`)\n  }\n\n  let totalOffset = objectLiteralBeginMatch.length\n\n  const propCount = parseInt(propCountMatch, 10)\n  const obj = {}\n  cache([obj])\n\n  str = str.substr(totalOffset)\n\n  for (let i = 0; i < propCount; i++) {\n    const prop = expectKeyOrIndex(str)\n    str = str.substr(prop[1])\n    totalOffset += prop[1]\n\n    const value = expectType(str, cache)\n    str = str.substr(value[1])\n    totalOffset += value[1]\n\n    obj[prop[0]] = value[0]\n  }\n\n  // strict parsing, expect } after object literal\n  if (str.charAt(0) !== '}') {\n    throw SyntaxError('Expected }')\n  }\n\n  return [obj, totalOffset + 1] // skip final }\n}\n\nfunction expectClass (str, cache) {\n  // can't be well supported, because requires calling eval (or similar)\n  // in order to call serialized constructor name\n  // which is unsafe\n  // or assume that constructor is defined in global scope\n  // but this is too much limiting\n  throw Error('Not yet implemented')\n}\n\nfunction expectReference (str, cache) {\n  const reRef = /^[rR]:([1-9]\\d*);/\n  const [match, refIndex] = reRef.exec(str) || []\n\n  if (!match) {\n    throw SyntaxError('Expected reference value')\n  }\n\n  return [cache.get(parseInt(refIndex, 10) - 1), match.length]\n}\n\nfunction expectArray (str, cache) {\n  const reArrayLength = /^a:(\\d+):{/\n  const [arrayLiteralBeginMatch, arrayLengthMatch] = reArrayLength.exec(str) || []\n\n  if (!arrayLengthMatch) {\n    throw SyntaxError('Expected array length annotation')\n  }\n\n  str = str.substr(arrayLiteralBeginMatch.length)\n\n  const array = expectArrayItems(str, parseInt(arrayLengthMatch, 10), cache)\n\n  // strict parsing, expect closing } brace after array literal\n  if (str.charAt(array[1]) !== '}') {\n    throw SyntaxError('Expected }')\n  }\n\n  return [array[0], arrayLiteralBeginMatch.length + array[1] + 1] // jump over }\n}\n\nfunction expectArrayItems (str, expectedItems = 0, cache) {\n  let key\n  let hasStringKeys = false\n  let item\n  let totalOffset = 0\n  let items = []\n  cache([items])\n\n  for (let i = 0; i < expectedItems; i++) {\n    key = expectKeyOrIndex(str)\n\n    // this is for backward compatibility with previous implementation\n    if (!hasStringKeys) {\n      hasStringKeys = (typeof key[0] === 'string')\n    }\n\n    str = str.substr(key[1])\n    totalOffset += key[1]\n\n    // references are resolved immediately, so if duplicate key overwrites previous array index\n    // the old value is anyway resolved\n    // fixme: but next time the same reference should point to the new value\n    item = expectType(str, cache)\n    str = str.substr(item[1])\n    totalOffset += item[1]\n\n    items[key[0]] = item[0]\n  }\n\n  // this is for backward compatibility with previous implementation\n  if (hasStringKeys) {\n    items = Object.assign({}, items)\n  }\n\n  return [items, totalOffset]\n}\n\nmodule.exports = function unserialize (str) {\n  //       discuss at: https://locutus.io/php/unserialize/\n  //      original by: Arpad Ray (mailto:arpad@php.net)\n  //      improved by: Pedro Tainha (https://www.pedrotainha.com)\n  //      improved by: Kevin van Zonneveld (https://kvz.io)\n  //      improved by: Kevin van Zonneveld (https://kvz.io)\n  //      improved by: Chris\n  //      improved by: James\n  //      improved by: Le Torbi\n  //      improved by: Eli Skeggs\n  //      bugfixed by: dptr1988\n  //      bugfixed by: Kevin van Zonneveld (https://kvz.io)\n  //      bugfixed by: Brett Zamir (https://brett-zamir.me)\n  //      bugfixed by: philippsimon (https://github.com/philippsimon/)\n  //       revised by: d3x\n  //         input by: Brett Zamir (https://brett-zamir.me)\n  //         input by: Martin (https://www.erlenwiese.de/)\n  //         input by: kilops\n  //         input by: Jaroslaw Czarniak\n  //         input by: lovasoa (https://github.com/lovasoa/)\n  //      improved by: Rafał Kukawski\n  // reimplemented by: Rafał Kukawski\n  //           note 1: We feel the main purpose of this function should be\n  //           note 1: to ease the transport of data between php & js\n  //           note 1: Aiming for PHP-compatibility, we have to translate objects to arrays\n  //        example 1: unserialize('a:3:{i:0;s:5:\"Kevin\";i:1;s:3:\"van\";i:2;s:9:\"Zonneveld\";}')\n  //        returns 1: ['Kevin', 'van', 'Zonneveld']\n  //        example 2: unserialize('a:2:{s:9:\"firstName\";s:5:\"Kevin\";s:7:\"midName\";s:3:\"van\";}')\n  //        returns 2: {firstName: 'Kevin', midName: 'van'}\n  //        example 3: unserialize('a:3:{s:2:\"ü\";s:2:\"ü\";s:3:\"四\";s:3:\"四\";s:4:\"𠜎\";s:4:\"𠜎\";}')\n  //        returns 3: {'ü': 'ü', '四': '四', '𠜎': '𠜎'}\n  //        example 4: unserialize(undefined)\n  //        returns 4: false\n  //        example 5: unserialize('O:8:\"stdClass\":1:{s:3:\"foo\";b:1;}')\n  //        returns 5: { foo: true }\n  //        example 6: unserialize('a:2:{i:0;N;i:1;s:0:\"\";}')\n  //        returns 6: [null, \"\"]\n  //        example 7: unserialize('S:7:\"\\\\65\\\\73\\\\63\\\\61\\\\70\\\\65\\\\64\";')\n  //        returns 7: 'escaped'\n\n  try {\n    if (typeof str !== 'string') {\n      return false\n    }\n\n    return expectType(str, initCache())[0]\n  } catch (err) {\n    console.error(err)\n    return false\n  }\n}\n","module.exports = function var_dump () { // eslint-disable-line camelcase\n  //  discuss at: https://locutus.io/php/var_dump/\n  // original by: Brett Zamir (https://brett-zamir.me)\n  // improved by: Zahlii\n  // improved by: Brett Zamir (https://brett-zamir.me)\n  //      note 1: For returning a string, use var_export() with the second argument set to true\n  //        test: skip-all\n  //   example 1: var_dump(1)\n  //   returns 1: 'int(1)'\n\n  const echo = require('../strings/echo')\n  let output = ''\n  const padChar = ' '\n  const padVal = 4\n  let lgth = 0\n  let i = 0\n\n  const _getFuncName = function (fn) {\n    const name = (/\\W*function\\s+([\\w$]+)\\s*\\(/)\n      .exec(fn)\n    if (!name) {\n      return '(Anonymous)'\n    }\n    return name[1]\n  }\n\n  const _repeatChar = function (len, padChar) {\n    let str = ''\n    for (let i = 0; i < len; i++) {\n      str += padChar\n    }\n    return str\n  }\n  const _getInnerVal = function (val, thickPad) {\n    let ret = ''\n    if (val === null) {\n      ret = 'NULL'\n    } else if (typeof val === 'boolean') {\n      ret = 'bool(' + val + ')'\n    } else if (typeof val === 'string') {\n      ret = 'string(' + val.length + ') \"' + val + '\"'\n    } else if (typeof val === 'number') {\n      if (parseFloat(val) === parseInt(val, 10)) {\n        ret = 'int(' + val + ')'\n      } else {\n        ret = 'float(' + val + ')'\n      }\n    } else if (typeof val === 'undefined') {\n      // The remaining are not PHP behavior because these values\n      // only exist in this exact form in JavaScript\n      ret = 'undefined'\n    } else if (typeof val === 'function') {\n      const funcLines = val.toString()\n        .split('\\n')\n      ret = ''\n      for (let i = 0, fll = funcLines.length; i < fll; i++) {\n        ret += (i !== 0 ? '\\n' + thickPad : '') + funcLines[i]\n      }\n    } else if (val instanceof Date) {\n      ret = 'Date(' + val + ')'\n    } else if (val instanceof RegExp) {\n      ret = 'RegExp(' + val + ')'\n    } else if (val.nodeName) {\n      // Different than PHP's DOMElement\n      switch (val.nodeType) {\n        case 1:\n          if (typeof val.namespaceURI === 'undefined' ||\n            val.namespaceURI === 'https://www.w3.org/1999/xhtml') {\n          // Undefined namespace could be plain XML, but namespaceURI not widely supported\n            ret = 'HTMLElement(\"' + val.nodeName + '\")'\n          } else {\n            ret = 'XML Element(\"' + val.nodeName + '\")'\n          }\n          break\n        case 2:\n          ret = 'ATTRIBUTE_NODE(' + val.nodeName + ')'\n          break\n        case 3:\n          ret = 'TEXT_NODE(' + val.nodeValue + ')'\n          break\n        case 4:\n          ret = 'CDATA_SECTION_NODE(' + val.nodeValue + ')'\n          break\n        case 5:\n          ret = 'ENTITY_REFERENCE_NODE'\n          break\n        case 6:\n          ret = 'ENTITY_NODE'\n          break\n        case 7:\n          ret = 'PROCESSING_INSTRUCTION_NODE(' + val.nodeName + ':' + val.nodeValue + ')'\n          break\n        case 8:\n          ret = 'COMMENT_NODE(' + val.nodeValue + ')'\n          break\n        case 9:\n          ret = 'DOCUMENT_NODE'\n          break\n        case 10:\n          ret = 'DOCUMENT_TYPE_NODE'\n          break\n        case 11:\n          ret = 'DOCUMENT_FRAGMENT_NODE'\n          break\n        case 12:\n          ret = 'NOTATION_NODE'\n          break\n      }\n    }\n    return ret\n  }\n\n  var _formatArray = function (obj, curDepth, padVal, padChar) {\n    if (curDepth > 0) {\n      curDepth++\n    }\n\n    const basePad = _repeatChar(padVal * (curDepth - 1), padChar)\n    const thickPad = _repeatChar(padVal * (curDepth + 1), padChar)\n    let str = ''\n    let val = ''\n\n    if (typeof obj === 'object' && obj !== null) {\n      if (obj.constructor && _getFuncName(obj.constructor) === 'LOCUTUS_Resource') {\n        return obj.var_dump()\n      }\n      lgth = 0\n      for (const someProp in obj) {\n        if (obj.hasOwnProperty(someProp)) {\n          lgth++\n        }\n      }\n      str += 'array(' + lgth + ') {\\n'\n      for (const key in obj) {\n        const objVal = obj[key]\n        if (typeof objVal === 'object' &&\n          objVal !== null &&\n          !(objVal instanceof Date) &&\n          !(objVal instanceof RegExp) &&\n          !objVal.nodeName) {\n          str += thickPad\n          str += '['\n          str += key\n          str += '] =>\\n'\n          str += thickPad\n          str += _formatArray(objVal, curDepth + 1, padVal, padChar)\n        } else {\n          val = _getInnerVal(objVal, thickPad)\n          str += thickPad\n          str += '['\n          str += key\n          str += '] =>\\n'\n          str += thickPad\n          str += val\n          str += '\\n'\n        }\n      }\n      str += basePad + '}\\n'\n    } else {\n      str = _getInnerVal(obj, thickPad)\n    }\n    return str\n  }\n\n  output = _formatArray(arguments[0], 0, padVal, padChar)\n  for (i = 1; i < arguments.length; i++) {\n    output += '\\n' + _formatArray(arguments[i], 0, padVal, padChar)\n  }\n\n  echo(output)\n\n  // Not how PHP does it, but helps us test:\n  return output\n}\n","module.exports = function var_export (mixedExpression, boolReturn) { // eslint-disable-line camelcase\n  //  discuss at: https://locutus.io/php/var_export/\n  // original by: Philip Peterson\n  // improved by: johnrembo\n  // improved by: Brett Zamir (https://brett-zamir.me)\n  //    input by: Brian Tafoya (https://www.premasolutions.com/)\n  //    input by: Hans Henrik (https://hanshenrik.tk/)\n  // bugfixed by: Brett Zamir (https://brett-zamir.me)\n  // bugfixed by: Brett Zamir (https://brett-zamir.me)\n  // bugfixed by: simivar (https://github.com/simivar)\n  // bugfixed by: simivar (https://github.com/simivar)\n  // bugfixed by: simivar (https://github.com/simivar)\n  //   example 1: var_export(null)\n  //   returns 1: null\n  //   example 2: var_export({0: 'Kevin', 1: 'van', 2: 'Zonneveld'}, true)\n  //   returns 2: \"array (\\n  0 => 'Kevin',\\n  1 => 'van',\\n  2 => 'Zonneveld',\\n)\"\n  //   example 3: var data = 'Kevin'\n  //   example 3: var_export(data, true)\n  //   returns 3: \"'Kevin'\"\n  //   example 4: var_export({0: 'Kevin', 1: 'van', 'lastName': 'Zonneveld'}, true)\n  //   returns 4: \"array (\\n  0 => 'Kevin',\\n  1 => 'van',\\n  'lastName' => 'Zonneveld',\\n)\"\n  //   example 5: var_export([], true)\n  //   returns 5: \"array (\\n)\"\n  //   example 6: var_export({ test: [ 'a', 'b' ] }, true)\n  //   returns 6: \"array (\\n  'test' =>\\n  array (\\n    0 => 'a',\\n    1 => 'b',\\n  ),\\n)\"\n\n  const echo = require('../strings/echo')\n  let retstr = ''\n  let iret = ''\n  let value\n  let cnt = 0\n  const x = []\n  let i = 0\n  let funcParts = []\n  // We use the last argument (not part of PHP) to pass in\n  // our indentation level\n  const idtLevel = arguments[2] || 2\n  let innerIndent = ''\n  let outerIndent = ''\n  const getFuncName = function (fn) {\n    const name = (/\\W*function\\s+([\\w$]+)\\s*\\(/).exec(fn)\n    if (!name) {\n      return '(Anonymous)'\n    }\n    return name[1]\n  }\n\n  const _isNormalInteger = function (string) {\n    const number = Math.floor(Number(string))\n    return number !== Infinity && String(number) === string && number >= 0\n  }\n\n  const _makeIndent = function (idtLevel) {\n    return (new Array(idtLevel + 1))\n      .join(' ')\n  }\n  const __getType = function (inp) {\n    let i = 0\n    let match\n    let types\n    let cons\n    let type = typeof inp\n    if (type === 'object' && (inp && inp.constructor) &&\n      getFuncName(inp.constructor) === 'LOCUTUS_Resource') {\n      return 'resource'\n    }\n    if (type === 'function') {\n      return 'function'\n    }\n    if (type === 'object' && !inp) {\n      // Should this be just null?\n      return 'null'\n    }\n    if (type === 'object') {\n      if (!inp.constructor) {\n        return 'object'\n      }\n      cons = inp.constructor.toString()\n      match = cons.match(/(\\w+)\\(/)\n      if (match) {\n        cons = match[1].toLowerCase()\n      }\n      types = ['boolean', 'number', 'string', 'array']\n      for (i = 0; i < types.length; i++) {\n        if (cons === types[i]) {\n          type = types[i]\n          break\n        }\n      }\n    }\n    return type\n  }\n  const type = __getType(mixedExpression)\n\n  if (type === null) {\n    retstr = 'NULL'\n  } else if (type === 'array' || type === 'object') {\n    outerIndent = _makeIndent(idtLevel - 2)\n    innerIndent = _makeIndent(idtLevel)\n    for (i in mixedExpression) {\n      value = ' '\n      const subtype = __getType(mixedExpression[i])\n      if (subtype === 'array' || subtype === 'object') {\n        value = '\\n'\n      }\n      value += var_export(mixedExpression[i], 1, idtLevel + 2)\n      i = _isNormalInteger(i) ? i : `'${i}'`\n      x[cnt++] = innerIndent + i + ' =>' + value\n    }\n    if (x.length > 0) {\n      iret = x.join(',\\n') + ',\\n'\n    }\n    retstr = outerIndent + 'array (\\n' + iret + outerIndent + ')'\n  } else if (type === 'function') {\n    funcParts = mixedExpression.toString().match(/function .*?\\((.*?)\\) \\{([\\s\\S]*)\\}/)\n\n    // For lambda functions, var_export() outputs such as the following:\n    // '\\000lambda_1'. Since it will probably not be a common use to\n    // expect this (unhelpful) form, we'll use another PHP-exportable\n    // construct, create_function() (though dollar signs must be on the\n    // variables in JavaScript); if using instead in JavaScript and you\n    // are using the namespaced version, note that create_function() will\n    // not be available as a global\n    retstr = \"create_function ('\" + funcParts[1] + \"', '\" +\n      funcParts[2].replace(new RegExp(\"'\", 'g'), \"\\\\'\") + \"')\"\n  } else if (type === 'resource') {\n    // Resources treated as null for var_export\n    retstr = 'NULL'\n  } else {\n    retstr = typeof mixedExpression !== 'string' ? mixedExpression\n      : \"'\" + mixedExpression.replace(/([\"'])/g, '\\\\$1').replace(/\\0/g, '\\\\0') + \"'\"\n  }\n\n  if (!boolReturn) {\n    echo(retstr)\n    return null\n  }\n\n  return retstr\n}\n","\r\nimport {h} from 'hyperapp';\r\nimport { is_array } from 'locutus/php/var';\r\n\r\nexport const tnOnCreate = (el) => {\r\n  var tid = null\r\n  el.classList.add('wq-is-created')\r\n  window.setTimeout(() => {\r\n    el.classList.add('wq-is-run')\r\n    el.classList.remove('wq-is-created')\r\n    el.addEventListener('transitionend', () => {\r\n      el.classList.remove('wq-is-run')\r\n      window.clearTimeout(tid)\r\n    }, {once:true})\r\n    tid = window.setTimeout(() => {\r\n      el.classList.remove('wq-is-run')\r\n    }, 3000)\r\n  }, 50)\r\n}\r\n\r\nexport const tnOnRemove = (el, done) => {\r\n  var tid = null\r\n  el.classList.add('wq-is-run')\r\n  window.setTimeout(() => {\r\n    el.classList.add('wq-is-removed')\r\n    el.addEventListener('transitionend', () => {\r\n      try {\r\n        el.classList.remove('wq-is-run')\r\n        window.clearTimeout(tid)\r\n        done()\r\n      } catch (ex) {\r\n        // ignore\r\n      }\r\n    })\r\n  }, 50)\r\n  tid = window.setTimeout(() => {\r\n    try {\r\n      done()\r\n    } catch (ev) {\r\n      // ignore\r\n    }\r\n  }, 3000)\r\n}\r\n\r\nconst extractMessage = e => {\r\n  // 1つのプロパティに複数のエラーが出る場合がある。\r\n  // その場合、最後のエラーを表示する。\r\n  // ただし、anyOfに関するエラーは除外する。\r\n  return e.message.indexOf('should match pattern') === 0 ? 'should match pattern' : \r\n         e.message === 'should match some schema in anyOf' ? null : e.message\r\n}\r\n\r\nexport const createMessages = (es) => {\r\n  return es.reduce((ms, e) => {\r\n    const msg = extractMessage(e)\r\n    if (msg === null) return ms\r\n    else return {...ms, [e.dataPath]:msg}\r\n  }, {})\r\n}\r\n\r\nexport const updateMessages = (ms, path, es) => {\r\n  const es2 = (es === null) ? [] : es.filter(e => e.dataPath == path)\r\n  if (es2.length == 0) {\r\n    // delete\r\n    const ms2 = {...ms}\r\n    delete ms2[path]\r\n    return ms2\r\n  } else {\r\n    // replace\r\n    return es.reduce((ms, e) => {\r\n      const msg = extractMessage(e)\r\n      if (msg === null) return ms\r\n      else return {...ms, [path]:msg}\r\n    }, ms)\r\n  }\r\n}\r\n\r\nconst br = {nodeName:'br', attributes:{}, children:[]}\r\n\r\nexport const strToVdom = (x) => {\r\n  const lines = x.split('\\n')\r\n  if (lines.length == 1) return lines[0]\r\n  \r\n  return lines.reduce((cur, line) => {\r\n    return (cur.length == 0) ? [line] : [...cur, br, line]\r\n  }, [])\r\n}\r\n\r\nexport const translate = (catalog) => (x) => {\r\n  if (typeof x == 'undefined') return null\r\n  if (catalog.hasOwnProperty(x)) {\r\n    return catalog[x]\r\n  } else {\r\n    console.log('TO TRANSLATE: ', x);\r\n    return x;\r\n  }\r\n}\r\n\r\nexport const deepCopy = (x) => JSON.parse(JSON.stringify(x))\r\n\r\nexport const Message = (props, children) => {\r\n  if (children.length == 0) return null\r\n  if (props.hasOwnProperty('id')) {\r\n    props.key = props.id\r\n  }\r\n  return (\r\n    <div class=\"wq-Message\" {...props}>{children}</div>\r\n  )\r\n}\r\n\r\nexport const Image = (\r\n    {\r\n      src, \r\n      scaling = 'center', \r\n      alt = '', \r\n      title = null\r\n    }) => {\r\n  const style = {backgroundImage: \"url(\"+src+\")\"}\r\n  return (\r\n    <div class={`wq-Image wq-scaling-${scaling}`} style={style} title={title}>\r\n      <img src={src} alt={alt} class=\"wq--img\" />\r\n    </div> \r\n  )\r\n}\r\n\r\nconst isViewable = (name) => {\r\n  const i = name.lastIndexOf('.')\r\n  const ext = name.slice(i + 1).trim().toLowerCase()\r\n  return \" jpeg jpg gif png \".includes(ext)\r\n}\r\nexport const File = (\r\n    {\r\n      url, \r\n      name, \r\n      ...props\r\n    }\r\n) => {\r\n  const viewable = url && isViewable(name)\r\n  return (\r\n    <div class={`wq-File ${viewable ? 'wq-is-viewable' : ''}`} {...props}>\r\n      {viewable ? (\r\n        <Image src={url} alt={name} scaling=\"cover\" xclass=\"wq-belongs-file\" title={name} />\r\n      ) : null}\r\n      <div class=\"wq--filename\" title={name}>{name}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const focusErrorInput = (es) => {\r\n  if (es.length == 0) return;\r\n  const name = es[0].dataPath.slice(1);\r\n  const elems = document.getElementsByName(name);\r\n  if (elems.length == 0) return;\r\n  elems[0].focus();\r\n}\r\n\r\nexport const mapHash = (f, hash) => {\r\n  const rv = {}\r\n  for (let p in hash) {\r\n    rv[p] = f(p, hash[p])\r\n  }\r\n  return rv\r\n}\r\n\r\nexport const reduceHash = (f, cur, hash) => {\r\n  for (let key in hash) {\r\n    cur = f(cur, key, hash[key])\r\n  }\r\n  return cur\r\n}\r\n\r\nexport const appendVars = (bindings, vars) => {\r\n  return vars.map(v => {\r\n    const b = findByProp('sym', v.sym, bindings)\r\n    if (b) {\r\n      return b\r\n    } else {\r\n      return {sym:v.sym, ref:-1}\r\n    }\r\n  })\r\n}\r\n\r\nexport const branchNo = (name, sep) => {\r\n  const off = name.lastIndexOf(sep)\r\n  const fragment = name.slice(off + 1)\r\n  return parseInt(fragment)\r\n}\r\n\r\nexport const findByProp = (name, val, arr) => {\r\n  const len = arr.length\r\n  for (let i = 0; i < len; i++) {\r\n    if (arr[i][name] == val) return arr[i]\r\n  }\r\n  return undefined\r\n}\r\n\r\nexport const findIndexByProp = (name, val, arr) => {\r\n  const len = arr.length\r\n  for (let i = 0; i < len; i++) {\r\n    if (arr[i][name] == val) return i\r\n  }\r\n  return -1\r\n}\r\n\r\nexport const lmove = (arr, from, to) => {\r\n  const item = arr[from]\r\n  const arr2 = arr.filter((e, i) => i != from)\r\n  arr2.splice(to, 0, item)\r\n  return arr2\r\n}\r\n\r\nexport const linsert = (arr, idx, e) => {\r\n  const arr2 = arr.reduce((cur, e0, i) => {\r\n    if (i == idx) {\r\n      return [...cur, e, e0]\r\n    } else {\r\n      return [...cur, e0]\r\n    }\r\n  }, [])\r\n  if (arr2.length == idx) {\r\n    arr2.push(e)\r\n  }\r\n  return arr2\r\n}\r\n\r\nexport const lremove = (arr, from) => {\r\n  arr = arr.filter((e, i) => i != from)\r\n  return arr\r\n}\r\n\r\nexport const lreplace = (arr, idx, e) => {\r\n  return arr.map((e0, i) => (i == idx) ? e : e0)\r\n}\r\n\r\nexport const joinSet = (set, glue) => {\r\n  let rv = ''\r\n  let isTail = false\r\n  for (let key in set) {\r\n    if (isTail) rv += glue\r\n    rv += key\r\n    isTail = true\r\n  }\r\n  return rv\r\n}\r\n\r\nexport const scrollToTop = () => {\r\n  const c = document.documentElement.scrollTop || document.body.scrollTop;\r\n  if (c > 0) {\r\n    const diff = Math.max(c / 8, 4)\r\n    window.requestAnimationFrame(scrollToTop);\r\n    window.scrollTo(0, c - diff);\r\n  }\r\n};\r\n\r\nexport function sprintf(format) {\r\n  var args = arguments;\r\n  var offset = 1;\r\n  return format.replace(/%([0-9]\\$)?([^0-9])/g, function (match, f1, f2) {\r\n    if (f2 == '%') {\r\n      return '%';\r\n    } else if (f2 == 's') {\r\n      if (! f1) {\r\n        return args[offset++];\r\n      } else {\r\n        return args[f1.slice(0, 1)];\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport const makeParser = (_T) => {\r\n  const opMap = {\r\n    '+': {prec:3, alignL:true}, \r\n    '-': {prec:3, alignL:true}, \r\n    '*': {prec:4, alignL:true}, \r\n    '/': {prec:4, alignL:true}, \r\n    '^': {prec:5, alignL:false}, \r\n    '=': {prec:10, alignL:true}, \r\n    '<>': {prec:10, alignL:true}, \r\n    '>=': {prec:10, alignL:true}, \r\n    '<=': {prec:10, alignL:true}, \r\n    '>': {prec:10, alignL:true}, \r\n    '<': {prec:10, alignL:true}\r\n  }\r\n  const funMap = {\r\n    'IFERROR': {minArity:2, maxArity:2}, \r\n    'ROUND': {minArity:2, maxArity:2}, \r\n    'ROUNDDOWN': {minArity:2, maxArity:2}, \r\n    'ROUNDUP': {minArity:2, maxArity:2}, \r\n    'TRUNC': {minArity:1, maxArity:2}, \r\n    'INT': {minArity:1, maxArity:1}, \r\n    'ABS': {minArity:1, maxArity:1}, \r\n    'SIGN': {minArity:1, maxArity:1}, \r\n    'QUOTIENT': {minArity:2, maxArity:2}, \r\n    'MOD': {minArity:2, maxArity:2}, \r\n    'MIN': {minArity:1, maxArity:255}, \r\n    'MAX': {minArity:1, maxArity:255}, \r\n    'SWITCH': {minArity:1, maxArity:255}, \r\n    'IF': {minArity:3, maxArity:3}, \r\n    'AND': {minArity:1, maxArity:255}, \r\n    'OR': {minArity:1, maxArity:255}, \r\n    'XOR': {minArity:1, maxArity:255}, \r\n    'NOT': {minArity:1, maxArity:1}\r\n  }\r\n  const reSp = /\\s+/y\r\n  const reOp = /[<>=\\+\\-\\*/\\^]+/y\r\n  const reLit = /-?[0-9]+(\\.[0-9]+)?/y\r\n  const reVar = /[a-zA-Z][0-9a-zA-Z-_]*/y\r\n  const reSep = /[\\(\\),]/y\r\n  const reLab = /\"([^\"]*)\"/y\r\n  const reLabEntry = /^[a-zA-Z0-9-_]+$/\r\n\r\n  const compileSet = (csv) => {\r\n    const rv = {}\r\n    csv.split(',').forEach(label => {\r\n      label = label.trim()\r\n      const b = label[0] != \"!\"\r\n      if (! b) label = label.slice(1)\r\n      if (! reLabEntry.test(label)) {\r\n        throw sprintf(_T('unexpected character around: %s'), label)\r\n      }\r\n      rv[label] = b\r\n    })\r\n    return rv\r\n  }\r\n\r\n  const uncompileSet = (set) => {\r\n    return Object.keys(set).map(label => set[label] ? label : ('!'+label)).join(', ')\r\n  }\r\n\r\n  const tokenize = (str) => {\r\n    const len = str.length\r\n    const rv = []\r\n    let ms\r\n    let off = 0\r\n\r\n    while (off < len) {\r\n      // skip spaces\r\n      reSp.lastIndex = off\r\n      if (reSp.exec(str)) {\r\n        off = reSp.lastIndex\r\n      }\r\n\r\n      if (off >= len) break\r\n\r\n      reLit.lastIndex = off\r\n      if (ms = reLit.exec(str)) {\r\n        rv.push({type:'LIT', word:+ms[0], off})\r\n        off = reLit.lastIndex\r\n        continue\r\n      }\r\n\r\n      reVar.lastIndex = off\r\n      if (ms = reVar.exec(str)) {\r\n        rv.push({type:'VAR', word:ms[0].toUpperCase(), off})\r\n        off = reVar.lastIndex\r\n        continue\r\n      }\r\n\r\n      reLab.lastIndex = off\r\n      if (ms = reLab.exec(str)) {\r\n        rv.push({type:'LAB', word:compileSet(ms[1]), off})\r\n        off = reLab.lastIndex\r\n        continue\r\n      }\r\n  \r\n      reSep.lastIndex = off\r\n      if (ms = reSep.exec(str)) {\r\n        rv.push({type:ms[0], word:ms[0], off})\r\n        off = reSep.lastIndex\r\n        continue\r\n      }\r\n\r\n      reOp.lastIndex = off\r\n      if (ms = reOp.exec(str)) {\r\n        rv.push({type:'OP', word:ms[0], off})\r\n        off = reOp.lastIndex\r\n        continue\r\n      }\r\n\r\n      // not matched\r\n      throw sprintf(_T('unexpected character around: %s'), str.slice(off, off + 6))\r\n    }\r\n\r\n    rv.push({type:'$', word:'end-of-line', off})\r\n    return rv\r\n  }\r\n\r\n  const error = (et, tok) => {\r\n    if (tok.type == '$') {\r\n      throw sprintf(_T('%s: end of expression'), _T(et))\r\n    } else {\r\n      const word = (typeof tok.word == 'object') ? uncompileSet(tok.word) : tok.word\r\n      throw sprintf(_T('%s: %s at %s'), _T(et), word, tok.off)\r\n    }\r\n  }\r\n  const precedes = (op1, op2) => {\r\n    const op1spec = opMap[op1]\r\n    const op2spec = opMap[op2]\r\n    if (op1spec.prec == op2spec.prec) {\r\n      return op1spec.alignL\r\n    } else {\r\n      return (op1spec.prec > op2spec.prec)\r\n    }\r\n  }\r\n  const parse = (ts) => {\r\n    let index = 0\r\n    const vars = []\r\n    \r\n    const term = () => {\r\n      if (ts[index].type == 'VAR') {  // app or lookup\r\n        const t = ts[index++]\r\n        if (ts[index].type == '(') {  // app\r\n          if (! funMap.hasOwnProperty(t.word)) {\r\n            error('undefined function', t)\r\n          }\r\n          const ast = [t.word]\r\n          index++\r\n          ast.push(expr())\r\n          while (ts[index].type == ',') {\r\n            index++\r\n            ast.push(expr())\r\n          }\r\n          if (ts[index].type != ')') {\r\n            error('unexpected token', ts[index])\r\n          }\r\n          index++\r\n          const fun = funMap[t.word]\r\n          if (ast.length - 1 < fun.minArity) {\r\n            error('too few arguments for', t)\r\n          } else if (ast.length - 1 > fun.maxArity) {\r\n            error ('too many arguments for', t)\r\n          }\r\n          return ast\r\n\r\n        } else {  // lookup\r\n          if (! findByProp('sym', t.word, vars)) {\r\n            vars.push({sym:t.word})\r\n          }\r\n          return t.word\r\n        }\r\n\r\n      } else if (ts[index].type == 'LIT' || ts[index].type == 'LAB') {\r\n        const lit = ts[index++]\r\n        return lit.word\r\n\r\n      } else if (ts[index].type == '(') {\r\n        index++\r\n        const ast = expr()\r\n        if (ts[index].type != ')') {\r\n          error('unexpected token', ts[index])\r\n        }\r\n        index++\r\n        return ast\r\n\r\n      } else {\r\n        error('unexpected token', ts[index])\r\n      }\r\n    }\r\n    const expr = () => {\r\n      const stack = []\r\n      stack.unshift(term())\r\n      while (ts[index].type == 'OP') {\r\n        const op = ts[index++]\r\n        if (! opMap.hasOwnProperty(op.word)) {\r\n          error('unexpected operator', op)\r\n        }\r\n        const rhs = term()\r\n        if (stack.length >= 3 && precedes(stack[1], op.word)) {\r\n          const xb = stack.shift()\r\n          const xop = stack.shift()\r\n          const xa = stack.shift()\r\n          stack.unshift([xop, xa, xb])\r\n          stack.unshift(op.word)\r\n          stack.unshift(rhs)\r\n        } else {\r\n          stack.unshift(op.word)\r\n          stack.unshift(rhs)\r\n        }\r\n      }\r\n      while (stack.length > 1) {\r\n        const bx = stack.shift()\r\n        const opx = stack.shift()\r\n        const ax = stack.shift()\r\n        stack.unshift([opx, ax, bx])\r\n      }\r\n      return stack[0]\r\n    }\r\n\r\n    const ast = expr()\r\n    if (ts[index].type != '$') {\r\n      error('unexpected token', ts[index])\r\n    }\r\n    return {ast, vars}\r\n  }\r\n\r\n  return (str) => parse(tokenize(str))\r\n}\r\n\r\nconst showAst = (ast) => {\r\n  if (Array.isArray(ast)) {\r\n    return '(' + ast.map(showAst).join(' ') + ')'\r\n  } else {\r\n    return \"\" + ast\r\n  }\r\n}\r\n","\r\nimport { h, app } from 'hyperapp';\r\nimport { translate, lremove, linsert, findIndexByProp } from './admin_common';\r\n\r\nconst showDate = (ts) => {\r\n  const date = new Date(ts * 1000);\r\n  return date.toLocaleDateString(undefined)\r\n}\r\n\r\nconst submitDel = (id, url, k) => {\r\n  jQuery.ajax({\r\n    type: \"post\", \r\n    url: url, \r\n    success: function(response) {\r\n      k(id)\r\n    }, \r\n    dataType: 'json'\r\n  });\r\n}\r\n\r\nconst submitDup = (id, url, k) => {\r\n  jQuery.ajax({\r\n    type: \"post\", \r\n    url: url, \r\n    success: function(response) {\r\n      k(response)\r\n    }, \r\n    dataType: 'json'\r\n  });\r\n}\r\n\r\nconst actions = {\r\n  onDelete: (ev) => (state, actions) => {\r\n    const id = ev.currentTarget.id.split('-')[1]\r\n    if (window.confirm(_T('Do You Want To Remove This Form?'))) {\r\n      submitDel(id, delUrl.replace('placeholder', id), actions.onDeleteK)\r\n      return {...state, loading:true}\r\n    }\r\n  }, \r\n  onDeleteK: (id) => (state, actions) => {\r\n    const idx = findIndexByProp(\"id\", id, state.forms)\r\n    const forms = lremove(state.forms, idx)\r\n    return {...state, notice:'Form deleted.', loading:false, forms}\r\n  }, \r\n  onDuplicate: (ev) => (state, actions) => {\r\n    const id = ev.currentTarget.id.split('-')[1]\r\n    submitDup(id, dupUrl.replace('placeholder', id), actions.onDuplicateK)\r\n    return {...state, loading:true}\r\n  }, \r\n  onDuplicateK: ({form}) => (state, actions) => {\r\n    const forms0 = linsert(state.forms, 0, form)\r\n    forms0.sort((f0, f1) => f1.id - f0.id)  // in-place\r\n    const forms = forms0  // forms0.slice(0, -1)\r\n    return {...state, notice:'Form duplicated.', loading:false, forms}\r\n  }, \r\n  hideNotice: () => (state, actions) => {\r\n    return {...state, notice:null}\r\n  }\r\n}\r\n\r\nconst createInitialState = (forms) => {\r\n  return {\r\n    forms, \r\n    loading: false, \r\n    notice: null\r\n  }\r\n}\r\n\r\nconst view = (state, actions) => {\r\n  return (\r\n    <form>\r\n      {(state.notice) ? (\r\n        <div class=\"updated settings-error notice is-dismissible\">\r\n          <p><strong>{_T(state.notice)}</strong></p>\r\n          <button type=\"button\" class=\"notice-dismiss\" onclick={actions.hideNotice}><span class=\"screen-reader-text\">{_T('Dismiss this notice.')}</span></button>\r\n        </div>\r\n      ) : null}\r\n      <table class=\"wp-list-table widefat fixed striped\">\r\n        <thead>\r\n          <tr>\r\n            {/*<th scope=\"col\" id=\"id\" class=\"manage-column column-id\">{_T('ID')}</th>*/}\r\n            <th scope=\"col\" id=\"title\" class=\"manage-column column-title column-primary\">{_T('Title')}</th>\r\n            <th scope=\"col\" id=\"author\" class=\"manage-column column-author\">{_T('Author')}</th>\r\n            <th scope=\"col\" id=\"date\" class=\"manage-column column-date\">{_T('Date')}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody id=\"the-list\">\r\n          {state.forms.map(form => {\r\n            const thisEditUrl = editUrl.replace('placeholder', form.id)\r\n            const thisPvUrl = pvUrl.replace('placeholder', form.id)\r\n            return (\r\n              <tr id={`form-${form.id}`}>\r\n                {/*<td class=\"id column-id\">\r\n                  {form.id}\r\n            </td>*/}\r\n                <td class=\"title column-title column-primary\">\r\n                  <strong><a class=\"row-title\" href={thisEditUrl}>[{form.id}] {form.title}</a></strong>\r\n                  <div class=\"row-actions\">\r\n                    <span class=\"edit\"><a href={thisEditUrl}>{_T('Edit')}</a> | </span>\r\n                    <span class=\"duplicate\"><a href=\"javascript:void(0);\" onclick={actions.onDuplicate} id={`duplicate-${form.id}`}>{_T('Duplicate')}</a> | </span>\r\n                    <span class=\"trash\"><a href=\"javascript:void(0);\" onclick={actions.onDelete} id={`trash-${form.id}`}>{_T('Trash')}</a> | </span>\r\n                    <span class=\"my-preview\"><a href={thisPvUrl} target=\"_blank\">{_T('Preview')}</a></span>\r\n                  </div>\r\n                </td>\r\n                <td class=\"author column-author\">\r\n                  {form.author ? form.author.name : ''}\r\n                </td>\r\n                <td class=\"date column-date\">\r\n                  <abbr>{showDate(form.modified)}</abbr>\r\n                </td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst _T = translate(wqData.catalog);\r\nconst editUrl = wqData.editUrl\r\nconst delUrl = wqData.delUrl\r\nconst dupUrl = wqData.dupUrl\r\nconst pvUrl = wqData.pvUrl\r\nconst newUrl = wqData.newUrl\r\nconst allActions = app(createInitialState(wqData.forms), actions, view, document.getElementById('root'))"],"names":["$8ed3ba04fc179cbe$export$dda1d9f60106f0e9","name","attributes","rest","children","length","arguments","push","node","pop","nodeName","key","$8ed3ba04fc179cbe$export$729c8b7179294ba","state","actions","view","container","skipRender","map","rootElement","oldNode","recycleElement","element","toLowerCase","call","childNodes","nodeType","nodeValue","lifecycle","isRecycling","globalState","clone","wiredActions","wireStateToActions","path","action","data","result","getPartialState","then","scheduleRender","setPartialState","concat","resolveNode","render","patch","setTimeout","target","source","out","i","value","slice","getKey","eventListener","event","currentTarget","events","type","updateAttribute","oldValue","isSvg","style","cssText","setProperty","addEventListener","removeEventListener","setAttribute","removeAttribute","createElement","document","createTextNode","createElementNS","oncreate","appendChild","removeChildren","ondestroy","removeElement","parent","done","removeChild","cb","onremove","newElement","insertBefore","oldAttributes","onupdate","updateElement","oldKeyed","newKeyed","oldElements","oldChildren","oldKey","k","newKey","keyedNode","$94fd76f5956502bb$export$f92e24520169952c","$94fd76f5956502bb$export$7b508c7d682f38c2","$94fd76f5956502bb$export$6e22c362a0406a2c","$94fd76f5956502bb$export$f79b966f6513a4a4","$94fd76f5956502bb$export$c534b7aaec9c6541","$94fd76f5956502bb$export$518f5a7be6be2bfb","$94fd76f5956502bb$export$e11d765514e26475","$94fd76f5956502bb$export$b9e620dcd263416a","$94fd76f5956502bb$export$1b9bc6d6416d4aed","$94fd76f5956502bb$export$d557c59a3457063","$94fd76f5956502bb$export$ccde71a52e7c94a","$94fd76f5956502bb$export$73a63460674e8192","$94fd76f5956502bb$export$25686719dd720715","$94fd76f5956502bb$export$50950dbe6175720b","$94fd76f5956502bb$export$5a809a9f8c508d53","$94fd76f5956502bb$export$a7350a83df6cbf8c","$94fd76f5956502bb$export$6eb3e1aff281a120","$94fd76f5956502bb$export$5fe1d4742c8a41e2","$94fd76f5956502bb$export$167528a9b5133c2f","$94fd76f5956502bb$export$2881e3f0bcfe3fcd","$94fd76f5956502bb$export$5703b497ec3a710b","$94fd76f5956502bb$export$2a124c24c597fe41","$94fd76f5956502bb$export$8cf8222cef2855b6","$94fd76f5956502bb$export$99b9a4368c7161b7","$94fd76f5956502bb$export$b64ed8bd77067805","$94fd76f5956502bb$export$dfdc1655ccc5b9cb","$94fd76f5956502bb$export$e78e04b6df40a09a","$94fd76f5956502bb$export$768ab73e7bdda567","$94fd76f5956502bb$export$f1524ad7cc450ab","$94fd76f5956502bb$export$c539df27d2e5b467","module","mixedVar","Array","isArray","require","floatval","parseFloat","len","emptyValues","undef","$a44b8919452ee56b$var$_typeof","hasOwnProperty","isFloat","s","$38fa637141c9fd2d$var$_typeof","_getFuncName","fn","exec","propertyIsEnumerable","splice","constructor","isFinite","base","tmp","match","$1baf1a2ab504b5f6$var$_typeof","parseInt","isNaN","Math","ceil","floor","$3225d6351c6368c5$var$_typeof","_isArray","asString","Object","prototype","toString","asFunc","varname","$global","window","global","$locutus","php","ini","undefined","local_value","vr","exports","is_callable","syntaxOnly","callableName","validJSFunctionNamePattern","obj","method","validFunctionName","getFuncName","test","_typeof","eval","_isFloat","_isInt","whitespace","join","indexOf","$02e281b5cc7a169a$var$_typeof","$8d568a406c571fdb$var$_typeof","arr","highSurrogateBeforeAny","RegExp","highSurrogate","lowSurrogateAfterAny","singleLowSurrogate","singleHighSurrogate","a","l","Error","array","returnVal","output","echo","_repeatChar","padChar","str","_formatArray","curDepth","padVal","basePad","thickPad","$854204fa2f1f1dfc$var$_typeof","args","console","log","serialize","mixedValue","val","vals","count","_getType","inp","cons","types","$2f852a9ec0389f3e$var$_typeof","round","encodeURI","split","gettype","expectType","cache","SyntaxError","_ref","reBool","_ref2","$4af2013158f9b9b4$var$_slicedToArray","boolMatch","expectBool","expectInt","_ref5","reFloat","_ref6","floatMatch","floatValue","Number","NaN","NEGATIVE_INFINITY","POSITIVE_INFINITY","expectFloat","expectString","expectEscapedString","_ref15","reArrayLength","_ref16","arrayLiteralBeginMatch","arrayLengthMatch","expectedItems","hasStringKeys","item","totalOffset","items","expectKeyOrIndex","substr","assign","expectArrayItems","charAt","expectArray","_ref11","reObjectLiteral","_ref12","objectLiteralBeginMatch","className","propCountMatch","propCount","prop","expectObject","expectClass","_ref13","reRef","_ref14","refIndex","get","expectReference","_ref3","reInt","_ref4","intMatch","readBytes","escapedString","bytes","c","strLen","wasHighSurrogate","escapedChars","chr","code","charCodeAt","isHighSurrogate","isLowSurrogate","String","fromCharCode","_ref7","reStrLength","_ref8","byteLenMatch","_readBytes","_readBytes2","strMatch","startsWith","_ref9","_ref10","strLenMatch","_readBytes3","_readBytes4","err","store","index","RangeError","error","lgth","_getInnerVal","ret","funcLines","fll","Date","namespaceURI","$bcd87bd271bec04c$var$_typeof","var_dump","someProp","objVal","var_export","mixedExpression","boolReturn","retstr","iret","cnt","x","funcParts","idtLevel","innerIndent","outerIndent","_isNormalInteger","string","number","Infinity","_makeIndent","__getType","$65a8525dfd73fa7a$var$_typeof","subtype","replace","tnOnCreate","el","tid","classList","add","remove","clearTimeout","once","tnOnRemove","ex","ev","extractMessage","e","message","createMessages","es","reduce","ms","msg","$bae4c559400d352c$var$_objectSpread","$bae4c559400d352c$var$_defineProperty","dataPath","updateMessages","filter","ms2","br","strToVdom","lines","cur","line","$bae4c559400d352c$var$_toConsumableArray","translate","catalog","deepCopy","JSON","parse","stringify","Message","props","id","$bae4c559400d352c$var$_extends","class","Image","src","_ref$scaling","scaling","_ref$alt","alt","_ref$title","title","backgroundImage","isViewable","lastIndexOf","ext","trim","includes","File","url","$bae4c559400d352c$var$_objectWithoutProperties","$bae4c559400d352c$var$_excluded","viewable","$bae4c559400d352c$var$Image","xclass","focusErrorInput","elems","getElementsByName","focus","mapHash","f","hash","rv","p","reduceHash","appendVars","bindings","vars","v","b","findByProp","sym","ref","branchNo","sep","off","fragment","findIndexByProp","lmove","from","to","arr2","linsert","idx","e0","lremove","lreplace","joinSet","set","glue","isTail","scrollToTop","documentElement","scrollTop","body","diff","max","requestAnimationFrame","scrollTo","sprintf","format","offset","f1","f2","makeParser","_T","opMap","prec","alignL","funMap","IFERROR","minArity","maxArity","ROUND","ROUNDDOWN","ROUNDUP","TRUNC","INT","ABS","SIGN","QUOTIENT","MOD","MIN","MAX","SWITCH","IF","AND","OR","XOR","NOT","reSp","reOp","reLit","reVar","reSep","reLab","reLabEntry","compileSet","csv","forEach","label","et","tok","word","$bae4c559400d352c$var$_typeof","keys","ts","lastIndex","toUpperCase","tokenize","term","t","ast","expr","fun","op1","op2","op1spec","op2spec","stack","unshift","op","rhs","xb","shift","xop","xa","bx","opx","ax","showAst","showDate","toLocaleDateString","submitDel","jQuery","ajax","success","response","dataType","submitDup","onDelete","confirm","delUrl","onDeleteK","$debeee55cbf51dd6$var$_objectSpread","loading","$bae4c559400d352c$exports","forms","notice","onDuplicate","dupUrl","onDuplicateK","form","forms0","sort","f0","hideNotice","createInitialState","onclick","scope","thisEditUrl","editUrl","thisPvUrl","pvUrl","href","author","modified","wqData","newUrl","allActions","getElementById"],"version":3,"file":"admin_forms.js.map"}