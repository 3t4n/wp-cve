{"mappings":"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","sources":["node_modules/hyperapp/src/index.js","node_modules/yubinbango-core/yubinbango-core.ts","node_modules/src/php/strings/number_format.js","src/asset/front.js","src/asset/front_component.js"],"sourcesContent":["export function h(name, attributes) {\n  var rest = []\n  var children = []\n  var length = arguments.length\n\n  while (length-- > 2) rest.push(arguments[length])\n\n  while (rest.length) {\n    var node = rest.pop()\n    if (node && node.pop) {\n      for (length = node.length; length--; ) {\n        rest.push(node[length])\n      }\n    } else if (node != null && node !== true && node !== false) {\n      children.push(node)\n    }\n  }\n\n  return typeof name === \"function\"\n    ? name(attributes || {}, children)\n    : {\n        nodeName: name,\n        attributes: attributes || {},\n        children: children,\n        key: attributes && attributes.key\n      }\n}\n\nexport function app(state, actions, view, container) {\n  var map = [].map\n  var rootElement = (container && container.children[0]) || null\n  var oldNode = rootElement && recycleElement(rootElement)\n  var lifecycle = []\n  var skipRender\n  var isRecycling = true\n  var globalState = clone(state)\n  var wiredActions = wireStateToActions([], globalState, clone(actions))\n\n  scheduleRender()\n\n  return wiredActions\n\n  function recycleElement(element) {\n    return {\n      nodeName: element.nodeName.toLowerCase(),\n      attributes: {},\n      children: map.call(element.childNodes, function(element) {\n        return element.nodeType === 3 // Node.TEXT_NODE\n          ? element.nodeValue\n          : recycleElement(element)\n      })\n    }\n  }\n\n  function resolveNode(node) {\n    return typeof node === \"function\"\n      ? resolveNode(node(globalState, wiredActions))\n      : node != null\n        ? node\n        : \"\"\n  }\n\n  function render() {\n    skipRender = !skipRender\n\n    var node = resolveNode(view)\n\n    if (container && !skipRender) {\n      rootElement = patch(container, rootElement, oldNode, (oldNode = node))\n    }\n\n    isRecycling = false\n\n    while (lifecycle.length) lifecycle.pop()()\n  }\n\n  function scheduleRender() {\n    if (!skipRender) {\n      skipRender = true\n      setTimeout(render)\n    }\n  }\n\n  function clone(target, source) {\n    var out = {}\n\n    for (var i in target) out[i] = target[i]\n    for (var i in source) out[i] = source[i]\n\n    return out\n  }\n\n  function setPartialState(path, value, source) {\n    var target = {}\n    if (path.length) {\n      target[path[0]] =\n        path.length > 1\n          ? setPartialState(path.slice(1), value, source[path[0]])\n          : value\n      return clone(source, target)\n    }\n    return value\n  }\n\n  function getPartialState(path, source) {\n    var i = 0\n    while (i < path.length) {\n      source = source[path[i++]]\n    }\n    return source\n  }\n\n  function wireStateToActions(path, state, actions) {\n    for (var key in actions) {\n      typeof actions[key] === \"function\"\n        ? (function(key, action) {\n            actions[key] = function(data) {\n              var result = action(data)\n\n              if (typeof result === \"function\") {\n                result = result(getPartialState(path, globalState), actions)\n              }\n\n              if (\n                result &&\n                result !== (state = getPartialState(path, globalState)) &&\n                !result.then // !isPromise\n              ) {\n                scheduleRender(\n                  (globalState = setPartialState(\n                    path,\n                    clone(state, result),\n                    globalState\n                  ))\n                )\n              }\n\n              return result\n            }\n          })(key, actions[key])\n        : wireStateToActions(\n            path.concat(key),\n            (state[key] = clone(state[key])),\n            (actions[key] = clone(actions[key]))\n          )\n    }\n\n    return actions\n  }\n\n  function getKey(node) {\n    return node ? node.key : null\n  }\n\n  function eventListener(event) {\n    return event.currentTarget.events[event.type](event)\n  }\n\n  function updateAttribute(element, name, value, oldValue, isSvg) {\n    if (name === \"key\") {\n    } else if (name === \"style\") {\n      if (typeof value === \"string\") {\n        element.style.cssText = value\n      } else {\n        if (typeof oldValue === \"string\") oldValue = element.style.cssText = \"\"\n        for (var i in clone(oldValue, value)) {\n          var style = value == null || value[i] == null ? \"\" : value[i]\n          if (i[0] === \"-\") {\n            element.style.setProperty(i, style)\n          } else {\n            element.style[i] = style\n          }\n        }\n      }\n    } else {\n      if (name[0] === \"o\" && name[1] === \"n\") {\n        name = name.slice(2)\n\n        if (element.events) {\n          if (!oldValue) oldValue = element.events[name]\n        } else {\n          element.events = {}\n        }\n\n        element.events[name] = value\n\n        if (value) {\n          if (!oldValue) {\n            element.addEventListener(name, eventListener)\n          }\n        } else {\n          element.removeEventListener(name, eventListener)\n        }\n      } else if (\n        name in element &&\n        name !== \"list\" &&\n        name !== \"type\" &&\n        name !== \"draggable\" &&\n        name !== \"spellcheck\" &&\n        name !== \"translate\" &&\n        !isSvg\n      ) {\n        element[name] = value == null ? \"\" : value\n      } else if (value != null && value !== false) {\n        element.setAttribute(name, value)\n      }\n\n      if (value == null || value === false) {\n        element.removeAttribute(name)\n      }\n    }\n  }\n\n  function createElement(node, isSvg) {\n    var element =\n      typeof node === \"string\" || typeof node === \"number\"\n        ? document.createTextNode(node)\n        : (isSvg = isSvg || node.nodeName === \"svg\")\n          ? document.createElementNS(\n              \"http://www.w3.org/2000/svg\",\n              node.nodeName\n            )\n          : document.createElement(node.nodeName)\n\n    var attributes = node.attributes\n    if (attributes) {\n      if (attributes.oncreate) {\n        lifecycle.push(function() {\n          attributes.oncreate(element)\n        })\n      }\n\n      for (var i = 0; i < node.children.length; i++) {\n        element.appendChild(\n          createElement(\n            (node.children[i] = resolveNode(node.children[i])),\n            isSvg\n          )\n        )\n      }\n\n      for (var name in attributes) {\n        updateAttribute(element, name, attributes[name], null, isSvg)\n      }\n    }\n\n    return element\n  }\n\n  function updateElement(element, oldAttributes, attributes, isSvg) {\n    for (var name in clone(oldAttributes, attributes)) {\n      if (\n        attributes[name] !==\n        (name === \"value\" || name === \"checked\"\n          ? element[name]\n          : oldAttributes[name])\n      ) {\n        updateAttribute(\n          element,\n          name,\n          attributes[name],\n          oldAttributes[name],\n          isSvg\n        )\n      }\n    }\n\n    var cb = isRecycling ? attributes.oncreate : attributes.onupdate\n    if (cb) {\n      lifecycle.push(function() {\n        cb(element, oldAttributes)\n      })\n    }\n  }\n\n  function removeChildren(element, node) {\n    var attributes = node.attributes\n    if (attributes) {\n      for (var i = 0; i < node.children.length; i++) {\n        removeChildren(element.childNodes[i], node.children[i])\n      }\n\n      if (attributes.ondestroy) {\n        attributes.ondestroy(element)\n      }\n    }\n    return element\n  }\n\n  function removeElement(parent, element, node) {\n    function done() {\n      parent.removeChild(removeChildren(element, node))\n    }\n\n    var cb = node.attributes && node.attributes.onremove\n    if (cb) {\n      cb(element, done)\n    } else {\n      done()\n    }\n  }\n\n  function patch(parent, element, oldNode, node, isSvg) {\n    if (node === oldNode) {\n    } else if (oldNode == null || oldNode.nodeName !== node.nodeName) {\n      var newElement = createElement(node, isSvg)\n      parent.insertBefore(newElement, element)\n\n      if (oldNode != null) {\n        removeElement(parent, element, oldNode)\n      }\n\n      element = newElement\n    } else if (oldNode.nodeName == null) {\n      element.nodeValue = node\n    } else {\n      updateElement(\n        element,\n        oldNode.attributes,\n        node.attributes,\n        (isSvg = isSvg || node.nodeName === \"svg\")\n      )\n\n      var oldKeyed = {}\n      var newKeyed = {}\n      var oldElements = []\n      var oldChildren = oldNode.children\n      var children = node.children\n\n      for (var i = 0; i < oldChildren.length; i++) {\n        oldElements[i] = element.childNodes[i]\n\n        var oldKey = getKey(oldChildren[i])\n        if (oldKey != null) {\n          oldKeyed[oldKey] = [oldElements[i], oldChildren[i]]\n        }\n      }\n\n      var i = 0\n      var k = 0\n\n      while (k < children.length) {\n        var oldKey = getKey(oldChildren[i])\n        var newKey = getKey((children[k] = resolveNode(children[k])))\n\n        if (newKeyed[oldKey]) {\n          i++\n          continue\n        }\n\n        if (newKey != null && newKey === getKey(oldChildren[i + 1])) {\n          if (oldKey == null) {\n            removeElement(element, oldElements[i], oldChildren[i])\n          }\n          i++\n          continue\n        }\n\n        if (newKey == null || isRecycling) {\n          if (oldKey == null) {\n            patch(element, oldElements[i], oldChildren[i], children[k], isSvg)\n            k++\n          }\n          i++\n        } else {\n          var keyedNode = oldKeyed[newKey] || []\n\n          if (oldKey === newKey) {\n            patch(element, keyedNode[0], keyedNode[1], children[k], isSvg)\n            i++\n          } else if (keyedNode[0]) {\n            patch(\n              element,\n              element.insertBefore(keyedNode[0], oldElements[i]),\n              keyedNode[1],\n              children[k],\n              isSvg\n            )\n          } else {\n            patch(element, oldElements[i], null, children[k], isSvg)\n          }\n\n          newKeyed[newKey] = children[k]\n          k++\n        }\n      }\n\n      while (i < oldChildren.length) {\n        if (getKey(oldChildren[i]) == null) {\n          removeElement(element, oldElements[i], oldChildren[i])\n        }\n        i++\n      }\n\n      for (var i in oldKeyed) {\n        if (!newKeyed[i]) {\n          removeElement(element, oldKeyed[i][0], oldKeyed[i][1])\n        }\n      }\n    }\n    return element\n  }\n}\n","let CACHE = [];\nmodule YubinBango {\n  export class Core {\n    URL = 'https://yubinbango.github.io/yubinbango-data/data';\n    REGION: string[] = [\n      null, '北海道', '青森県', '岩手県', '宮城県',\n      '秋田県', '山形県', '福島県', '茨城県', '栃木県',\n      '群馬県', '埼玉県', '千葉県', '東京都', '神奈川県',\n      '新潟県', '富山県', '石川県', '福井県', '山梨県',\n      '長野県', '岐阜県', '静岡県', '愛知県', '三重県',\n      '滋賀県', '京都府', '大阪府', '兵庫県', '奈良県',\n      '和歌山県', '鳥取県', '島根県', '岡山県', '広島県',\n      '山口県', '徳島県', '香川県', '愛媛県', '高知県',\n      '福岡県', '佐賀県', '長崎県', '熊本県', '大分県',\n      '宮崎県', '鹿児島県', '沖縄県'\n    ];\n    constructor(inputVal: string = '', callback?) {\n      if(inputVal){\n        // 全角の数字を半角に変換 ハイフンが入っていても数字のみの抽出\n        const a:string = inputVal.replace(/[０-９]/g, (s: string) => String.fromCharCode(s.charCodeAt(0) - 65248));\n        const b:RegExpMatchArray = a.match(/\\d/g);\n        const c:string = b.join('');\n        const yubin7: string = this.chk7(c);\n        // 7桁の数字の時のみ作動\n        if (yubin7) {\n          this.getAddr(yubin7, callback);\n        } else {\n          callback(this.addrDic());\n        }\n      }\n    }\n    chk7(val: string) {\n      if (val.length === 7) {\n        return val;\n      }\n    }\n    addrDic(region_id = '', region = '', locality = '', street = '', extended = ''):{[key:string]: string} {\n      return {\n        'region_id': region_id,\n        'region': region,\n        'locality': locality,\n        'street': street,\n        'extended': extended\n      };\n    }\n    selectAddr(addr: string[]):{[key:string]: string} {\n      if (addr && addr[0] && addr[1]) {\n        return this.addrDic(addr[0],this.REGION[addr[0]],addr[1],addr[2],addr[3])\n      } else {\n        return this.addrDic()\n      }\n    }\n    jsonp(url: string, fn) {\n      window['$yubin'] = (data) => fn(data);\n      const scriptTag = document.createElement(\"script\");\n      scriptTag.setAttribute(\"type\", \"text/javascript\");\n      scriptTag.setAttribute(\"charset\", \"UTF-8\");\n      scriptTag.setAttribute(\"src\", url);\n      document.head.appendChild(scriptTag);\n    }\n    getAddr(yubin7: string, fn):{[key:string]: string} {\n      const yubin3 = yubin7.substr(0, 3);\n      // 郵便番号上位3桁でキャッシュデータを確認\n      if (yubin3 in CACHE && yubin7 in CACHE[yubin3]) {\n        return fn(this.selectAddr(CACHE[yubin3][yubin7]));\n      } else {\n        this.jsonp(`${this.URL}/${yubin3}.js`, (data) => {\n          CACHE[yubin3] = data;\n          return fn(this.selectAddr(data[yubin7]));\n        });\n      }\n    }\n  }\n}\n\nexport = YubinBango;\n","module.exports = function number_format (number, decimals, decPoint, thousandsSep) { // eslint-disable-line camelcase\n  //  discuss at: https://locutus.io/php/number_format/\n  // original by: Jonas Raoni Soares Silva (https://www.jsfromhell.com)\n  // improved by: Kevin van Zonneveld (https://kvz.io)\n  // improved by: davook\n  // improved by: Brett Zamir (https://brett-zamir.me)\n  // improved by: Brett Zamir (https://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  // improved by: Kevin van Zonneveld (https://kvz.io)\n  // bugfixed by: Michael White (https://getsprink.com)\n  // bugfixed by: Benjamin Lupton\n  // bugfixed by: Allan Jensen (https://www.winternet.no)\n  // bugfixed by: Howard Yeend\n  // bugfixed by: Diogo Resende\n  // bugfixed by: Rival\n  // bugfixed by: Brett Zamir (https://brett-zamir.me)\n  //  revised by: Jonas Raoni Soares Silva (https://www.jsfromhell.com)\n  //  revised by: Luke Smith (https://lucassmith.name)\n  //    input by: Kheang Hok Chin (https://www.distantia.ca/)\n  //    input by: Jay Klehr\n  //    input by: Amir Habibi (https://www.residence-mixte.com/)\n  //    input by: Amirouche\n  //   example 1: number_format(1234.56)\n  //   returns 1: '1,235'\n  //   example 2: number_format(1234.56, 2, ',', ' ')\n  //   returns 2: '1 234,56'\n  //   example 3: number_format(1234.5678, 2, '.', '')\n  //   returns 3: '1234.57'\n  //   example 4: number_format(67, 2, ',', '.')\n  //   returns 4: '67,00'\n  //   example 5: number_format(1000)\n  //   returns 5: '1,000'\n  //   example 6: number_format(67.311, 2)\n  //   returns 6: '67.31'\n  //   example 7: number_format(1000.55, 1)\n  //   returns 7: '1,000.6'\n  //   example 8: number_format(67000, 5, ',', '.')\n  //   returns 8: '67.000,00000'\n  //   example 9: number_format(0.9, 0)\n  //   returns 9: '1'\n  //  example 10: number_format('1.20', 2)\n  //  returns 10: '1.20'\n  //  example 11: number_format('1.20', 4)\n  //  returns 11: '1.2000'\n  //  example 12: number_format('1.2000', 3)\n  //  returns 12: '1.200'\n  //  example 13: number_format('1 000,50', 2, '.', ' ')\n  //  returns 13: '100 050.00'\n  //  example 14: number_format(1e-8, 8, '.', '')\n  //  returns 14: '0.00000001'\n\n  number = (number + '').replace(/[^0-9+\\-Ee.]/g, '')\n  const n = !isFinite(+number) ? 0 : +number\n  const prec = !isFinite(+decimals) ? 0 : Math.abs(decimals)\n  const sep = (typeof thousandsSep === 'undefined') ? ',' : thousandsSep\n  const dec = (typeof decPoint === 'undefined') ? '.' : decPoint\n  let s = ''\n\n  const toFixedFix = function (n, prec) {\n    if (('' + n).indexOf('e') === -1) {\n      return +(Math.round(n + 'e+' + prec) + 'e-' + prec)\n    } else {\n      const arr = ('' + n).split('e')\n      let sig = ''\n      if (+arr[1] + prec > 0) {\n        sig = '+'\n      }\n      return (+(Math.round(+arr[0] + 'e' + sig + (+arr[1] + prec)) + 'e-' + prec)).toFixed(prec)\n    }\n  }\n\n  // @todo: for IE parseFloat(0.55).toFixed(0) = 0;\n  s = (prec ? toFixedFix(n, prec).toString() : '' + Math.round(n)).split('.')\n  if (s[0].length > 3) {\n    s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep)\n  }\n  if ((s[1] || '').length < prec) {\n    s[1] = s[1] || ''\n    s[1] += new Array(prec - s[1].length + 1).join('0')\n  }\n\n  return s.join(dec)\n}\n","\r\nimport { h, app } from 'hyperapp';\r\nimport { Core as YubinBangoCore } from 'yubinbango-core';\r\nimport number_format from 'locutus/php/strings/number_format';\r\nimport { tnOnCreate, createTnOnRemove, Image, TextInput, TextArea, RadioButton, Checkbox, Select, Range, Echo, Button, InputGroup, Control, FileInput, File } from './front_component';\r\n\r\n\r\n/*\r\n * Polyfills\r\n */\r\nMath.trunc = Math.trunc || function(x) {\r\n  return x < 0 ? Math.ceil(x) : Math.floor(x);\r\n}\r\n\r\n/*\r\n * ===============================================================\r\n * utilities\r\n */\r\n\r\nfunction sprintf(format) {\r\n  var args = arguments;\r\n  var offset = 1;\r\n  return format.replace(/%([0-9]\\$)?([^0-9])/g, function (match, f1, f2) {\r\n    if (f2 == '%') {\r\n      return '%';\r\n    } else if (f2 == 's') {\r\n      if (! f1) {\r\n        return args[offset++];\r\n      } else {\r\n        return args[f1.slice(0, 1)];\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nfunction roundNumber(num, scale) {\r\n  const nscale = -1 * scale\r\n  const sign = (num < 0) ? -1 : 1\r\n  if (sign == -1) num *= -1\r\n  if(!(\"\" + num).includes(\"e\")) {\r\n    return sign * (+(Math.round(num + \"e\" + scale)  + \"e\" + nscale));\r\n  } else {\r\n    var arr = (\"\" + num).split(\"e\");\r\n    var sig = \"\"\r\n    if(+arr[1] + scale > 0) {\r\n      sig = \"+\";\r\n    }\r\n    return sign * (+(Math.round(+arr[0] + \"e\" + sig + (+arr[1] + scale)) + \"e-\" + scale))\r\n  }\r\n}\r\n\r\n// number format\r\nconst nf = (amount) => {\r\n  return number_format(amount, rule.taxPrecision, catalog['.'], catalog[',']);\r\n}\r\n\r\n// number format with arbitrary precision\r\nconst nfap = (amount) => {\r\n  const fs = (\"\"+amount).split('.')\r\n  const dot = catalog['.']\r\n  const dec = number_format(fs[0], 0, dot, catalog[','])\r\n  return (fs.length == 2) ? (dec + '.' + fs[1]) : dec\r\n}\r\n\r\nconst br = {nodeName:'br', attributes:{}, children:[]}\r\n\r\nconst _Tv = (x) => {\r\n  x = _T(x)\r\n  if (typeof x != 'string') return x\r\n\r\n  const lines = x.split('\\n')\r\n  if (lines.length == 1) return lines[0]\r\n  \r\n  return lines.reduce((cur, line) => {\r\n    return (cur.length == 0) ? [line] : [...cur, br, line]\r\n  }, [])\r\n}\r\n\r\nconst _T = (x) => {\r\n  if (typeof x == 'undefined' || x === null) return null\r\n  if (catalog.hasOwnProperty(x)) {\r\n    return catalog[x]\r\n  } else {\r\n    console.log('TO TRANSLATE: ', x);\r\n    return x;\r\n  }\r\n}\r\n\r\nconst evalExpr = (ast, vars, total, data, labels, env, expr) => {\r\n  if (typeof ast == 'number' && ! isNaN(ast)) {\r\n    // common easy case\r\n    return ast\r\n  }\r\n\r\n  const guard = (val) => {\r\n    if (! isFinite(val)) {  // either NaN or +-INF\r\n      throw 'evaluation error: overflow in %s'\r\n    }\r\n    return val\r\n  }\r\n  const evl = (ast) => {\r\n    if (typeof ast == 'number') {  // literal\r\n      return ast\r\n    } else if (typeof ast == 'string') {  // variable lookup\r\n      const v = findByProp('sym', ast, vars)\r\n      if (! v) {\r\n        throw 'evaluation error: no-variable in %s'\r\n      }\r\n      if (v.ref == -1) return total\r\n      const q = +findQuantity(data, v.ref, labels, env)\r\n      if (isNaN(q)) {\r\n        throw 'evaluation error: no-quantity in %s'\r\n      }\r\n      return q\r\n    } else if (Array.isArray(ast)) {  // function application\r\n      switch (ast[0]) {\r\n        case '+': \r\n          return guard(evl(ast[1]) + evl(ast[2]))\r\n        case '-': \r\n          return guard(evl(ast[1]) - evl(ast[2]))\r\n        case '*': \r\n          return guard(evl(ast[1]) * evl(ast[2]))\r\n        case '/': \r\n        {\r\n          const b = evl(ast[2])\r\n          if (b == 0) throw 'evaluation error: undefined-calculation in %s'\r\n          return guard(evl(ast[1]) / b)\r\n        }\r\n        case '^': \r\n          return guard(evl(ast[1]) ** evl(ast[2]))\r\n        case '=': \r\n          return (evl(ast[1]) == evl(ast[2])) ? 1 : 0\r\n        case '<>': \r\n          return (evl(ast[1]) != evl(ast[2])) ? 1 : 0\r\n        case '>=': \r\n          return (evl(ast[1]) >= evl(ast[2])) ? 1 : 0\r\n        case '<=': \r\n          return (evl(ast[1]) <= evl(ast[2])) ? 1 : 0\r\n        case '>': \r\n          return (evl(ast[1]) > evl(ast[2])) ? 1 : 0\r\n        case '<': \r\n          return (evl(ast[1]) < evl(ast[2])) ? 1 : 0\r\n        case 'IFERROR': \r\n          try {\r\n            return evl(ast[1])\r\n          } catch (ex) {\r\n            return evl(ast[2])\r\n          }\r\n        case 'ROUND': \r\n        {\r\n          const a = evl(ast[1])\r\n          const b = Math.trunc(evl(ast[2]))\r\n          const c = roundNumber(a, b)\r\n          return guard(c)\r\n        }\r\n        case 'ROUNDUP':  // align to +- infinity\r\n        {\r\n          const a = evl(ast[1])\r\n          const b = Math.trunc(evl(ast[2]))\r\n          const c = a + (a < 0 ? -1 : 1) * Math.pow(10, -1 * b) * 0.5\r\n          const d = roundNumber(c, b)\r\n          return guard(d)\r\n        }\r\n        case 'ROUNDDOWN':  // align to zero\r\n        {\r\n          const a = evl(ast[1])\r\n          const b = Math.trunc(evl(ast[2]))\r\n          const c = a + (a < 0 ? 1 : -1) * Math.pow(10, -1 * b) * 0.5\r\n          const d = roundNumber(c, b)\r\n          return guard(d)\r\n        }\r\n        case 'TRUNC':  // align to zero\r\n        {\r\n          const a = evl(ast[1])\r\n          const b = ast.length == 3 ? Math.trunc(evl(ast[2])) : 0\r\n          const c = a + (a < 0 ? 1 : -1) * Math.pow(10, -1 * b) * 0.5\r\n          const d = roundNumber(c, b)\r\n          return guard(d)\r\n        }\r\n        case 'INT':  // align to negative infinity\r\n        {\r\n          const a = evl(ast[1])\r\n          return guard(Math.floor(a))\r\n        }\r\n        case 'ABS': \r\n        {\r\n          const a = evl(ast[1])\r\n          return guard(a < 0 ? -1 * a : a)\r\n        }\r\n        case 'SIGN': \r\n        {\r\n          const a = evl(ast[1])\r\n          return guard(a < 0 ? -1 : a > 0 ? 1 : 0)\r\n        }\r\n        case 'QUOTIENT':  // align to zero\r\n        {\r\n          const b = evl(ast[2])\r\n          if (b == 0) throw 'evaluation error: undefined-calculation in %s'\r\n          return guard(Math.trunc(evl(ast[1]) / b))\r\n        }\r\n        case 'MOD':  // MOD(n, d) == n - d * INT(n / d)\r\n        {\r\n          const d = evl(ast[2])\r\n          if (d == 0) throw 'evaluation error: undefined-calculation in %s'\r\n          const n = evl(ast[1])\r\n          return guard(n - d * Math.floor(n/d))\r\n        }\r\n        case 'MIN': \r\n        {\r\n          let a = evl(ast[1])\r\n          for (let i = 2; i < ast.length; i++) {\r\n            const b = evl(ast[i])\r\n            if (b < a) a = b\r\n          }\r\n          return a\r\n        }\r\n        case 'MAX': \r\n        {\r\n          let a = evl(ast[1])\r\n          for (let i = 2; i < ast.length; i++) {\r\n            const b = evl(ast[i])\r\n            if (b > a) a = b\r\n          }\r\n          return a\r\n        }\r\n        case 'SWITCH':  // [SWITCH, x, m1, e1, ..., else?]\r\n        {\r\n          const a = evl(ast[1])\r\n          let i = 2\r\n          for (; i < ast.length - 1; i += 2) {\r\n            const b = evl(ast[i])\r\n            if (a == b) return evl(ast[i + 1])\r\n          }\r\n          if (i != ast.length) {\r\n            // there else clause\r\n            return evl(ast[i])\r\n          } else {\r\n            throw 'evaluation error: no matching clause in %s'\r\n          }\r\n        }\r\n        case 'IF': \r\n          return (evl(ast[1]) != 0) ? evl(ast[2]) : evl(ast[3])\r\n        case 'AND': \r\n        {\r\n          let val = 1\r\n          for (let i = 1; i < ast.length; i++) {\r\n            if (evl(ast[i]) == 0) val = 0\r\n          }\r\n          return val\r\n        }\r\n        case 'OR': \r\n        {\r\n          let val = 0\r\n          for (let i = 1; i < ast.length; i++) {\r\n            if (evl(ast[i]) != 0) val = 1\r\n          }\r\n          return val\r\n        }\r\n        case 'XOR':  // true if an odd number of arguments are true\r\n        {\r\n          let count = 0\r\n          for (let i = 1; i < ast.length; i++) {\r\n            if (evl(ast[i]) != 0) count++\r\n          }\r\n          return (count % 2 == 1) ? 1 : 0\r\n        }\r\n        case 'NOT': \r\n          return (evl(ast[1]) == 0) ? 1 : 0\r\n        default: \r\n          throw 'evaluation error: no-function in %s'\r\n      }\r\n    } else if (typeof ast == 'object') {\r\n      return satisfied(labels, ast) ? 1 : 0\r\n    } else {  // unkdnown\r\n      throw 'evaluation error: unknown-term in %s'\r\n    }\r\n  }\r\n\r\n  try {\r\n    return evl(ast)\r\n  } catch (ex) {\r\n    const msg = sprintf(_T(ex), expr)\r\n    if (mode == 'preview') {\r\n      alert(msg)\r\n    } else {\r\n      console.log('[AForms] '+msg)\r\n    }\r\n    return NaN\r\n  }\r\n}\r\n\r\nconst scrollTo = (idOrElem) => {\r\n  const pos = document.documentElement.scrollTop || document.body.scrollTop;\r\n  const r = ((typeof idOrElem == 'string') ? document.getElementById(idOrElem) : idOrElem).getBoundingClientRect()\r\n  const posBot = r.top + pos - 100\r\n  const posTop = r.top + pos - 150\r\n  if (posTop > pos) {\r\n    if (behavior.smoothScroll) {\r\n      const diff = Math.max((posTop - pos) / 8, 4)\r\n      window.requestAnimationFrame(() => scrollTo(idOrElem))\r\n      window.scrollTo(0, pos + diff)\r\n    } else {\r\n      window.scrollTo(0, posTop)\r\n    }\r\n  } else if (posBot < pos) {\r\n    if (behavior.smoothScroll) {\r\n      const diff = Math.max((pos - posBot) / 8, 4)\r\n      window.requestAnimationFrame(() => scrollTo(idOrElem))\r\n      window.scrollTo(0, pos - diff)\r\n    } else {\r\n      window.scrollTo(0, posBot)\r\n    }\r\n  }\r\n};\r\n\r\nconst showInvalidItem = (isDetail) => {\r\n  let elem = null;\r\n  if (isDetail && (elem = document.querySelector('.wq-belongs-hnavigator.wq-is-invalid'))) {\r\n    scrollTo(elem)\r\n  } else if (isDetail && (elem = document.querySelector('.wq-Button.wq-belongs-wnavbase'))) {\r\n    scrollTo(elem)\r\n  } else if (! isDetail && (elem = document.querySelector('.wq-belongs-attr.wq-is-invalid'))) {\r\n    scrollTo(elem)\r\n  }\r\n}\r\n\r\nconst findByProp = (name, val, arr) => {\r\n  const len = arr.length\r\n  for (let i = 0; i < len; i++) {\r\n    if (arr[i][name] == val) return arr[i]\r\n  }\r\n  return undefined\r\n}\r\n\r\nconst findIndexByProp = (name, val, arr) => {\r\n  const len = arr.length\r\n  for (let i = 0; i < len; i++) {\r\n    if (arr[i][name] == val) return i\r\n  }\r\n  return -1\r\n}\r\n\r\nconst satisfied = (set, specs) => {\r\n  for (let prop in specs) {\r\n    if (specs[prop] != set.hasOwnProperty(prop)) return false\r\n  }\r\n  return true\r\n}\r\n\r\nconst extend = (set, specs) => {\r\n  const copy = {...set}\r\n  for (let prop in specs) {\r\n    if (specs[prop]) {\r\n      copy[prop] = true\r\n    } else {\r\n      delete copy[prop]\r\n    }\r\n  }\r\n  return copy\r\n}\r\n\r\nconst exclude = (set, prop) => {\r\n  const copy = {...set}\r\n  delete copy[prop]\r\n  return copy\r\n}\r\n\r\nconst branchNo = (name, sep) => {\r\n  const off = name.lastIndexOf(sep)\r\n  const fragment = name.slice(off + 1)\r\n  return parseInt(fragment)\r\n}\r\n\r\nconst replaceElement = (arr, idx, value) => {\r\n  const arr2 = [...arr]\r\n  arr2[idx] = value\r\n  return arr2\r\n}\r\n\r\nconst indexOf = (e, lis) => {\r\n  const len = lis.length\r\n  for (let i = 0; i < len; i++) {\r\n    if (lis[i] == e) return i\r\n  }\r\n  return -1\r\n}\r\n\r\nconst reduceHash = (f, cur, hash) => {\r\n  for (let key in hash) {\r\n    cur = f(cur, key, hash[key])\r\n  }\r\n  return cur\r\n}\r\n\r\n/*const mapHash = (f, hash) => {\r\n  const rv = {}\r\n  for (let key in hash) {\r\n    rv[key] = f(key, hash[key])\r\n  }\r\n  return rv\r\n}*/\r\n\r\nconst emptyString = (s) => (s == \"\")\r\n\r\nconst fromTo = (from, to, step) => {\r\n  const arr = []\r\n  for (let i = from; i <= to; i += step) {\r\n    arr.push(i)\r\n  }\r\n  return arr\r\n}\r\n\r\nconst normalizePrice = (rule, price) => {\r\n  price = price * Math.pow(10, rule.taxPrecision)\r\n  switch (rule.taxNormalizer) {\r\n    case 'trunc': price = Math.trunc(price); break;\r\n    case 'floor': price = Math.floor(price); break;\r\n    case 'ceil':  price = Math.ceil(price); break;\r\n    case 'round': price = Math.round(price); break;\r\n  }\r\n  return price / Math.pow(10, rule.taxPrecision)\r\n}\r\n\r\nconst compare2 = (value, lower, lowerIncluded, higher, higherIncluded) => {\r\n  if (lower != null) {\r\n    if (lowerIncluded) {\r\n      if (value < lower) return false;\r\n    } else {\r\n      if (value <= lower) return false;\r\n    }\r\n  }\r\n  if (higher != null) {\r\n    if (higherIncluded) {\r\n      if (value > higher) return false;\r\n    } else {\r\n      if (value >= higher) return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nconst submit = (data, k) => {\r\n  //console.log('submit', submitType);\r\n  jQuery.ajax({\r\n    type: \"post\", \r\n    url: submitUrl, \r\n    data: JSON.stringify(data), \r\n    contentType: 'application/json',\r\n    success: function(response) {\r\n      k(response)\r\n    }, \r\n    error: function (xhr) {\r\n      const msg = (xhr.status === 403) ? _T('Failed to submit due to authorization failure.') : _T('Failed to submit due to some error.')\r\n      window.alert(msg)\r\n    }, \r\n    dataType: 'json'\r\n  });\r\n}\r\n\r\nconst submitCustom = (data, k, id) => {\r\n  const url = customUrl.replace('placeholder', id)\r\n  jQuery.ajax({\r\n    type: \"post\", \r\n    url, \r\n    data: JSON.stringify(data), \r\n    contentType: 'application/json', \r\n    success: function (response) {\r\n      k(response)\r\n    }, \r\n    error: function (xhr) {\r\n      const msg = (xhr.status === 403) ? _T('Failed to submit due to authorization failure.') : _T('Failed to submit due to some error.')\r\n      window.alert(msg)\r\n    }, \r\n    dataType: 'json'\r\n  });\r\n}\r\n\r\nconst complementAddress = (zip, k) => {\r\n  new YubinBangoCore(zip.replace('-', ''), k)\r\n}\r\n\r\nconst findQuantity = (inputs, qid, labels, env) => {\r\n  if (qid == -1) return 1\r\n  const item = findByProp(\"id\", qid, form.detailItems)\r\n  if (! item) return NaN\r\n  if (item.type == 'Quantity' || item.type == 'Slider') {\r\n    if (! satisfied(labels, item.depends)) return NaN\r\n    return inputs.hasOwnProperty(qid) ? inputs[qid] : item.initial\r\n  } else if (item.type == 'AutoQuantity') {\r\n    return env.hasOwnProperty(qid) ? env[qid] : NaN\r\n  }\r\n}\r\n\r\n/*\r\n * ===============================================================\r\n * view \r\n */\r\n\r\nconst Option = (\r\n    {\r\n      type, \r\n      checked, \r\n      labels, \r\n      selectid, \r\n      option, \r\n      onchange, \r\n      navigator\r\n    }) => {\r\n  const id = `wq-option-detail-${selectid}-${option.id}`\r\n  const iname = `detail-${selectid}`\r\n  const enabled = satisfied(labels, option.depends)\r\n  return (\r\n    <div class={`wq-Option wq-belongs-${navigator} wq-belongs-selector-${selectid} ${option.image ? '' : 'wq-media-empty'}`} key={id} id={id+'-wrapper'}>\r\n      <input type={type} id={id} checked={checked} class={`wq--input wq_${iname} wq-type-${type} ${checked ? 'wq-is-selected' : ''}`} name={iname} onchange={onchange} data-path={selectid+'/'+option.id} value=\"true\" disabled={! enabled} />\r\n      <label for={id} class=\"wq--label\">\r\n        <div class=\"wq--media\">\r\n          <Image src={option.image} scaling=\"center\" xclass={`wq-belongs-${navigator} wq-belongs-option`} />\r\n        </div>\r\n        <div class=\"wq--main\">\r\n          <div class=\"wq--name\">{option.name}</div>\r\n          <div class=\"wq--note\">{option.note}</div>\r\n          {option.format == 'regular' ? (\r\n            <div class=\"wq--prices\">\r\n              {typeof option.normalPrice == \"number\" ? (<span class=\"wq--normalPrice\">{pricePrefix}{nf(option.normalPrice)}{priceSuffix}</span>) : null}\r\n              <span class=\"wq--price\">{pricePrefix}{nf(option.price)}{priceSuffix}</span>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        {['SALE', 'RECOMMENDED'].map((r,i) => option.ribbons[r] ? (\r\n          <div class={`wq--ribbon wq-ribbon-${i+1}`}><span>{_Tv(r)}</span></div>\r\n        ) : null)}\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst QuantOption = (\r\n    {\r\n      type, \r\n      value, \r\n      labels, \r\n      selectid, \r\n      option, \r\n      onchange, \r\n      navigator\r\n    }) => {\r\n  const id = `wq-quantoption-detail-${selectid}-${option.id}`\r\n  const iname = `detail-${selectid}`\r\n  const enabled = satisfied(labels, option.depends)\r\n  return (\r\n    <div class={`wq-Option wq-belongs-${navigator} wq-belongs-selector-${selectid} wq-type-QuantOption ${option.image ? '' : 'wq-media-empty'}`} key={id} id={id+'-wrapper'}>\r\n      <select id={id} class={`wq--select wq_${iname} ${typeof value == 'string' || typeof value == 'number' ? 'wq-is-selected' : ''} wq-type-${type}`} name={iname} onchange={onchange} disabled={!enabled} data-path={selectid+'/'+option.id}>\r\n        <option value=\"\">{_T('Deselect')}</option>\r\n        {fromTo(option.minimum, option.maximum, option.step).map(v => {\r\n          return (\r\n            <option value={v} selected={v == value}>{v} {option.suffix}</option>\r\n          )\r\n        })}\r\n      </select>\r\n      <label for={id} class=\"wq--label\">\r\n        <div class=\"wq--media\">\r\n          <Image src={option.image} scaling=\"center\" xclass={`wq-belongs-${navigator} wq-belongs-option`} />\r\n        </div>\r\n        <div class=\"wq--main\">\r\n          <div class=\"wq--name\">{option.name}</div>\r\n          <div class=\"wq--note\">{option.note}</div>\r\n          <div class=\"wq--prices\">\r\n            {typeof option.normalPrice == \"number\" ? (<span class=\"wq--normalPrice\">{pricePrefix}{nf(option.normalPrice)}{priceSuffix}</span>) : null}\r\n            {typeof option.price == \"number\" ? (<span class=\"wq--price\">{pricePrefix}{nf(option.price)}{priceSuffix}</span>) : null}\r\n          </div>\r\n          {typeof value == 'string' || typeof value == 'number' ? (<div class=\"wq--quantity\">{value}</div>) : null}\r\n        </div>\r\n        {['SALE', 'RECOMMENDED'].map((r,i) => option.ribbons[r] ? (\r\n          <div class={`wq--ribbon wq-ribbon-${i+1}`}><span>{_Tv(r)}</span></div>\r\n        ) : null)}\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Selector = (\r\n    {\r\n      selector, \r\n      onoptionchange, \r\n      selectedOptions, \r\n      labels, \r\n      message, \r\n      navigator\r\n    }\r\n) => {\r\n  const id = `wq-selector-detail-${selector.id}`\r\n  const type = selector.multiple ? 'checkbox' : 'radio'\r\n  return (\r\n    <div class={`wq-Selector wq-lct-enabled ${!!message ? 'wq-is-invalid' : ''} wq-belongs-${navigator}`} key={id} id={id} oncreate={tnOnCreate} onremove={tnOnRemove}>\r\n      <div class=\"wq--head\">\r\n        <div class=\"wq--media\">\r\n          <Image src={selector.image} scaling=\"center\" xclass={`wq-belongs-${navigator} wq-belongs-selector`} />\r\n        </div>\r\n        <div class=\"wq--main\">\r\n          <div class=\"wq--name\">{selector.name}</div>\r\n          <div class=\"wq--note\">{selector.note}</div>\r\n        </div>\r\n        {(message) ? (<div class=\"wq--message wq-lct-enabled\" oncreate={tnOnCreate} onremove={tnOnRemove}>{_Tv(message)}</div>) : null}\r\n      </div>\r\n      <div class=\"wq--body\">\r\n        {selector.options.map((option, i) => {\r\n          if (option.type == 'Option') {\r\n            return (\r\n              <Option type={type} checked={selectedOptions.hasOwnProperty(option.id)} selectid={selector.id} onchange={onoptionchange} option={option} labels={labels} navigator={navigator} />\r\n            )\r\n          } else {  // QuantOption\r\n            return (\r\n              <QuantOption type={type} value={selectedOptions[option.id]} selectid={selector.id} onchange={onoptionchange} option={option} labels={labels} navigator={navigator} />\r\n            )\r\n          }\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Quantity = (\r\n    {\r\n      quantity, \r\n      value, \r\n      message, \r\n      oninput, \r\n      onblur, \r\n      navigator\r\n    }\r\n) => {\r\n  const id = `wq-quantity-detail-${quantity.id}`\r\n  const iname = `detail-${quantity.id}`\r\n  return (\r\n    <div class={`wq-Quantity wq-lct-enabled ${!!message ? 'wq-is-invalid' : ''} wq-belongs-${navigator}`} id={id} oncreate={tnOnCreate} onremove={tnOnRemove}>\r\n      <div class=\"wq--head\">\r\n        <div class=\"wq--media\">\r\n          <Image src={quantity.image} scaling=\"center\" xclass={`wq-belongs-${navigator} wq-belongs-quantity`} />\r\n        </div>\r\n        <div class=\"wq--main\">\r\n          <div class=\"wq--name\">{quantity.name}</div>\r\n          <div class=\"wq--note\">{quantity.note}</div>\r\n        </div>\r\n        {(message) ? (<div class=\"wq--message wq-lct-enabled\" oncreate={tnOnCreate} onremove={tnOnRemove}>{_Tv(message)}</div>) : null}\r\n      </div>\r\n      <div class=\"wq--body\">\r\n        <InputGroup gutter=\"mini\">\r\n          <TextInput type=\"number\" size=\"small\" name={iname} value={value} placeholder={null} invalid={!!message} oninput={oninput} onblur={onblur} />\r\n          {quantity.suffix ? (<span class=\"wq--suffix\">{quantity.suffix}</span>) : null}\r\n        </InputGroup>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Slider = (\r\n    {\r\n      slider, \r\n      value, \r\n      message, \r\n      oninput, \r\n      onchange, \r\n      navigator\r\n    }\r\n) => {\r\n  const id = `wq-slider-detail-${slider.id}`\r\n  const iname = `detail-${slider.id}`\r\n  return (\r\n    <div class={`wq-Slider wq-lct-enabled ${!!message ? 'wq-is-invalid' : ''} wq-belongs-${navigator}`} id={id} oncreate={tnOnCreate} onremove={tnOnRemove}>\r\n      <div class=\"wq--head\">\r\n        <div class=\"wq--media\">\r\n          <Image src={slider.image} scaling=\"center\" xclass={`wq-belongs-${navigator} wq-belongs-slider`} />\r\n        </div>\r\n        <div class=\"wq--main\">\r\n          <div class=\"wq--name\">{slider.name}</div>\r\n          <div class=\"wq--note\">{slider.note}</div>\r\n        </div>\r\n        {(message) ? (<div class=\"wq--message wq-lct-enabled\" oncreate={tnOnCreate} onremove={tnOnRemove}>{_Tv(message)}</div>) : null}\r\n      </div>\r\n      <div class=\"wq--body\">\r\n        <Range name={iname} value={value} max={slider.maximum} min={slider.minimum} step={slider.step} invalid={!!message} suffix={slider.suffix} oninput={oninput} onchange={onchange} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst HNavigator = (\r\n    {\r\n      data, \r\n      onoptionchange, \r\n      ontextinput, \r\n      ontextblur, \r\n      onrangeblur, \r\n      labels, \r\n      messages\r\n    }, children) => {\r\n  const id = 'wq-hnavigator'\r\n  return (\r\n    <div class=\"wq-HNavigator\" id={id} key={id}>\r\n      {children}\r\n      <div class=\"wq--items\">\r\n        {form.detailItems.map((item) => {\r\n          const message = messages.hasOwnProperty(item.id) ? messages[item.id] : null\r\n          if (item.type == 'Selector') {\r\n            if (item.options.some(option => satisfied(labels, option.depends))) {\r\n              const selectedOptions = data.hasOwnProperty(item.id) ? data[item.id] : {}\r\n              return (\r\n                <Selector selector={item} onoptionchange={onoptionchange} selectedOptions={selectedOptions} labels={labels} message={message} navigator=\"hnavigator\" />\r\n              )\r\n            } else {\r\n              return null\r\n            }\r\n          } else if (item.type == 'Quantity') {\r\n            if (satisfied(labels, item.depends)) {\r\n              const value = data.hasOwnProperty(item.id) ? data[item.id] : ''\r\n              return (\r\n                <Quantity quantity={item} value={value} message={message} oninput={ontextinput} onblur={ontextblur} navigator=\"hnavigator\" />\r\n              )\r\n            } else {\r\n              return null\r\n            }\r\n          } else if (item.type == \"Slider\") {\r\n            if (satisfied(labels, item.depends)) {\r\n              const value = data.hasOwnProperty(item.id) ? data[item.id] : ''\r\n              return (\r\n                <Slider slider={item} value={value} message={message} navigator=\"hnavigator\" oninput={ontextinput} onchange={onrangeblur} />\r\n              )\r\n            } else {\r\n              return null\r\n            }\r\n          } else {\r\n            return null;\r\n          }\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst suspendOtherSurfaces = () => {\r\n  document.documentElement.classList.add('wq-x-suspended')\r\n}\r\nconst resumeOtherSurfaces = () => {\r\n  document.documentElement.classList.remove('wq-x-suspended')\r\n}\r\nconst overlayOnCreate = (el) => {\r\n  suspendOtherSurfaces()\r\n  tnOnCreate(el)\r\n}\r\nconst overlayOnRemove = (el, done) => {\r\n  const myDone = () => {\r\n    resumeOtherSurfaces()\r\n    done()\r\n  }\r\n  tnOnRemove(el, myDone)\r\n}\r\nconst WNavigator = (\r\n    {\r\n      data, \r\n      onoptionchange, \r\n      ontextinput, \r\n      ontextblur, \r\n      onrangeblur, \r\n      labels, \r\n      messages, \r\n      onWizardNext, \r\n      onWizardPrev, \r\n      onWizardOpen, \r\n      onWizardClose, \r\n      current, \r\n      current2, \r\n      open, \r\n      flipped\r\n    }, children) => {\r\n  const id = 'wq-wnavigator'\r\n  const length = form.detailItems.length\r\n  const item = (open && current < length) ? form.detailItems[current] : null\r\n  const item2 = (open && current2 < length) ? form.detailItems[current2] : null\r\n  const selectedOptions = (open && current < length) ? (data.hasOwnProperty(item.id) ? data[item.id] : {}) : null\r\n  const message = (open && current < length) ? (messages.hasOwnProperty(item.id) ? messages[item.id] : null) : null\r\n  const messageValues = Object.values(messages)\r\n  const originalOnoptionchange = onoptionchange\r\n  if (item && item.type == \"Selector\" && !item.multiple) {\r\n    onoptionchange = (ev) => {\r\n      window.setTimeout(() => {\r\n        onWizardNext()\r\n      }, 400)\r\n      return originalOnoptionchange(ev)\r\n    }\r\n  }\r\n  return (\r\n    <div class={`wq-WNavigator ${open ? 'wq-is-active' : ''}`} key={id} id={id}>\r\n      <div class=\"wq--base\">\r\n        <Button type=\"primary\" onclick={onWizardOpen} xclass=\"wq-belongs-wnavbase\">{_Tv('Start Order')}</Button>\r\n        {messageValues.length > 0 ? (\r\n          <div class=\"wq--message wq-lct-enabled\" oncreate={tnOnCreate} onremove={tnOnRemove}>{_Tv(messageValues[0])}</div>\r\n        ) : null}\r\n        {/*Object.keys(messages).length > 0 ? (\r\n          <div class=\"wq--message wq-lct-enabled\" oncreate={tnOnCreate} onremove={tnOnRemove}>{_Tv('Your selection is insufficient.')}</div>\r\n        ) : null*/}\r\n      </div>\r\n      {open ? (\r\n        <div class={`wq--overlay wq-lct-enabled`} id=\"wq-wnav-overlay\" key=\"wnav-overlay\" oncreate={overlayOnCreate} onremove={overlayOnRemove}>\r\n          <div class={`wq--dialog`} key=\"wnav-dialog\">\r\n            {children}\r\n            <div class={`wq--main ${flipped ? 'wq-is-flipped' : ''}`} key=\"wnav-main\">\r\n              <div class=\"wq--slide wq-lct-enabled\" oncreate={tnOnCreate} onremove={tnOnRemove} key={`slide-${current}`} id={`slide-${current}`}>\r\n                {item && item.type == \"Selector\" ? (\r\n                  <Selector selector={form.detailItems[current]} onoptionchange={onoptionchange} selectedOptions={selectedOptions} labels={labels} message={message} navigator=\"wnavigator\"></Selector>\r\n                ) : null}\r\n                {item && item.type == \"Quantity\" ? (\r\n                  <Quantity quantity={item} value={data[item.id]} message={message} oninput={ontextinput} onblur={ontextblur} navigator=\"wnavigator\" />\r\n                ) : null}\r\n                {item && item.type == \"Slider\" ? (\r\n                  <Slider slider={item} value={data[item.id]} message={message} navigator=\"wnavigator\" oninput={ontextinput} onchange={onrangeblur} />\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n            <div class=\"wq--action\" key=\"wnav-action\">\r\n              <Button type=\"normal\" onclick={onWizardClose} xclass=\"wq-belongs-wnavdialog wq-for-closewizard\">{_Tv('Close')}</Button>\r\n              <div class=\"wq--spacer\" />\r\n              <Button type=\"normal\" onclick={onWizardPrev} xclass=\"wq-belongs-wnavdialog wq-for-backwizard\" disabled={(findPrevIndex(current2, data) == -1)}>{_Tv('Previous')}</Button>\r\n              <Button typr=\"normal\" onclick={onWizardNext} disabled={current2 == length} xclass=\"wq-belongs-wnavdialog wq-for-forwardwizard\">{_Tv('Next')}</Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  ) \r\n}\r\n\r\nconst Monitor = (\r\n    {\r\n      detailsState, \r\n      monitorPos, \r\n      confirming, \r\n      spShown, \r\n      onHide\r\n    }) => {\r\n  const id = `wq-monitor`\r\n  const doSidebar = wqData.form.navigator == 'horizontal' && wqData.sidebarSelector && !confirming\r\n  const style = doSidebar ? {left:monitorPos.left+'px', width:monitorPos.width+'px'} : {}\r\n  return (\r\n    <div class={`wq-Monitor ${confirming ? 'wq-is-confirming' : ''} ${spShown ? 'wq-is-spshown' : ''} ${doSidebar ? 'wq-is-sidebar' : ''} ${doSidebar ? ('wq-sticks-'+monitorPos.v) : ''}`} id={id} key={id} style={style}>\r\n      <div class=\"wq--header\">\r\n        <div class=\"wq--title\">{_T('Quotation Details')}</div>\r\n        <div class=\"wq--menu\">\r\n          <Button type=\"normal\" onclick={onHide} xclass=\"wq-belongs-monmenu wq-for-hidemonitor\">{_T('Hide Monitor')}</Button>\r\n        </div>\r\n      </div>\r\n      <div class=\"wq--entries\">\r\n        <div class=\"wq--entry wq-for-header\">\r\n          <div class=\"wq--prop wq-for-no\">{_Tv('No')}</div>\r\n          <div class=\"wq--prop wq-for-category\">{_Tv('Category')}</div>\r\n          <div class=\"wq--prop wq-for-entry\">{_Tv('Entry')}</div>\r\n          <div class=\"wq--prop wq-for-normalUnitPrice\">{_T('Regular Unit Price')}</div>\r\n          <div class=\"wq--prop wq-for-unitPrice\">{_Tv('Unit Price')}</div>\r\n          <div class=\"wq--prop wq-for-quantity\">{_Tv('Quantity')}</div>\r\n          <div class=\"wq--prop wq-for-price\">{_Tv('Price')}</div>\r\n          {!rule.taxIncluded && (<div class=\"wq--prop wq-for-taxClass\">{_Tv('Tax Class')}</div>)}\r\n        </div>\r\n        {detailsState.details.map((detail, i) => {\r\n          const id = `wq-monitor-entry-${detail.key}`\r\n          return (\r\n            <div class=\"wq--entry wq-for-entry wq-lct-enabled\" key={id} id={id} oncreate={tnOnCreate} onremove={tnOnRemove}>\r\n              <div class=\"wq--prop wq-for-no\">{i + 1}</div>\r\n              <div class=\"wq--prop wq-for-category\">{detail.category}</div>\r\n              <div class=\"wq--prop wq-for-entry\">{detail.name}</div>\r\n              <div class=\"wq--prop wq-for-normalUnitPrice\">{typeof detail.normalUnitPrice == 'number' ? nf(detail.normalUnitPrice) : null}</div>\r\n              <div class=\"wq--prop wq-for-unitPrice\">{typeof detail.unitPrice == 'number' ? nf(detail.unitPrice) : null}</div>\r\n              <div class=\"wq--prop wq-for-quantity\"><span class=\"wq--simpleDisplay\">{typeof detail.quantity == 'number' ? detail.quantity : null}</span><span class=\"wq--independentDisplay\">{typeof detail.quantity == 'number' ? sprintf(_T('x%s'), detail.quantity) : null}</span></div>\r\n              <div class=\"wq--prop wq-for-price\">{typeof detail.unitPrice == 'number' ? nf(normalizePrice(rule, detail.unitPrice * detail.quantity)) : null}</div>\r\n              {!rule.taxIncluded && (<div class=\"wq--prop wq-for-taxClass\">{typeof detail.unitPrice == 'number' ? (detail.taxRate === null ? sprintf(_Tv('(common %s%% applied)'), \"\"+rule.taxRate) : sprintf(_Tv('(%s%% applied)'), detail.taxRate)) : null}</div>)}\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n      {rule.taxIncluded \r\n        ? (() => {\r\n          return (\r\n            <div class=\"wq--footer\">\r\n              <div class=\"wq--entry wq-for-total\">\r\n                <div class=\"wq--prop wq-for-name\">{_Tv('Total')}</div>\r\n                <div class=\"wq--prop wq-for-normalValue\" key={detailsState.normalTotal}>{pricePrefix + nf(detailsState.normalTotal) + priceSuffix}</div>\r\n                <div class=\"wq--prop wq-for-value\">{pricePrefix}<span><span class=\"wq-lct-enabled\" id={detailsState.total} key={detailsState.total} oncreate={tnOnCreate} onremove={tnOnRemove}>{nf(detailsState.total)}</span></span>{priceSuffix}</div>\r\n              </div>\r\n            </div>\r\n          )\r\n        })() : (() => {\r\n          const subtotal = detailsState.total\r\n          const totalwt = reduceHash((cur, key, tax) => {\r\n            return cur + tax\r\n          }, subtotal, detailsState.taxes)\r\n          const defaultTax = detailsState.taxes.hasOwnProperty('') ? detailsState.taxes[''] : null\r\n          return (\r\n            <div class=\"wq--footer\">\r\n              <div class=\"wq--entry wq-for-subtotal\">\r\n                <div class=\"wq--prop wq-for-name\">{_Tv('Subtotal')}</div>\r\n                <div class=\"wq--prop wq-for-normalValue\" key={detailsState.normalTotal}>{pricePrefix + nf(detailsState.normalTotal) + priceSuffix}</div>\r\n                <div class=\"wq--prop wq-for-value\">{pricePrefix}<span><span class=\"wq-lct-enabled\" id={subtotal} key={subtotal} oncreate={tnOnCreate} onremove={tnOnRemove}>{nf(subtotal)}</span></span>{priceSuffix}</div>\r\n              </div>\r\n              {defaultTax !== null ? (\r\n                <div class=\"wq--entry wq-for-tax wq-rate-common\">\r\n                  <div class=\"wq--prop wq-for-name\">{sprintf(_Tv('Tax (common %s%%)'), \"\"+rule.taxRate)}</div>\r\n                  <div class=\"wq--prop wq-for-normalValue\"></div>\r\n                  <div class=\"wq--prop wq-for-value\">{pricePrefix}<span><span class=\"wq-lct-enabled\" id={defaultTax} key={defaultTax} oncreate={tnOnCreate} onremove={tnOnRemove}>{nf(defaultTax)}</span></span>{priceSuffix}</div>\r\n                </div>\r\n              ) : null}\r\n              {reduceHash((cur, key, tax) => {\r\n                if (key === \"\") return cur\r\n                return [...cur, \r\n                  <div class=\"wq--entry wq-for-tax wq-rate-individual\">\r\n                    <div class=\"wq--prop wq-for-name\">{sprintf(_Tv('Tax (%s%%)'), \"\"+key)}</div>\r\n                    <div class=\"wq--prop wq-for-normalValue\"></div>\r\n                    <div class=\"wq--prop wq-for-value\">{pricePrefix}<span><span class=\"wq-lct-enabled\" id={tax} key={tax} oncreate={tnOnCreate} onremove={tnOnRemove}>{nf(tax)}</span></span>{priceSuffix}</div>\r\n                  </div>\r\n                ]\r\n              }, [], detailsState.taxes)}\r\n              <div class=\"wq--entry wq-for-total\">\r\n                <div class=\"wq--prop wq-for-name\">{_Tv('Total')}</div>\r\n                <div class=\"wq--prop wq-for-normalValue\"></div>\r\n                <div class=\"wq--prop wq-for-value\">{pricePrefix}<span><span class=\"wq-lct-enabled\" id={totalwt} key={totalwt} oncreate={tnOnCreate} onremove={tnOnRemove}>{nf(totalwt)}</span></span>{priceSuffix}</div>\r\n              </div>\r\n            </div>\r\n          )\r\n        })()\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nconst attrItem_table = {}\r\nconst MSG_REQUIRED = 'Input here'\r\nconst MSG_INVALID = 'Invalid'\r\nconst MSG_TOCHECK = 'Check here'\r\nconst MSG_TOSELECT = 'Select here'\r\nconst MSG_DIFFERENT = 'Repeat here'\r\nconst MSG_TOOSMALL = 'Too small'\r\nconst MSG_TOOLARGE = 'Too large'\r\nconst MSG_HIRAGANA = 'Input in Hiragana'\r\nconst MSG_KATAKANA = 'Input in Katakana'\r\nconst MSG_UPLOADING = 'Wait for upload'\r\n\r\n// {type, id, name, required, note, divided}\r\nattrItem_table.Name = {}\r\nattrItem_table.Name.view = (item, state, actions) => {\r\n  const id = `wq-attr-name-${item.id}`\r\n  if (! item.divided) {\r\n    const name = `name-${item.id}`\r\n    return (\r\n      <Control label={item.name} required={item.required} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass={`wq-belongs-attr wq-for-name`} key={id} tnOnRemove={tnOnRemove}>\r\n        <TextInput type=\"text\" size=\"normal\" name={name} placeholder={_T('Your Name')} value={state.value} invalid={!!state.message} oninput={actions.oninput} onblur={actions.onblur} xclass={`wq-belongs-attr wq-belongs-name wq_attr-${item.id}`} />\r\n      </Control>\r\n    )\r\n  } else {\r\n    const names = [`name-${item.id}-0`, `attr-${item.id}-1`]\r\n    return (\r\n      <Control label={item.name} required={item.required} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass={`wq-belongs-attr wq-for-name wq-is-divided`} key={id} tnOnRemove={tnOnRemove}>\r\n        <InputGroup gutter=\"mini\" xclass={`wq-belongs-attr wq-belongs-name`}>\r\n          <TextInput type=\"text\" size=\"small\" name={names[0]} placeholder={_T('First Name')} value={state.value[0]} invalid={!!state.message} oninput={actions.oninput} onblur={actions.onblur} xclass={`wq-belongs-attr wq-belongs-name wq_attr-${item.id}`} />\r\n          <TextInput type=\"text\" size=\"small\" name={names[1]} placeholder={_T('Last Name')} value={state.value[1]} invalid={!!state.message} oninput={actions.oninput} onblur={actions.onblur} xclass={`wq-belongs-attr wq-belongs-name wq_attr-${item.id}`} />\r\n        </InputGroup>\r\n      </Control>\r\n    )\r\n  }\r\n}\r\nattrItem_table.Name.initialState = (item) => {\r\n  if (item.divided) {\r\n    return {value:[\"\", \"\"], message:null}\r\n  } else {\r\n    return {value:\"\", message:null}\r\n  }\r\n}\r\nattrItem_table.Name.compile = (item, state) => {\r\n  if (item.divided) {\r\n    return state.value.join(' ')\r\n  } else {\r\n    return state.value\r\n  }\r\n}\r\nattrItem_table.Name.hiraganaPattern = /^([ぁ-ん]|ー| |　)+$/\r\nattrItem_table.Name.katakanaPattern = /^([ァ-ン]|ー| |　)+$/\r\nattrItem_table.Name.validate = (item, state) => {\r\n  if (item.divided) {\r\n    if (!item.required && state.value[0] == \"\" && state.value[1] == \"\") {\r\n      // thru\r\n    } else if (state.value[0] == \"\" || state.value[1] == \"\") {\r\n      return {value:state.value, message:MSG_REQUIRED}\r\n    } else if (item.pattern == 'hiragana' && (!state.value[0].match(attrItem_table.Name.hiraganaPattern) || !state.value[1].match(attrItem_table.Name.hiraganaPattern))) {\r\n      return {value:state.value, message:MSG_HIRAGANA}\r\n    } else if (item.pattern == 'katakana' && (!state.value[0].match(attrItem_table.Name.katakanaPattern) || !state.value[1].match(attrItem_table.Name.katakanaPattern))) {\r\n      return {value:state.value, message:MSG_KATAKANA}\r\n    }\r\n    return {value:state.value, message:null}\r\n  } else {\r\n    if (!item.required && state.value == \"\") {\r\n      // thru\r\n    } else if (state.value == \"\") {\r\n      return {value:state.value, message:MSG_REQUIRED}\r\n    } else if (item.pattern == 'hiragana' && !state.value.match(attrItem_table.Name.hiraganaPattern)) {\r\n      return {value:state.value, message:MSG_HIRAGANA}\r\n    } else if (item.pattern == 'katakana' && !state.value.match(attrItem_table.Name.katakanaPattern)) {\r\n      return {value:state.value, message:MSG_KATAKANA}\r\n    }\r\n    return {value:state.value, message:null}\r\n  }\r\n}\r\nattrItem_table.Name.createActions = (item) => {\r\n  if (item.divided) {\r\n    return {\r\n      oninput: (ev) => (state, _actions) => {\r\n        const idx = branchNo(ev.currentTarget.name, '-')\r\n        return {...state, value:replaceElement(state.value, idx, ev.currentTarget.value)}\r\n      }, \r\n      onblur: (ev) => (state, _actions) => {\r\n        const idx = branchNo(ev.currentTarget.name, '-')\r\n        if (idx == 1) {\r\n          if (!item.required && state.value[0] == \"\" && state.value[1] == \"\") {\r\n            // thru\r\n          } else if (state.value[0] == \"\" || state.value[1] == \"\") {\r\n            return {value:state.value, message:MSG_REQUIRED}\r\n          } else if (item.pattern == 'hiragana' && (!state.value[0].match(attrItem_table.Name.hiraganaPattern) || !state.value[1].match(attrItem_table.Name.hiraganaPattern))) {\r\n            return {value:state.value, message:MSG_HIRAGANA}\r\n          } else if (item.pattern == 'katakana' && (!state.value[0].match(attrItem_table.Name.katakanaPattern) || !state.value[1].match(attrItem_table.Name.katakanaPattern))) {\r\n            return {value:state.value, message:MSG_KATAKANA}\r\n          }\r\n        }\r\n        return {...state, message:null}\r\n      }\r\n    }\r\n  } else {\r\n    return {\r\n      oninput: (ev) => (state, _actions) => {\r\n        return {value:ev.currentTarget.value, message:state.message}\r\n      }, \r\n      onblur: (ev) => ({value, _message}, _actions) => {\r\n        if (!item.required && value == \"\") {\r\n          // thru\r\n        } else if (value == \"\") {\r\n          return {value, message:MSG_REQUIRED}\r\n        } else if (item.pattern == 'hiragana' && !state.value.match(attrItem_table.Name.hiraganaPattern)) {\r\n          return {value:state.value, message:MSG_HIRAGANA}\r\n        } else if (item.pattern == 'katakana' && !state.value.match(attrItem_table.Name.katakanaPattern)) {\r\n          return {value:state.value, message:MSG_KATAKANA}\r\n        }\r\n        return {value, message:null}\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// {type, id, name, required, note, repeated}\r\nattrItem_table.Email = {}\r\nattrItem_table.Email.view = (item, state, actions) => {\r\n  const id = `wq-attr-email-${item.id}`\r\n  if (item.repeated) {\r\n    const names = [`email-${item.id}-0`, `email-${item.id}-1`]\r\n    return (\r\n      <Control label={item.name} required={item.required} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass=\"wq-belongs-attr wq-for-email\" key={id} tnOnRemove={tnOnRemove}>\r\n        <TextInput type=\"text\" size=\"full\" name={names[0]} placeholder={_T('info@example.com')} value={state.value[0]} invalid={!!state.message} oninput={actions.oninput} onblur={actions.onblur} xclass={`wq-belongs-attr wq-belongs-email wq_attr-${item.id}`} />\r\n        <TextInput type=\"text\" size=\"full\" name={names[1]} placeholder={_T('Confirm again')} value={state.value[1]} invalid={!!state.message} oninput={actions.oninput} onblur={actions.onblur} xclass={`wq-belongs-attr wq-belongs-email wq_attr-${item.id}`} />\r\n      </Control>\r\n    )\r\n  } else {\r\n    const name = `email-${item.id}`\r\n    return (\r\n      <Control label={item.name} required={item.required} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass=\"wq-belongs-attr wq-for-email\" key={id} tnOnRemove={tnOnRemove}>\r\n        <TextInput type=\"text\" size=\"full\" name={name} placeholder={_T('info@example.com')} value={state.value} invalid={!!state.message} oninput={actions.oninput} onblur={actions.onblur} xclass={`wq-belongs-attr wq-belongs-email wq_attr-${item.id}`} />\r\n      </Control>\r\n    )\r\n  }\r\n}\r\nattrItem_table.Email.pattern = /^([a-zA-Z0-9])+([a-zA-Z0-9\\._-])*@([a-zA-Z0-9_-])+([a-zA-Z0-9\\._-]+)+$/\r\nattrItem_table.Email.initialState = (item) => {\r\n  if (item.repeated) {\r\n    return {value:[\"\", \"\"], message:null}\r\n  } else {\r\n    return {value:\"\", message:null}\r\n  }\r\n}\r\nattrItem_table.Email.compile = (item, state) => {\r\n  if (item.repeated) {\r\n    return state.value[0]\r\n  } else {\r\n    return state.value\r\n  }\r\n}\r\nattrItem_table.Email.validate = (item, state) => {\r\n  if (item.repeated) {\r\n    if (!item.required && state.value[0] == \"\" && state.value[1] == \"\") {\r\n      // thru\r\n    } else if (state.value[0] == \"\" || state.value[1] == \"\") {\r\n      return {...state, message:MSG_REQUIRED}\r\n    } else if (!state.value[0].match(attrItem_table.Email.pattern)) {\r\n      return {...state, message:MSG_INVALID}\r\n    } else if (state.value[0] != state.value[1]) {\r\n      return {...state, message:MSG_DIFFERENT}\r\n    }\r\n    return {...state, message:null}\r\n  } else {\r\n    if (!item.required && state.value == \"\") {\r\n      // thru\r\n    } else if (state.value == \"\") {\r\n      return {value:state.value, message:MSG_REQUIRED}\r\n    } else if (!state.value.match(attrItem_table.Email.pattern)) {\r\n      return {value:state.value, message:MSG_INVALID}\r\n    }\r\n    return {value:state.value, message:null}\r\n  }\r\n}\r\nattrItem_table.Email.createActions = (item) => {\r\n  if (item.repeated) {\r\n    return {\r\n      oninput: (ev) => (state, _actions) => {\r\n        const idx = branchNo(ev.currentTarget.name, '-')\r\n        return {...state, value:replaceElement(state.value, idx, ev.currentTarget.value)}\r\n      }, \r\n      onblur: (ev) => ({value, _message}, _actions) => {\r\n        const idx = branchNo(ev.currentTarget.name, '-')\r\n        if (idx == 1) {\r\n          if (!item.required && value[0] == \"\" && value[1] == \"\") {\r\n            // thru\r\n          } else if (value[0] == \"\" || value[1] == \"\") {\r\n            return {value, message:MSG_REQUIRED}\r\n          } else if (!value[0].match(attrItem_table.Email.pattern)) {\r\n            return {value, message:MSG_INVALID}\r\n          } else if (value[0] != value[1]) {\r\n            return {value, message:MSG_DIFFERENT}\r\n          }\r\n        }\r\n        return {value, message:null}\r\n      }\r\n    }\r\n  } else {\r\n    return {\r\n      oninput: (ev) => (state, _actions) => {\r\n        return {value:ev.currentTarget.value, message:state.message}\r\n      }, \r\n      onblur: (ev) => ({value, _message}, _actions) => {\r\n        if (!item.required && value == \"\") {\r\n          // thru\r\n        } else if (value == \"\") {\r\n          return {value, message:MSG_REQUIRED}\r\n        } else if (!value.match(attrItem_table.Email.pattern)) {\r\n          return {value, message:MSG_INVALID}\r\n        }\r\n        return {value, message:null}\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// {type, id, name, divided, required, note}\r\nattrItem_table.Tel = {}\r\nattrItem_table.Tel.view = (item, state, actions) => {\r\n  const id = `wq-attr-tel-${item.id}`\r\n  if (item.divided) {\r\n    const name = `tel-${item.id}`\r\n    const phs = _T('03-1111-2222').split('-')\r\n    return (\r\n      <Control label={item.name} required={item.required} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass=\"wq-belongs-attr wq-for-tel\" key={id} tnOnRemove={tnOnRemove}>\r\n        <InputGroup xclass=\"wq-belongs-attr wq-belongs-tel\">\r\n          <TextInput type=\"tel\" size=\"nano\" name={name+'-0'} placeholder={phs[0]} value={state.value[0]} invalid={!!state.message} oninput={actions.oninput} onblur={actions.onblur} xclass={`wq-belongs-attr wq-belongs-tel wq_attr-${item.id}`} />\r\n          <span>-</span>\r\n          <TextInput type=\"tel\" size=\"mini\" name={name+'-1'} placeholder={phs[1]} value={state.value[1]} invalid={!!state.message} oninput={actions.oninput} onblur={actions.onblur} xclass={`wq-belongs-attr wq-belongs-tel wq_attr-${item.id}`} />\r\n          <span>-</span>\r\n          <TextInput type=\"tel\" size=\"mini\" name={name+'-2'} placeholder={phs[2]} value={state.value[2]} invalid={!!state.message} oninput={actions.oninput} onblur={actions.onblur} xclass={`wq-belongs-attr wq-belongs-tel wq_attr-${item.id}`} />\r\n        </InputGroup>\r\n      </Control>\r\n    )\r\n  } else {\r\n    const name = `tel-${item.id}`\r\n    return (\r\n      <Control label={item.name} required={item.required} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass=\"wq-belongs-attr wq-for-tel\" key={id} tnOnRemove={tnOnRemove}>\r\n        <TextInput type=\"tel\" size=\"small\" name={name} placeholder={_T('03-1111-2222')} value={state.value} invalid={!!state.message} oninput={actions.oninput} onblur={actions.onblur} xclass={`wq-belongs-attr wq-belongs-tel wq_attr-${item.id}`} />\r\n      </Control>\r\n    )\r\n  }\r\n}\r\nattrItem_table.Tel.initialState = (item) => {\r\n  if (item.divided) {\r\n    return {value:[\"\", \"\", \"\"], message:null}\r\n  } else {\r\n    return {value:\"\", message:null}\r\n  }\r\n}\r\nattrItem_table.Tel.compile = (item, state) => {\r\n  if (item.divided) {\r\n    return (state.value[0] == '') ? '' : state.value.join('-')\r\n  } else {\r\n    return state.value\r\n  }\r\n}\r\nattrItem_table.Tel.validate = (item, state) => {\r\n  if (item.divided) {\r\n    if (!item.required && state.value.every(emptyString)) {\r\n      // thru\r\n    } else if (state.value.some(emptyString)) {\r\n      return {value:state.value, message:MSG_REQUIRED}\r\n    } else if (! state.value.join('').match(/^[0-9]+$/)) {\r\n      return {value:state.value, message:MSG_INVALID}\r\n    }\r\n    return {value:state.value, message:null}\r\n  } else {\r\n    if (!item.required && state.value == \"\") {\r\n      // thru\r\n    } else if (state.value == \"\") {\r\n      return {value:state.value, message:MSG_REQUIRED}\r\n    } else if (! state.value.match(/^[0-9-]+$/)) {\r\n      return {value:state.value, message:MSG_INVALID}\r\n    }\r\n    return {value:state.value, message:null}\r\n  }\r\n}\r\nattrItem_table.Tel.createActions = (item) => {\r\n  if (item.divided) {\r\n    return {\r\n      oninput: (ev) => (state, _actions) => {\r\n        const idx = branchNo(ev.currentTarget.name, '-')\r\n        return {...state, value:replaceElement(state.value, idx, ev.currentTarget.value)}\r\n      }, \r\n      onblur: (ev) => ({value, _message}, _actions) => {\r\n        const idx = branchNo(ev.currentTarget.name, '-')\r\n        if (idx == 2) {\r\n          if (!item.required && value.every(emptyString)) {\r\n            // thru\r\n          } else if (value.some(emptyString)) {\r\n            return {value, message:MSG_REQUIRED}\r\n          } else if (! value.join('').match(/^[0-9]+$/)) {\r\n            return {value, message:MSG_INVALID}\r\n          }\r\n        }\r\n        return {value, message:null}\r\n      }\r\n    }\r\n  } else {\r\n    return {\r\n      oninput: (ev) => (state, _actions) => {\r\n        return {...state, value:ev.currentTarget.value}\r\n      }, \r\n      onblur: (ev) => ({value, _message}, _actions) => {\r\n        if (!item.required && value == \"\") {\r\n          // thru\r\n        } else if (value == \"\") {\r\n          return {value, message:MSG_REQUIRED}\r\n        } else if (! value.match(/^[0-9-]+$/)) {\r\n          return {value, message:MSG_INVALID}\r\n        }\r\n        return {value, message:null}\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// {type, id, name, required, note, autoFill}\r\nattrItem_table.Address = {}\r\nattrItem_table.Address.view = (item, state, actions) => {\r\n  const id = `wq-attr-address-${item.id}`\r\n  const name = `address-${item.id}`\r\n  return (\r\n    <Control label={item.name} required={item.required} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass={`wq-belongs-attr wq-for-address`} key={id} tnOnRemove={tnOnRemove}>\r\n      <InputGroup gutter=\"mini\" xclass=\"wq-belongs-attr wq-belongs-address\">\r\n        <span>{_Tv('Zip')}</span>\r\n        <TextInput type=\"tel\" name={`${name}-0`} size=\"small\" value={state.value[0]} oninput={actions.oninput} onblur={actions.onblur} placeholder={_T('000-0000')} invalid={!!state.message} xclass={`wq-belongs-attr wq-belongs-address wq-for-zip wq_attr-${item.id}`} />\r\n      </InputGroup>\r\n      <InputGroup gutter=\"mini\" xclass=\"wq-belongs-attr wq-belongs-address\">\r\n        <TextInput type=\"text\" name={`${name}-1`} size=\"small\" value={state.value[1]} oninput={actions.oninput} onblur={actions.onblur} placeholder={_T('Tokyo')} invalid={!!state.message} xclass={`wq-belongs-attr wq-belongs-address wq-for-pref wq_attr-${item.id}`} />\r\n        <TextInput type=\"text\" name={`${name}-2`} size=\"small\" value={state.value[2]} oninput={actions.oninput} onblur={actions.onblur} placeholder={_T('Chiyoda-ku')} invalid={!!state.message} xclass={`wq-belongs-attr wq-belongs-address wq-for-city wq_attr-${item.id}`} />\r\n      </InputGroup>\r\n      <TextInput type=\"text\" name={`${name}-3`} size=\"full\" value={state.value[3]} oninput={actions.oninput} onblur={actions.onblur} placeholder={_T('1-1-1, Chiyoda')} invalid={!!state.message} xclass={`wq-belongs-attr wq-belongs-address wq-for-street wq_attr-${item.id}`} />\r\n      <TextInput type=\"text\" name={`${name}-4`} size=\"full\" value={state.value[4]} oninput={actions.oninput} onblur={actions.onblur} placeholder={_T('Chiyoda mansion 8F')} invalid={!!state.message} xclass={`wq-belongs-attr wq-belongs-address wq-for-room wq_attr-${item.id}`} />\r\n    </Control>\r\n  )\r\n}\r\nattrItem_table.Address.initialState = (_item) => ({message:null, value:[\"\", \"\", \"\", \"\", \"\"]})\r\nattrItem_table.Address.compile = (_item, state) => {\r\n  if (state.value.every(emptyString)) {\r\n    return \"\"\r\n  } else {\r\n    return `${state.value[0]} ${state.value[1]}${state.value[2]}${state.value[3]} ${state.value[4]}`\r\n  }\r\n}\r\nattrItem_table.Address.validate = (item, {value, message}) => {\r\n  if (!item.required && value.every(emptyString)) {\r\n    // thru\r\n  } else if (value[0] == \"\" || value[1] == \"\" || value[2] == \"\" || value[3] == \"\") {\r\n    return {value, message:MSG_REQUIRED}\r\n  } else if (! value[0].match(new RegExp(_T('^[0-9]{3}-?[0-9]{4}$')))) {\r\n    return {value, message:MSG_INVALID}\r\n  }\r\n  return {value, message:null}\r\n}\r\nattrItem_table.Address.createActions = (item) => {\r\n  return {\r\n    oninput: (ev) => (state, actions) => {\r\n      const idx = branchNo(ev.currentTarget.name, '-')\r\n      const curval = ev.currentTarget.value\r\n      if (item.autoFill == 'yubinbango' && idx == 0 && curval.match(new RegExp(_T('^[0-9]{3}-?[0-9]{4}$')))) {\r\n        window.requestAnimationFrame(() => complementAddress(curval, actions.onfill))\r\n      }\r\n      return {...state, value:replaceElement(state.value, idx, curval)}\r\n    }, \r\n    onblur: (ev) => ({value, message}, actions) => {\r\n      const idx = branchNo(ev.currentTarget.name, '-')\r\n      if (idx == 4) {\r\n        if (!item.required && value.every(emptyString)) {\r\n          // thru\r\n        } else if (value[0] == \"\" || value[1] == \"\" || value[2] == \"\" || value[3] == \"\") {\r\n          return {value, message:MSG_REQUIRED}\r\n        } else if (! value[0].match(new RegExp(_T('^[0-9]{3}-?[0-9]{4}$')))) {\r\n          return {value, message:MSG_INVALID}\r\n        }\r\n      }\r\n      return {value, message:null}\r\n    }, \r\n    onfill: (fs) => ({value, message}, actions) => {\r\n      value = [value[0], fs.region, fs.locality, fs.street, value[4]]\r\n      return {value, message}\r\n    }\r\n  }\r\n}\r\n\r\n// {type, id, name, required, note}\r\nattrItem_table.Checkbox = {}\r\nattrItem_table.Checkbox.view = (item, state, actions) => {\r\n  const id = `wq-attr-checkbox-${item.id}`\r\n  const name = `checkbox-${item.id}`\r\n  return (\r\n    <Control label=\"\" required={false} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass=\"wq-belongs-attr wq-for-checkbox\" key={id} tnOnRemove={tnOnRemove}>\r\n      <InputGroup xclass=\"wq-belongs-attr wq-belongs-checkbox\">\r\n        <Checkbox name={name} value=\"true\" checked={state.checked} invalid={!!state.message} onchange={actions.onchange} xclass={`wq-belongs-attr wq-belongs-checkbox`} inputXclass={`wq_attr-${item.id} wq-belongs-attr`}>{item.name}</Checkbox>\r\n      </InputGroup>\r\n    </Control>\r\n  )\r\n}\r\nattrItem_table.Checkbox.initialState = (item) => ({checked:!!item.initialValue, message:null})\r\nattrItem_table.Checkbox.compile = (_item, state) => (state.checked ? _T('Checked') : '')\r\nattrItem_table.Checkbox.validate = (item, state) => {\r\n  if (item.required && !state.checked) {\r\n    return {checked:state.checked, message:MSG_TOCHECK}\r\n  }\r\n  return (state.message == null) ? state : {checked:state.checked, message:null}\r\n}\r\nattrItem_table.Checkbox.createActions = (item) => {\r\n  return {\r\n    onchange: (ev) => ({checked, message}, actions) => {\r\n      if (ev.currentTarget.checked) {\r\n        return {checked:true, message:null}\r\n      } else if (item.required) {\r\n        return {checked:false, message:MSG_TOCHECK}\r\n      } else {\r\n        return {checked:false, message:null}\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// {type, id, name, required, note, options}\r\nattrItem_table.Radio = {}\r\nattrItem_table.Radio.view = (item, state, actions) => {\r\n  const id = `wq-attr-radio-${item.id}`\r\n  const name = `radio-${item.id}`\r\n  return (\r\n    <Control label={item.name} required={item.required} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass=\"wq-belongs-attr wq-for-radio\" key={id} tnOnRemove={tnOnRemove}>\r\n      <InputGroup gutter=\"mini\" xclass=\"wq-belongs-attr wq-belongs-radio\">\r\n        {item.options.map((opt, i) => {\r\n          return (\r\n            <RadioButton name={name} value={opt} checked={state.value == opt} invalid={!!state.message} onchange={actions.onchange} index={i} xclass={`wq-belongs-attr wq-belongs-radio`} inputXclass={`wq_attr-${item.id} wq-belongs-attr`}>{opt}</RadioButton>\r\n          )\r\n        })}\r\n      </InputGroup>\r\n    </Control>\r\n  )\r\n}\r\nattrItem_table.Radio.initialState = (item) => {\r\n  const vs = item.options.filter(o => o == item.initialValue)\r\n  return {value:vs.length > 0 ? vs[0] : null, message:null}\r\n}\r\nattrItem_table.Radio.compile = (_item, state) => state.value\r\nattrItem_table.Radio.validate = (item, state) => {\r\n  if (!item.required && state.value == null) {\r\n    // thru\r\n  } else if (state.value == null) {\r\n    return {value:state.value, message:MSG_TOSELECT}\r\n  } else if (indexOf(state.value, item.options) == -1) {\r\n    return {value:state.value, message:MSG_INVALID}\r\n  }\r\n  return {value:state.value, message:null}\r\n}\r\nattrItem_table.Radio.createActions = (item) => {\r\n  return {\r\n    onchange: (ev) => ({value, message}, actions) => {\r\n      if (ev.currentTarget.checked) {\r\n        const value = ev.currentTarget.value || null\r\n        return {value, message:null}\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// {type, id, name, required, note, options}\r\nattrItem_table.Dropdown = {}\r\nattrItem_table.Dropdown.view = (item, state, actions) => {\r\n  const id = `wq-attr-dropdown-${item.id}`\r\n  const name = `dropdown-${item.id}`\r\n  const placeholder = _T('Please select')\r\n  return (\r\n    <Control label={item.name} required={item.required} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass=\"wq-belongs-attr wq-for-dropdown\" key={id} tnOnRemove={tnOnRemove}>\r\n      <Select name={name} options={item.options} value={state.value} invalid={!!state.message} onchange={actions.onchange} xclass={`wq-belongs-attr wq-belongs-select`} inputXclass={`wq_attr-${item.id} wq-belongs-attr`} placeholder={placeholder} />\r\n    </Control>\r\n  )\r\n}\r\nattrItem_table.Dropdown.initialState = attrItem_table.Radio.initialState\r\nattrItem_table.Dropdown.compile = attrItem_table.Radio.compile\r\nattrItem_table.Dropdown.validate = attrItem_table.Radio.validate\r\nattrItem_table.Dropdown.createActions = (item) => {\r\n  return {\r\n    onchange: (ev) => ({_value, message}, actions) => {\r\n      const value = ev.currentTarget.value || null\r\n      return {value, message: (!value && item.required) ? MSG_TOSELECT : null}\r\n    }\r\n  }\r\n}\r\n\r\n// {type, id, name, required, note, options, initialValue}\r\nattrItem_table.MultiCheckbox = {}\r\nattrItem_table.MultiCheckbox.view = (item, state, actions) => {\r\n  const id = `wq-attr-multicheckbox-${item.id}`\r\n  const name = `multicheckbox-${item.id}`\r\n  return (\r\n    <Control label={item.name} required={item.required} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass=\"wq-belongs-attr wq-for-multicheckbox\" key={id} tnOnRemove={tnOnRemove}>\r\n      <InputGroup gutter=\"mini\" xclass=\"wq-belongs-attr wq-belongs-multicheckbox\">\r\n        {item.options.map((opt, i) => {\r\n          return (\r\n            <Checkbox id={`${id}-${i}`} name={name} value={opt} checked={indexOf(opt, state.value) != -1} invalid={!!state.message} onchange={actions.onchange} xclass={`wq-belongs-attr wq-belongs-multicheckbox`} inputXclass={`wq_attr-${item.id} wq-belongs-attr`}>{opt}</Checkbox>\r\n          )\r\n        })}\r\n      </InputGroup>\r\n    </Control>\r\n  )\r\n}\r\nattrItem_table.MultiCheckbox.initialState = (item) => {\r\n  return {value:item.initialValue, message:null}\r\n}\r\nattrItem_table.MultiCheckbox.compile = (_item, state) => state.value\r\nattrItem_table.MultiCheckbox.validate = (item, state) => {\r\n  if (!item.required && state.value.length == 0) {\r\n    // thru\r\n  } else if (state.value.length == 0) {\r\n    return {value:state.value, message:MSG_TOSELECT}\r\n  }\r\n  return {value:state.value, message:null}\r\n}\r\nattrItem_table.MultiCheckbox.createActions = (item) => {\r\n  return {\r\n    onchange: (ev) => ({value, message}, actions) => {\r\n      const v = ev.currentTarget.value\r\n      return {\r\n        value: ev.currentTarget.checked ? [...value, v] : value.filter(v0 => v0 != v), \r\n        message: null\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// {type, id, name, required, note, size, placeholder, multiline}\r\nattrItem_table.Text = {}\r\nattrItem_table.Text.view = (item, state, actions) => {\r\n  const id = `wq-attr-text-${item.id}`\r\n  const name = `text-${item.id}`\r\n  if (item.multiline) {\r\n    return (\r\n      <Control label={item.name} required={item.required} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass={`wq-belongs-attr wq-for-text wq-has-textarea`} key={id} tnOnRemove={tnOnRemove}>\r\n        <TextArea size={item.size} name={name} placeholder={item.placeholder} value={state.value} invalid={!!state.message} oninput={actions.oninput} onblur={actions.onblur} xclass={`wq-belongs-attr wq-belongs-text wq_attr-${item.id}`} /> \r\n      </Control>\r\n    )\r\n  } else {\r\n    return (\r\n      <Control label={item.name} required={item.required} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass={`wq-belongs-attr wq-for-text`}>\r\n        <TextInput type=\"text\" size={item.size} name={name} placeholder={item.placeholder} value={state.value} invalid={!!state.message} oninput={actions.oninput} onblur={actions.onblur} xclass={`wq-belongs-attr wq-belongs-text wq_attr-${item.id}`} /> \r\n      </Control>\r\n    )\r\n  }\r\n}\r\nattrItem_table.Text.initialState = (_item) => ({value:\"\", message:null})\r\nattrItem_table.Text.compile = (_item, state) => state.value\r\nattrItem_table.Text.validate = (item, state) => {\r\n  if (item.required && state.value == \"\") {\r\n    return {value:state.value, message:MSG_REQUIRED}\r\n  }\r\n  return (state.message == null) ? state : {value:state.value, message:null}\r\n}\r\nattrItem_table.Text.createActions = (item) => {\r\n  return {\r\n    oninput: (ev) => (state, _actions) => {\r\n      return {...state, value:ev.currentTarget.value}\r\n    }, \r\n    onblur: (ev) => (state, _actions) => {\r\n      if (item.required && state.value == \"\") {\r\n        return {value:state.value, message:MSG_REQUIRED}\r\n      } else {\r\n        return {value:state.value, message:null}\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// {id, type, action, siteKey}\r\nattrItem_table.reCAPTCHA3 = {}\r\nattrItem_table.reCAPTCHA3.view = (item, state, actions) => null\r\nattrItem_table.reCAPTCHA3.initialState = item => {\r\n  if (item.siteKey) {\r\n    // サイトキー・シークレットキーが入力されている場合のみ動作する。\r\n    window.setTimeout(() => {\r\n      // Gutenberg executes this code *before* document.body initialized.\r\n      // So defer its execution.\r\n      var e = document.createElement(\"script\");\r\n      e.setAttribute('src', `https://www.google.com/recaptcha/api.js?render=${item.siteKey}`)\r\n      document.body.appendChild(e)\r\n    }, 1000)\r\n  }\r\n  \r\n  return {value:\"\", message:null}\r\n}\r\nattrItem_table.reCAPTCHA3.compile = (item, _state) => {\r\n  if (!item.siteKey) return \"\"\r\n  return (postfix) => {\r\n    grecaptcha.execute(item.siteKey, {action: item.action}).then(token => {\r\n      postfix(token)\r\n    })\r\n  }\r\n}\r\nattrItem_table.reCAPTCHA3.validate = (item, state) => {\r\n  return state\r\n}\r\nattrItem_table.reCAPTCHA3.createActions = (item) => {{}}\r\n\r\n// item = {id, type, multiple, extensions, maxsize}\r\n// state = {value, message};  value = {key, name, url}[]\r\nattrItem_table.File = {}\r\nattrItem_table.File.view = (item, state, actions) => {\r\n  const id = `wq-attr-file-${item.id}`\r\n  const name = `file-${item.id}`\r\n  return (\r\n    <Control label={item.name} required={item.required} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass={`wq-belongs-attr wq-for-file`} tnOnRemove={tnOnRemove}>\r\n      <InputGroup gutter=\"mini\" xclass=\"wq-belongs-attr wq-belongs-file\">\r\n        {(item.multiple || state.value.length == 0) ? (\r\n          <FileInput key=\"file-input\" name={name} onchange={actions.onChange} extensions={item.extensions} multiple={item.multiple} inputXclass={`wq_attr-${item.id}`} xclass={`${state.dragover ? 'wq-is-dragging' : ''} wq-belongs-attr`} invalid={!!state.message} ondragover={actions.onDragOver} ondragleave={actions.onDragLeave} ondrop={actions.onDrop}>{_T('Drop files here or click')}</FileInput>\r\n        ) : null}\r\n        {state.value.map((file, i) => {\r\n          return (\r\n            <File index={i} key={file.key} url={file.url} name={file.name} loading={!file.url} ondelete={actions.onDelete} tnOnRemove={tnOnRemove} />\r\n          )\r\n        })}\r\n      </InputGroup>\r\n    </Control>\r\n  )\r\n}\r\nattrItem_table.File.initialState = (item) => {\r\n  return {value:[], message:null, dragover:false}\r\n}\r\nattrItem_table.File.compile = (item, state) => {\r\n  return state.value.map(({key:_key, ...rv}) => rv)\r\n}\r\nattrItem_table.File.validate = (item, state) => {\r\n  if (item.required && state.value.length == 0) {\r\n    return {value:state.value, message:MSG_REQUIRED}\r\n  }\r\n  for (let i = 0; i < state.value.length; i++) {\r\n    if (! state.value[i].url) return {...state, message:MSG_UPLOADING}\r\n  }\r\n  return (state.message == null) ? state : {...state, message:null}\r\n}\r\nattrItem_table.File.createActions = (item) => {\r\n  return {\r\n    onDelete: (ev) => (state, actions) => {\r\n      const index = ev.currentTarget.dataset.index\r\n      if (window.confirm(_T('Removing the file. Are you sure?'))) {\r\n        const value = [...state.value]\r\n        value.splice(index, 1)\r\n        return {...state, value}\r\n      }\r\n    }, \r\n    onChange: (ev) => (state, actions) => {\r\n      const uploadId = Math.floor((new Date()).getTime() / 1000)\r\n      const files = ev.currentTarget.files\r\n      const results = window.aformsUpload(form.id, item, uploadId, files, actions.onChangeK)\r\n      const value = [...state.value]\r\n      for (let i = 0; i < files.length; i++) {\r\n        if (! results[i]) continue\r\n        value.push({\r\n          key: uploadId + '-' + i, \r\n          name: files[i].name, \r\n          url: null\r\n        })\r\n      }\r\n      return {...state, value}\r\n    }, \r\n    onChangeK: ({uploadId, urls, message:serverMsg}) => (state, actions) => {\r\n      if (serverMsg) {\r\n        window.alert(serverMsg)\r\n      }\r\n      const value = [...state.value]\r\n      urls.forEach((url, i) => {\r\n        const key = uploadId + '-' + i\r\n        const pos = findIndexByProp('key', key, value)\r\n        if (pos == -1) return\r\n        if (url) {\r\n          value[pos] = {...value[pos], url}\r\n        } else {\r\n          value.splice(pos, 1)\r\n        }\r\n      })\r\n      const message = (value.length && state.message) ? null : state.message\r\n      return {...state, value, message}\r\n    }, \r\n    onDragOver: (ev) => (state, actions) => {\r\n      ev.preventDefault()\r\n      return {...state, dragover:true}\r\n    }, \r\n    onDragLeave: (ev) => (state, actions) => {\r\n      return {...state, dragover:false}\r\n    }, \r\n    onDrop: (ev) => (state, actions) => {\r\n      ev.preventDefault()\r\n      const uploadId = Math.floor((new Date()).getTime() / 1000)\r\n      const files = ev.dataTransfer.files\r\n      const results = window.aformsUpload(form.id, item, uploadId, files, actions.onChangeK)\r\n      const value = [...state.value]\r\n      for (let i = 0; i < files.length; i++) {\r\n        if (! results[i]) continue\r\n        value.push({\r\n          key: uploadId + '-' + i, \r\n          name: files[i].name, \r\n          url: null\r\n        })\r\n      }\r\n      return {...state, value, dragover:false}\r\n    }\r\n  }\r\n}\r\n\r\n\r\nconst assembleAttrItems = (items) => {\r\n  return items.reduce(({state, actions}, item) => {\r\n    const s = attrItem_table[item.type].initialState(item)\r\n    const a = attrItem_table[item.type].createActions(item)\r\n    return {actions:{...actions, [item.id]:a}, state:{...state, [item.id]:s}}\r\n  }, {actions:{}, state:{}})\r\n}\r\n\r\nconst viewAttrItems = (state, actions) => {\r\n  return (\r\n    <div class=\"wq-Attributes\">\r\n      {form.attrItems.map(item => {\r\n        return attrItem_table[item.type].view(item, state[item.id], actions[item.id])\r\n      })}\r\n    </div>\r\n  )\r\n}\r\nconst viewAttrItemsToConfirm = (state, actions) => {\r\n  return (\r\n    <div class=\"wq-Attributes wq-is-confirming\">\r\n      {form.attrItems.map(item => {\r\n        if (item.type == 'reCAPTCHA3') return null\r\n        const id = `wq-attr-${item.type.toLowerCase()}-${item.id}`\r\n        const value = attrItem_table[item.type].compile(item, state[item.id])\r\n        return (\r\n          <Control label={item.name} required={item.required} id={id} key={id}>\r\n            {item.type == 'File' ? (\r\n              <InputGroup gutter=\"mini\" xclass=\"wq-belongs-attr wq-belongs-file\">\r\n                {value.map((file, i) => {\r\n                  return (\r\n                    <File index={i} key={`file-${i}`} url={file.url} name={file.name} loading={!file.url} ondelete={null} tnOnRemove={tnOnRemove} readonly />\r\n                  )\r\n                })}\r\n              </InputGroup>\r\n            ) : (\r\n              <Echo value={value} xclass={`wq-belongs-attr wq_attr-${item.id}`} glue={_T(', ')}></Echo>\r\n            )}\r\n          </Control>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst validateAttrData = (state) => {\r\n  return form.attrItems.reduce((state, item) => {\r\n    const s = attrItem_table[item.type].validate(item, state[item.id])\r\n    if (s === state[item.id]) return state\r\n    return {...state, [item.id]:s}\r\n  }, state)\r\n}\r\n\r\n\r\n/*\r\n * ===============================================================\r\n * domain\r\n */\r\n\r\n// Catalog = string{}\r\n// SelectOption = {id:number, image:?string, name:string, note:?string, normalPrice:?number, price:number, labels:any{}, depends:any{}}\r\n// Select = {type:'Select', id:number, image:?string, name:string, note:?string, multiple:bool, options:SelectOption[]}\r\n// Hidden = {type:'Hidden', id:number, image:?string, category:?string, name:string, price:number, depends:any{}}\r\n// Item = Select | Hidden\r\n// Form = {id:number, items:Item[]}\r\n// SelectedOptions = any{}\r\n// Input = SelectedOptions\r\n// State = {inputs:Input{}, labels:any{}}\r\n// Detail = {category:?string, name:string, unitPrice:number, quantity:number}\r\n\r\n\r\nconst createDetail = (key, category, name, quantity, normalUnitPrice, unitPrice, taxRate) => {\r\n  return {key, category, name, quantity, normalUnitPrice, unitPrice, taxRate}\r\n}\r\n\r\n// inputs -> [inputs, labels, details, total]\r\nconst process = (inputs) => {\r\n  const {env:_env, effectiveTotal:_effectiveTotal, ...rv} = form.detailItems.reduce((cur, item) => {\r\n    return processTable[item.type](cur, item)\r\n  }, {inputs, env:{}, labels:{}, details:[], total:0, normalTotal:0, effectiveTotal:0})\r\n\r\n  if (rule.taxIncluded) return rv\r\n\r\n  const subtotals = rv.details.reduce((subtotals, detail) => {\r\n    if (detail.unitPrice === null) return subtotals\r\n    const key = detail.taxRate === null ? \"\" : \"\"+detail.taxRate\r\n    const subtotal = (\r\n      subtotals.hasOwnProperty(key) ? subtotals[key] : 0\r\n    ) + normalizePrice(rule, detail.unitPrice * detail.quantity)\r\n    return {...subtotals, [key]:subtotal}\r\n  }, {})\r\n\r\n  const taxes = reduceHash((cur, key, subtotal) => {\r\n    const taxRate = key === \"\" ? rule.taxRate : key\r\n    const tax = normalizePrice(rule, subtotal * taxRate * 0.01)\r\n    return {...cur, [key]:tax}\r\n  }, {}, subtotals)\r\n\r\n  return {...rv, subtotals, taxes}\r\n}\r\nconst processTable = {\r\n  Selector: (cur, item) => {\r\n    if (! cur.inputs.hasOwnProperty(item.id)) {\r\n      return cur\r\n    }\r\n    return item.options.reduce((cur, option) => {\r\n      // We check because there can be a case where the option was cleared and the item had no selection.\r\n      if (! cur.inputs.hasOwnProperty(item.id)) {\r\n        return cur\r\n      }\r\n      const selectedOptions = cur.inputs[item.id]\r\n      if (! selectedOptions.hasOwnProperty(option.id)) {\r\n        return cur\r\n      }\r\n      if (! satisfied(cur.labels, option.depends)) {\r\n        // The dependency not met. Then clear selection.\r\n        const inputs = {...cur.inputs, [item.id]:exclude(selectedOptions, option.id)}\r\n        return {...cur, inputs}\r\n      }\r\n      const labels = extend(cur.labels, option.labels)\r\n      if (option.format == 'none') {\r\n        return {...cur, labels}\r\n      } else if (option.format == 'name') {\r\n        const detail = createDetail(`Option-${item.id}-${option.id}`, item.name, option.name, null, null, null, null)\r\n        const details = [...cur.details, detail]\r\n        return {...cur, labels, details}\r\n      } else {  // option.format == 'regular'\r\n        const quantity0 = findQuantity(cur.inputs, item.quantity, cur.labels, cur.env)\r\n        const quantity = option.type == 'Option' ? quantity0\r\n          : quantity0 * selectedOptions[option.id]\r\n        if (isNaN(quantity)) {\r\n          return cur\r\n        }\r\n        const detail = createDetail(`Option-${item.id}-${option.id}`, item.name, option.name, quantity, option.normalPrice, option.price, option.taxRate)\r\n        const details = [...cur.details, detail]\r\n        const price = normalizePrice(rule, detail.unitPrice * detail.quantity)\r\n        const total = cur.total + price\r\n        const normalTotal = cur.normalTotal + normalizePrice(rule, (typeof detail.normalUnitPrice == 'number' ? detail.normalUnitPrice : detail.unitPrice) * detail.quantity)\r\n        const effectiveTotal = cur.effectiveTotal + price\r\n        return {...cur, details, labels, total, normalTotal, effectiveTotal}\r\n      }\r\n    }, cur)\r\n  }, \r\n  Auto: (cur, item) => {\r\n    if (! satisfied(cur.labels, item.depends)) {\r\n      return cur\r\n    }\r\n    const quantity = findQuantity(cur.inputs, item.quantity, cur.labels, cur.env)\r\n    if (isNaN(quantity)) {\r\n      return cur\r\n    }\r\n    const unitPrice = evalExpr(item.priceAst, item.priceVars, cur.effectiveTotal, cur.inputs, cur.labels, cur.env, item.price)\r\n    if (isNaN(unitPrice)) {\r\n      return cur\r\n    }\r\n    const detail = createDetail(`Auto-${item.id}`, item.category, item.name, quantity, item.normalPrice, unitPrice, item.taxRate)\r\n    const details = [...cur.details, detail]\r\n    const price = normalizePrice(rule, detail.unitPrice * detail.quantity)\r\n    const total = cur.total + price\r\n    const normalTotal = cur.normalTotal + normalizePrice(rule, (typeof detail.normalUnitPrice == 'number' ? detail.normalUnitPrice : detail.unitPrice) * detail.quantity)\r\n    const effectiveTotal = cur.effectiveTotal + price\r\n    return {...cur, details, total, normalTotal, effectiveTotal}\r\n  }, \r\n  Adjustment: (cur, item) => {\r\n    if (! satisfied(cur.labels, item.depends)) {\r\n      return cur\r\n    }\r\n    const quantity = findQuantity(cur.inputs, item.quantity, cur.labels, cur.env)\r\n    if (isNaN(quantity)) {\r\n      return cur\r\n    }\r\n    const unitPrice = evalExpr(item.priceAst, item.priceVars, cur.effectiveTotal, cur.inputs, cur.labels, cur.env, item.price)\r\n    if (isNaN(unitPrice)) {\r\n      return cur\r\n    }\r\n    const detail = createDetail(`Adjustment-${item.id}`, item.category, item.name, quantity, item.normalPrice, unitPrice, item.taxRate)\r\n    const details = [...cur.details, detail]\r\n    const price = normalizePrice(rule, detail.unitPrice * detail.quantity)\r\n    const total = cur.total + price\r\n    const normalTotal = cur.normalTotal + normalizePrice(rule, (typeof detail.normalUnitPrice == 'number' ? detail.normalUnitPrice : detail.unitPrice) * detail.quantity)\r\n    return {...cur, details, total, normalTotal}\r\n  }, \r\n  PriceWatcher: (cur, item) => {\r\n    if (! compare2(cur.effectiveTotal, item.lower, item.lowerIncluded, item.higher, item.higherIncluded)) {\r\n      return cur\r\n    }\r\n    const labels = extend(cur.labels, item.labels)\r\n    return {...cur, labels}\r\n  }, \r\n  QuantityWatcher: (cur, item) => {\r\n    if (item.target == -1) return cur\r\n    const value = findQuantity(cur.inputs, item.target, cur.labels, cur.env)\r\n    if (isNaN(value)) return cur\r\n    if (! compare2(value, item.lower, item.lowerIncluded, item.higher, item.higherIncluded)) return cur\r\n    const labels = extend(cur.labels, item.labels)\r\n    return {...cur, labels}\r\n  }, \r\n  Quantity: (cur, item) => {\r\n    const inputs = cur.inputs.hasOwnProperty(item.id) ? cur.inputs : {...cur.inputs, [item.id]:item.initial}\r\n    let details = cur.details\r\n    if (item.format != 'none' && satisfied(cur.labels, item.depends)) {\r\n      const detail = createDetail(`Quantity-${item.id}`, item.name, nfap(inputs[item.id]) + ' ' + item.suffix, null, null, null, null)\r\n      details = [...cur.details, detail]\r\n    }\r\n    return {...cur, details, inputs}\r\n  }, \r\n  Slider: (cur, item) => {\r\n    const inputs = cur.inputs.hasOwnProperty(item.id) ? cur.inputs : {...cur.inputs, [item.id]:item.initial}\r\n    let details = cur.details\r\n    if (item.format != 'none' && satisfied(cur.labels, item.depends)) {\r\n      const detail = createDetail(`Slider-${item.id}`, item.name, nfap(inputs[item.id]) + ' ' + item.suffix, null, null, null, null)\r\n      details = [...cur.details, detail]\r\n    }\r\n    return {...cur, details, inputs}\r\n  }, \r\n  AutoQuantity: (cur, item) => {\r\n    const q = evalExpr(item.quantityAst, item.quantityVars, cur.effectiveTotal, cur.inputs, cur.labels, cur.env, item.quantity)\r\n    if (isNaN(q)) {\r\n      return cur\r\n    }\r\n    const env = {...cur.env, [item.id]:q}\r\n    let details = cur.details\r\n    if (item.format != 'none' && satisfied(cur.labels, item.depends)) {\r\n      const detail = createDetail(`AutoQuantity-${item.id}`, item.name, nfap(q) + ' ' + item.suffix, null, null, null, null)\r\n      details = [...cur.details, detail]\r\n    }\r\n    return {...cur, env, details}\r\n  }, \r\n  Stop: (cur, item, attrs) => {\r\n    return cur\r\n  }\r\n}\r\n\r\n\r\nconst validateDetailDataForItem = (detailData, item, labels) => {\r\n  const msg = validate_table[item.type](detailData, item, labels)\r\n  return msg\r\n}\r\nconst validateDetailData = (detailData, labels) => {\r\n  return form.detailItems.reduce((messages, item) => {\r\n    const message = validate_table[item.type](detailData, item, labels)\r\n    if (message) {\r\n      if (item.type == 'Stop') {\r\n        return {stopMessage:message, ...messages}\r\n      } else {\r\n        return {...messages, [item.id]:message}\r\n      }\r\n    } else {\r\n      return messages\r\n    }\r\n  }, {})\r\n}\r\nconst validate_table = {\r\n  Selector: (detailData, item, labels) => {\r\n    if (detailData.hasOwnProperty(item.id)) return null\r\n    if (item.multiple) return null\r\n    if (item.options.every(option => !satisfied(labels, option.depends))) return null\r\n    return MSG_TOSELECT\r\n  }, \r\n  Auto: (detailData, item, labels) => null, \r\n  Adjustment: (detailData, item, labels) => null, \r\n  PriceWatcher: (detailData, item, labels) => null, \r\n  QuantityWatcher: (detailData, item, labels) => null, \r\n  Quantity: (detailData, item, labels) => {\r\n    if (!satisfied(labels, item.depends)) return null\r\n    if (! detailData.hasOwnProperty(item.id) || detailData[item.id] === \"\") return MSG_REQUIRED\r\n    const value = item.allowFraction ? parseFloat(detailData[item.id]) : parseInt(detailData[item.id], 10)\r\n    if (isNaN(value) || value+\"\" != detailData[item.id]) return MSG_INVALID\r\n    if (item.minimum !== null && item.minimum > value) return MSG_TOOSMALL\r\n    if (item.maximum !== null && item.maximum < value) return MSG_TOOLARGE\r\n    return null\r\n  }, \r\n  Slider: (detailData, item, labels) => {\r\n    if (!satisfied(labels, item.depends)) return null\r\n    if (! detailData.hasOwnProperty(item.id) || detailData[item.id] === \"\") return MSG_REQUIRED\r\n    const value = parseFloat(detailData[item.id])\r\n    if (isNaN(value) || value+\"\" != detailData[item.id]) return MSG_INVALID\r\n    return null\r\n  }, \r\n  AutoQuantity: (detailData, item, labels) => null, \r\n  Stop: (detailData, item, labels) => {\r\n    //return null\r\n    if (!satisfied(labels, item.depends)) return null\r\n    return item.message\r\n  }\r\n}\r\n\r\nconst detailActions = {\r\n  selectChange: (ev) => ({data, messages, ...others}, _actions) => {\r\n    const [sid, oid] = ev.target.dataset['path'].split('/')\r\n    if (! data.hasOwnProperty(sid)) data[sid] = {}\r\n    const selector = findByProp(\"id\", sid, form.detailItems)\r\n    const option = findByProp(\"id\", oid, selector.options)\r\n    if (selector.multiple) {\r\n      if (option.type == 'Option') {\r\n        if (ev.target.checked) {\r\n          data = {...data, [sid]:{...data[sid], [oid]:true}}\r\n        } else {\r\n          const selectedOptions = data[sid]\r\n          data = {...data, [sid]:exclude(selectedOptions, oid)}\r\n        }\r\n      } else {\r\n        if (ev.target.value != \"\") {\r\n          data = {...data, [sid]:{...data[sid], [oid]:ev.target.value}}\r\n        } else {\r\n          // deselect\r\n          const selectedOptions = data[sid]\r\n          data = {...data, [sid]:exclude(selectedOptions, oid)}\r\n        }\r\n      }\r\n      // messagesは変更しない。multiple selectorではmessageは発生しない。\r\n    } else {\r\n      if (option.type == 'Option') {\r\n        data = {...data, [sid]:{[oid]:true}}\r\n      } else {\r\n        data = {...data, [sid]:{[oid]:ev.target.value}}\r\n      }\r\n      messages = exclude(messages, selector.id)\r\n    }\r\n    const {inputs, ...rest} = process(data)\r\n    return {...others, ...rest, messages, data:inputs}\r\n  }, \r\n  textInput: (ev) => ({data, ...rest}, _actions) => {\r\n    const id = branchNo(ev.currentTarget.id, '-')\r\n    data = {...data, [id]:ev.currentTarget.value}\r\n    if (ev.currentTarget.type == 'number' && ev.currentTarget != window.activeElement) {\r\n      // for firfox\r\n      ev.currentTarget.focus()\r\n    }\r\n    return {...rest, data}\r\n  }, \r\n  textBlur: (ev) => ({data, messages, ...others}, _actions) => {\r\n    const id = branchNo(ev.currentTarget.id, '-')\r\n    const item = findByProp(\"id\", id, form.detailItems)\r\n    if (data[id] === \"\") {\r\n      messages = {...messages, [id]:MSG_REQUIRED}\r\n      return {...rest, data, messages}\r\n    }\r\n    const value = item.allowFraction ? parseFloat(data[id]) : parseInt(data[id], 10)\r\n    if (isNaN(value) || value+\"\" != data[id]) {\r\n      messages = {...messages, [id]:MSG_INVALID}\r\n      return {...rest, data, messages}\r\n    }\r\n    if (item.minimum !== null && item.minimum > value) {\r\n      messages = {...messages, [id]:MSG_TOOSMALL}\r\n      return {...rest, data, messages}\r\n    }\r\n    if (item.maximum !== null && item.maximum < value) {\r\n      messages = {...messages, [id]:MSG_TOOLARGE}\r\n      return {...rest, data, messages}\r\n    }\r\n    data = {...data, [id]:value}\r\n    messages = exclude(messages, id)\r\n    const {inputs, ...rest} = process(data)\r\n    return {...others, ...rest, data:inputs, messages}\r\n  }, \r\n  rangeBlur: (ev) => ({data, ...others}, _actions) => {\r\n    const id = branchNo(ev.currentTarget.id, '-')\r\n    const item = findByProp(\"id\", id, form.detailItems)\r\n    data = {...data, [id]:ev.currentTarget.value}\r\n    const {inputs, ...rest} = process(data)\r\n    return {...others, ...rest, data:inputs}\r\n  }\r\n}\r\n\r\n\r\nconst createDetailState = () => {\r\n  const {inputs:data, ...rest} = process({})\r\n  return {...rest, data, messages:{}}\r\n}\r\n\r\nconst onback = (ev) => (state, actions) => {\r\n  window.setTimeout(() => {\r\n    scrollTo('root')\r\n  }, 100)\r\n  return {...state, viewMode:form.navigator}\r\n}\r\n\r\nconst onaction = (ev) => (state, actions) => {\r\n  // validate\r\n  const {stopMessage, ...detailMessages} = validateDetailData(state.details.data, state.details.labels)\r\n  const attrs = validateAttrData(state.attrs)\r\n  const attrMessages = reduceHash((cur, cid, stt) => {\r\n    return (stt.message == null) ? cur : {...cur, [cid]:stt.message}\r\n  }, {}, attrs)\r\n  if (stopMessage || Object.keys(detailMessages).length || Object.keys(attrMessages).length) {\r\n    // validation failed\r\n    window.setTimeout(() => {\r\n      if (Object.keys(detailMessages).length) showInvalidItem(true)\r\n      else if (stopMessage) window.alert(stopMessage)\r\n      else if (Object.keys(attrMessages).length) showInvalidItem(false)\r\n    }, 100)\r\n    const details = {...state.details, messages:detailMessages}\r\n    return {...state, details, attrs}\r\n  }\r\n\r\n  const action = ev.currentTarget.dataset['action']\r\n  if (action == 'confirm') {\r\n    // show confirm view\r\n    window.setTimeout(() => {\r\n      scrollTo('root')\r\n    }, 100)\r\n    return {...state, viewMode:'confirm'}\r\n  }\r\n\r\n  const extId = ev.currentTarget.dataset['id']\r\n\r\n  const kontinue = (attrs) => {\r\n    if (mode == 'preview') {\r\n      window.requestAnimationFrame(() => {window.alert(_T('Processing stopped due to preview mode.'))});\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      formId: form.id, \r\n      details: state.details.data, \r\n      attrs\r\n    }\r\n    if (action == 'custom') {\r\n      submitCustom(data, actions.onactionK, extId)\r\n    } else {\r\n      submit(data, actions.onactionK)\r\n    }\r\n  }\r\n\r\n  window.requestAnimationFrame(() => {\r\n    let waitCount = 0\r\n    let compiledAttrs = {}\r\n    form.attrItems.forEach(item => {\r\n      const val = attrItem_table[item.type].compile(item, attrs[item.id])\r\n      if (typeof val == 'function') {\r\n        const postfix = (dataValue) => {\r\n          waitCount--\r\n          compiledAttrs[item.id] = dataValue\r\n          if (waitCount == 0) kontinue(compiledAttrs)\r\n        }\r\n        waitCount++\r\n        val(postfix)\r\n      } else {\r\n        compiledAttrs[item.id] = val\r\n      }\r\n    })\r\n    if (waitCount == 0) kontinue(compiledAttrs)\r\n  })\r\n  \r\n  return {...state, loading:true}\r\n}\r\n\r\nconst onactionK = (resp) => (state, actions) => {\r\n  const handleOption = (option, k) => {\r\n    if (option) {\r\n      if (option.action == 'open') {\r\n        if (window.open(option.data)) {\r\n          k(true)\r\n        } else {\r\n          const k2 = (res) => {window.setTimeout(() => k(res), 300)}\r\n          window.aformsDialog(_T('Your document is ready.'), option.data, _T('Open'), k2, _T('Skip'))\r\n        }\r\n      } else {\r\n        k(false)\r\n      }\r\n    } else {\r\n      k(false)\r\n    }\r\n  }\r\n  window.requestAnimationFrame(() => {\r\n    if (resp.action == 'show') {\r\n      handleOption(resp.option, (_x) => {\r\n        window.aformsDialog(resp.data, null, null, (_x) => {})\r\n        //window.alert(resp.data)\r\n      })\r\n    } else if (resp.action == 'open') {\r\n      handleOption(resp.option, (_x) => {window.location.href = resp.data})\r\n    } else {  // action == none\r\n      // do nothing\r\n      handleOption(resp.option, (_x) => {})\r\n    }\r\n  })\r\n  if (resp.clearLoading) {\r\n    return {...state, loading:false}\r\n  } else {\r\n    // we don't set state.loading to `false`.\r\n  }\r\n}\r\n\r\nconst onHideMonitor = (ev) => (state, actions) => {\r\n  return {...state, spMonitorShown:false}\r\n}\r\nconst onShowMonitor = (ev) => (state, actions) => {\r\n  return {...state, spMonitorShown:true}\r\n}\r\n\r\nconst findNextIndex = (current, labels) => {\r\n  const len = form.detailItems.length\r\n  for (let i = 0; i < len; i++) {\r\n    if (i <= current) continue;\r\n    const item = form.detailItems[i]\r\n    if (item.type == \"Selector\") {\r\n      if (item.options.some(option => satisfied(labels, option.depends))) {\r\n        return i\r\n      }\r\n      // thru\r\n    } else if (item.type == \"Quantity\" || item.type == \"Slider\") {\r\n      if (satisfied(labels, item.depends)) {\r\n        return i\r\n      }\r\n      // thru\r\n    }\r\n  }\r\n  return form.detailItems.length\r\n}\r\n\r\nconst findPrevIndex = (current, labels) => {\r\n  if (current <= 0) return -1\r\n  const indice = form.detailItems.reduce((cur, item, i) => {\r\n    if (current <= i) return cur\r\n    if (item.type == \"Selector\") {\r\n      if (item.options.some(option => satisfied(labels, option.depends))) {\r\n        cur.push(i)\r\n      }\r\n    } else if (item.type == \"Quantity\" || item.type == \"Slider\") {\r\n      if (satisfied(labels, item.depends)) {\r\n        cur.push(i)\r\n      }\r\n    }\r\n    return cur\r\n  }, [])\r\n  return (indice.length > 0) ? indice.pop() : -1\r\n}\r\n\r\nconst onWizardOpen = (ev) => (state, actions) => {\r\n  const wIndex = findNextIndex(-1, state.details.labels)\r\n  return {...state, wIndex, wIndex2:wIndex, wizardOpen:true, wFlipped:false}\r\n}\r\nconst onWizardClose = (ev) => (state, actions) => {\r\n  return {...state, wIndex:-1, wIndex2:-1, wizardOpen:false}\r\n}\r\nconst onWizardNext = (ev) => (state, actions) => {\r\n  const item = form.detailItems[state.wIndex]\r\n  const msg = validateDetailDataForItem(state.details.data, item, state.details.labels)\r\n  if (msg) {\r\n    const messages = {...state.details.messages, [item.id]:msg}\r\n    const details = {...state.details, messages}\r\n    return {...state, details}\r\n  }\r\n  const wIndex = findNextIndex(state.wIndex, state.details.labels)\r\n  if (wIndex == form.detailItems.length) {\r\n    window.setTimeout(actions.onWizardClose, 800)\r\n    window.setTimeout(() => {\r\n      scrollTo('wq-monitor')\r\n    }, 800)\r\n  } else {\r\n    window.setTimeout(() => actions.onWizardNextK(wIndex), 400)\r\n  }\r\n  return {...state, wIndex, wFlipped:false}\r\n}\r\nconst onWizardNextK = (wIndex2) => (state, actions) => {\r\n  return {...state, wIndex2}\r\n}\r\nconst onWizardPrev = (ev) => (state, actions) => {\r\n  const wIndex = findPrevIndex(state.wIndex, state.details.labels)\r\n  window.setTimeout(() => actions.onWizardPrevK(wIndex), 400)\r\n  return {...state, wIndex, wFlipped:true}\r\n}\r\nconst onWizardPrevK = (wIndex2) => (state, actions) => {\r\n  return {...state, wIndex2}\r\n}\r\nconst calcMonitorPos = (sidebar) => {\r\n  const container = document.getElementById('root').children[0]\r\n  const target = document.getElementById('wq-monitor')\r\n  const crect = container.getBoundingClientRect()\r\n  const srect = sidebar.getBoundingClientRect()\r\n  const vtop = crect.top\r\n  const vbot = crect.bottom\r\n  const ch = target.getBoundingClientRect().height\r\n  if (vtop > sidebarOffset) {\r\n    // childをcontainerの上部にくっつける\r\n    return {v:'top', left:srect.left - crect.left, width:srect.width}\r\n  } else if (vbot < ch) {\r\n    // childをcontainerの下部にくっつける\r\n    return {v:'bottom', left:srect.left - crect.left, width:srect.width}\r\n  } else {\r\n    // childを画面にくっつける\r\n    return {v:'screen', left:srect.left, width:srect.width}\r\n  }\r\n}\r\nconst onscroll = (ev) => (state, actions) => {\r\n  if (state.viewMode == 'confirm') return null\r\n  const sidebar = document.querySelector(wqData.sidebarSelector)\r\n  if (! sidebar) return null\r\n  return {...state, monitorPos:calcMonitorPos(sidebar)}\r\n}\r\nconst onresize = (ev) => (state, actions) => {\r\n  if (state.viewMode == 'confirm') return null\r\n  const sidebar = document.querySelector(wqData.sidebarSelector)\r\n  if (! sidebar) return null\r\n  return {...state, monitorPos:calcMonitorPos(sidebar)}\r\n}\r\n\r\n/*\r\n * ===============================================================\r\n * App\r\n */\r\n\r\n//var allActions = null;\r\n//var form = null;\r\n\r\nconst NavBar = ({state, max, current, actions, navigator}) => {\r\n  const percentage = 100 * Math.min(max, current) / max\r\n  return (\r\n    <div class={`wq-NavBar ${state.viewMode == 'confirm' ? 'wq-is-confirming' : ''} ${state.spMonitorShown ? 'wq-is-monitor-shown' : ''} wq-belongs-${navigator}`} key=\"navbar\">\r\n      <div class={`wq--progress ${max < current ? 'wq-is-finished' : ''}`}>\r\n        <div class=\"wq--bar\">\r\n          <div class=\"wq--bar-content\" style={{width:percentage+'%', height:percentage+'%'}} />\r\n        </div>\r\n        <div class=\"wq--min\">1</div>\r\n        <div class=\"wq--current\">{current}</div>\r\n        <div class=\"wq--max\">{max}</div>\r\n        <div class=\"wq--percentage\">{Math.floor(percentage)}</div>\r\n      </div>\r\n      <div class=\"wq--summary\">{pricePrefix + nf(state.details.total) + priceSuffix}</div>\r\n      <div class=\"wq--commands\">\r\n        <Button type=\"normal\" onclick={actions.onShowMonitor} xclass=\"wq-belongs-navbar wq-for-showmonitor\">{_Tv('Show Monitor')}</Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst view = (state, actions) => {\r\n  const steps = form.detailItems.length\r\n  const position = state.wIndex\r\n  const actionSpecs = (state.viewMode == 'confirm') ? actionSpecMap.confirm : actionSpecMap.input\r\n  const actionButtons = actionSpecs.map(spec => {\r\n    return (\r\n      <Button type={spec.buttonType} onclick={actions.onaction} disabled={state.loading} xclass={`wq-belongs-action wq-for-${spec.action}`} data-action={spec.action} data-id={spec.id}>{spec.label}</Button>\r\n    )\r\n  })\r\n  return (\r\n    <form class={`wq-Form ${(state.viewMode == 'confirm' ? 'wq-is-confirming' : '')}`} id={`form-${form.id}`} novalidate>\r\n      <input type=\"text\" id=\"wq-informer\" name=\"to-disable-auto-submission\" style=\"display:none;\" />\r\n      {state.viewMode == 'confirm' ? (\r\n        <div class=\"wq--lead\">\r\n          <p class=\"wq--leadText\">{_Tv('Please check your entry.')}</p>\r\n          <Button type=\"normal\" onclick={actions.onback} disabled={state.loading} xclass=\"wq-for-back\">{_Tv('Back')}</Button>\r\n        </div>\r\n      ) : null}\r\n      {steps > 0 && state.viewMode == 'horizontal' ? (\r\n        <HNavigator data={state.details.data} onoptionchange={actions.details.selectChange} labels={state.details.labels} messages={state.details.messages} ontextinput={actions.details.textInput} ontextblur={actions.details.textBlur} onrangeblur={actions.details.rangeBlur}>\r\n          <NavBar state={state} actions={actions} current={position} max={steps} navigator=\"hnavigator\"></NavBar>\r\n        </HNavigator>\r\n      ) : null}\r\n      {steps > 0 && state.viewMode == 'wizard' ? (\r\n        <WNavigator data={state.details.data} onoptionchange={actions.details.selectChange} labels={state.details.labels} messages={state.details.messages} onWizardNext={actions.onWizardNext} onWizardPrev={actions.onWizardPrev} onWizardOpen={actions.onWizardOpen} onWizardClose={actions.onWizardClose} current={state.wIndex} current2={state.wIndex2} open={state.wizardOpen} flipped={state.wFlipped} ontextinput={actions.details.textInput} ontextblur={actions.details.textBlur} onrangeblur={actions.details.rangeBlur}>\r\n          <NavBar state={state} actions={actions} current={position} max={steps} navigator=\"wnavigator\"></NavBar>\r\n        </WNavigator>\r\n      ) : null}\r\n      {steps > 0 ? (\r\n        <Monitor detailsState={state.details} confirming={state.viewMode == 'confirm'} spShown={state.spMonitorShown} onHide={actions.onHideMonitor} monitorPos={state.monitorPos} />\r\n      ) : null}\r\n      {(form.attrItems.length > 0) ? (\r\n        state.viewMode == 'confirm' ? viewAttrItemsToConfirm(state.attrs, actions.attrs) : viewAttrItems(state.attrs, actions.attrs)\r\n      ) : null}\r\n      {actionButtons.length > 0 ? (\r\n        <Control label=\"\" required={false} message={null} note={null} id=\"wq-action\" xclass=\"wq-for-action\">\r\n          <InputGroup gutter=\"mini\">\r\n            {actionButtons}\r\n          </InputGroup>\r\n        </Control>\r\n      ) : null}\r\n    </form>\r\n  )\r\n}\r\n\r\n// wqData = {form, controls, catalog, rule}\r\nconst form = wqData.form;\r\nconst catalog = wqData.catalog;\r\nconst rule = wqData.rule;\r\nconst behavior = wqData.behavior;\r\nconst mode = wqData.mode;\r\nconst submitUrl = wqData.submitUrl;\r\nconst customUrl = wqData.customUrl;\r\nconst [pricePrefix, priceSuffix] = catalog['$%s'].split('%s')\r\nconst actionSpecMap = wqData.actionSpecMap;\r\nconst tnOnRemove = createTnOnRemove(_T('Internal error has occurred. Please reload the page and try again.'));\r\n\r\nconst init = () => {\r\n  const {state:cState, actions:cActions} = assembleAttrItems(form.attrItems)\r\n  const state = {\r\n    details: createDetailState(), \r\n    attrs: cState, \r\n    viewMode: form.navigator,  // horizontal, confirm\r\n    loading: false, \r\n    spMonitorShown: false, \r\n    wIndex: -1, \r\n    wIndex2: -1,  // スライドの遷移とアクションボタンの更新タイミングをずらすために導入。本当はwIndexだけでいいが、これが無いとスライドがうまく動かないケースがある。\r\n    wizardOpen: false, \r\n    wFlipped: false, \r\n    monitorPos: {v:'top', left:5000, width:0}\r\n  }\r\n  const actions = {\r\n    details: detailActions, \r\n    attrs: cActions, \r\n    onback, \r\n    onaction, \r\n    onactionK, \r\n    onHideMonitor, \r\n    onShowMonitor, \r\n    onWizardClose, \r\n    onWizardOpen, \r\n    onWizardNext, \r\n    onWizardNextK, \r\n    onWizardPrev, \r\n    onWizardPrevK, \r\n    onscroll, \r\n    onresize\r\n  }\r\n  return app(state, actions, view, document.getElementById('root'))\r\n}\r\nconst allActions = init();\r\n\r\nlet sidebarOffset = 0;\r\nif (wqData.sidebarSelector && form.navigator == 'horizontal') {\r\n  window.setTimeout(() => {\r\n    //console.log('binding', wqData.sidebarSelector)\r\n    sidebarOffset = getComputedStyle(document.getElementById('wq-informer')).top.slice(0, -2)\r\n    document.addEventListener('scroll', allActions.onscroll)\r\n    window.addEventListener('resize', allActions.onresize)\r\n    allActions.onscroll(null)\r\n  }, 100)\r\n}\r\n","import { h } from 'hyperapp';\r\n\r\n\r\nexport const tnOnCreate = (el) => {\r\n  el.classList.add('wq-is-created')\r\n  el.classList.add('wq-is-run')\r\n  el.classList.add('wq-for-created')\r\n  window.setTimeout(() => {\r\n    el.classList.remove('wq-is-created')\r\n    const h =  (ev) => {\r\n      if (ev.target !== el) return;\r\n      el.classList.remove('wq-is-run')\r\n      el.classList.remove('wq-for-created')\r\n      el.removeEventListener('transitionend', h)\r\n    }\r\n    el.addEventListener('transitionend', h)\r\n    window.setTimeout(() => {\r\n      el.classList.remove('wq-is-run')\r\n      el.classList.remove('wq-for-created')\r\n      el.removeEventListener('transitionend', h)\r\n    }, 800)\r\n  }, 100)\r\n}\r\n\r\nexport const createTnOnRemove = (faultMessage) => (el, done) => {\r\n  el.classList.add('wq-is-run')\r\n  el.classList.add('wq-for-removed')\r\n  window.setTimeout(() => {\r\n    var doneCalled = false\r\n    el.classList.add('wq-is-removed')\r\n    el.addEventListener('transitionend', (ev) => {\r\n      try {\r\n        if (ev.target !== el) return;\r\n        el.classList.remove('wq-is-run')\r\n        el.classList.remove('wq-for-removed')\r\n        if (! doneCalled) {\r\n          done()\r\n          doneCalled = true\r\n        }\r\n      } catch (e) {\r\n        window.alert(faultMessage)\r\n      }\r\n    })\r\n    window.setTimeout(() => {\r\n      try {\r\n        el.classList.remove('wq-is-run')\r\n        el.classList.remove('wq-for-removed')\r\n        if (! doneCalled) {\r\n          done()\r\n          doneCalled = true\r\n        }\r\n      } catch (e) {\r\n        window.alert(faultMessage)\r\n      }\r\n    }, 800)\r\n  }, 100)\r\n}\r\n\r\n\r\n\r\nexport const Image = (\r\n    {\r\n      src, \r\n      scaling = 'center', \r\n      alt = '', \r\n      xclass = ''\r\n    }) => {\r\n  const style = {backgroundImage: \"url(\"+src+\")\"}\r\n  return (\r\n    <div class={`wq-Image wq-scaling-${scaling} ${xclass} ${src ? '' : 'wq-src-empty'}`} style={style} title={alt}>\r\n      <img src={src} alt={alt} class=\"wq--img\" />\r\n    </div> \r\n  )\r\n}\r\n\r\nexport const TextInput = (\r\n    {\r\n      type, \r\n      size,  // full(100%), nano(3em), mini(4em), small(7em), normal(11em)\r\n      name, \r\n      placeholder, \r\n      value, \r\n      invalid = false, \r\n      oninput, \r\n      onblur, \r\n      xclass = ''\r\n    }) => {\r\n  const isInvalid = (invalid) ? 'wq-is-invalid' : ''\r\n  const id = `wq-text-${name}`\r\n  return (\r\n    <input type={type} class={`wq-TextInput wq-size-${size} ${isInvalid} ${xclass}`} id={id} name={name} placeholder={placeholder} value={value} oninput={oninput} onblur={onblur} />\r\n  )\r\n}\r\n\r\nexport const TextArea = (\r\n    {\r\n      name, \r\n      placeholder, \r\n      value, \r\n      size = 'normal',  // full, normal, small, mini, nano\r\n      invalid = false, \r\n      oninput, \r\n      onblur, \r\n      xclass = ''\r\n    }) => {\r\n  const isInvalid = (invalid) ? 'wq-is-invalid' : ''\r\n  const id = `wq-textarea-${name}`\r\n  return (\r\n    <textarea class={`wq-TextArea ${isInvalid} wq-size-${size} ${xclass}`} id={id} name={name} placeholder={placeholder} value={value} oninput={oninput} onblur={onblur} />\r\n  )\r\n}\r\n\r\nexport const RadioButton = (\r\n    {\r\n      index, \r\n      name, \r\n      value, \r\n      checked, \r\n      invalid = false, \r\n      onchange, \r\n      xclass = '', \r\n      inputXclass = ''\r\n    }, children) => {\r\n  const id = `wq-radio-${name}-${index}`\r\n  const isInvalid = (invalid) ? 'wq-is-invalid' : ''\r\n  return (\r\n    <div class={`wq-Radio ${xclass}`} id={id+'-wrapper'}>\r\n      <input type=\"radio\" name={name} value={value} checked={checked} onchange={onchange} id={id} class={`${isInvalid} ${inputXclass}`} />\r\n      <label for={id}>{children}</label>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Checkbox = (\r\n    {\r\n      name, \r\n      value, \r\n      checked, \r\n      invalid = false, \r\n      onchange, \r\n      xclass = '', \r\n      id = null, \r\n      inputXclass = ''\r\n    }, children) => {\r\n  if (id === null) id = `wq-checkbox-${name}`\r\n  const isInvalid = (invalid) ? 'wq-is-invalid' : ''\r\n  return (\r\n    <div class={`wq-Checkbox ${xclass}`} id={id+'-wrapper'}>\r\n      <input type=\"checkbox\" name={name} value={value} checked={checked} onchange={onchange} id={id} class={`${isInvalid} ${inputXclass}`} />\r\n      <label for={id}>{children}</label>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Select = (\r\n    {\r\n      name, \r\n      options, \r\n      value, \r\n      invalid = false, \r\n      onchange, \r\n      placeholder, \r\n      xclass = '', \r\n      inputXclass = ''\r\n    }) => {\r\n  const id = `wq-select-${name}`\r\n  const isInvalid = (invalid) ? 'wq-is-invalid' : ''\r\n  placeholder = placeholder || \"\"\r\n  return (\r\n    <div class={`wq-Select ${xclass}`} id={id+'-wrapper'}>\r\n      <select class=\"wq--input\" name={name} onchange={onchange} id={id} class={`wq--input ${isInvalid} ${inputXclass}`}>\r\n        <option value=\"\" disabled selected={!value}>{placeholder}</option>\r\n        {options.map(o => (\r\n          <option value={o} selected={o == value}>{o}</option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Range = (\r\n    {\r\n      name, \r\n      min, \r\n      max, \r\n      step, \r\n      value, \r\n      invalid = false, \r\n      oninput, \r\n      onchange, \r\n      xclass = '', \r\n      suffix = '', \r\n      inputXclass = ''\r\n    }) => {\r\n  const id = `wq-range-${name}-wrapper`\r\n  const isInvalid = (invalid) ? 'wq-is-invalid' : ''\r\n  const steps = (max - min + 1) / step\r\n  const size = (steps <= 2) ? 'nano'\r\n             : (steps <= 4) ? 'mini'\r\n             : (steps <= 6) ? 'small'\r\n             : (steps <= 10) ? 'medium' \r\n             : (steps <= 16) ? 'large'\r\n             : 'xlarge' \r\n  return (\r\n    <div class={`wq-Range ${isInvalid} wq-size-${size} ${xclass}`} id={id}>\r\n      <span class=\"wq--label wq-for-min\">{min}</span>\r\n      <input type=\"range\" class={`wq--input ${inputXclass}`} name={name} id={name} value={value} min={min} max={max} step={step} oninput={oninput} onchange={onchange} />\r\n      <span class=\"wq--label wq-for-max\">{max}</span>\r\n      <span class=\"wq--state\">{value}<span class=\"wq--state-suffix\">{suffix}</span></span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const FileInput = (\r\n    {\r\n      name, \r\n      extensions, \r\n      onchange, \r\n      multiple, \r\n      invalid = false, \r\n      inputProps = {}, \r\n      xclass = \"\", \r\n      inputXclass = \"\", \r\n      ...props\r\n    }, children) => {\r\n  const accept = extensions.split(',').map(s => '.' + s.trim()).join(',')\r\n  const inputId = 'wq-file-' + name\r\n  return (\r\n    <div class={`wq-FileInput ${invalid ? 'wq-is-invalid' : ''} ${xclass}`} {...props}>\r\n      <input type=\"file\" id={inputId} class={`wq--input ${inputXclass}`} onchange={onchange} accept={accept} {...inputProps} multiple={multiple} />\r\n      <label class=\"wq--label\" for={inputId}><span class=\"wq--text\">{children}</span></label>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst isViewable = (name) => {\r\n  const i = name.lastIndexOf('.')\r\n  const ext = name.slice(i + 1).trim().toLowerCase()\r\n  return (\" jpeg jpg gif png \".indexOf(ext) != -1)\r\n}\r\nexport const File = (\r\n    {\r\n      url, \r\n      name, \r\n      loading, \r\n      ondelete, \r\n      deleteText, \r\n      index, \r\n      readonly = false, \r\n      tnOnRemove, \r\n      ...props\r\n    }\r\n) => {\r\n  const viewable = url && isViewable(name)\r\n  return (\r\n    <div class={`wq-File wq-lct-enabled ${loading ? 'wq-is-loading' : ''} ${viewable ? 'wq-is-viewable' : ''} ${readonly ? 'wq-is-readonly' : ''}`} oncreate={tnOnCreate} onremove={tnOnRemove} {...props}>\r\n      {viewable ? (\r\n        <Image src={url} alt={name} scaling=\"cover\" xclass=\"wq-belongs-file\" title={name} />\r\n      ) : null}\r\n      <div class=\"wq--filename\" title={name}>{name}</div>\r\n      {!readonly ? (\r\n        <div class=\"wq--actions\">\r\n          <Button onclick={ondelete} xclass=\"wq-belongs-file wq-for-delete\" data-index={index}></Button>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Echo = (\r\n    {\r\n      name, \r\n      value, \r\n      glue, \r\n      xclass = ''\r\n    }) => {\r\n  const id = `wq-echo-${name}`\r\n  value = (Array.isArray(value)) ? value.join(glue) \r\n        : (value === null) ? ''\r\n        : value\r\n  const lines = value.split(/\\r?\\n/).reduce((result, line) => {\r\n    result.push(line)\r\n    result.push(<br></br>)\r\n    return result\r\n  }, [])\r\n  return (\r\n    <div class={`wq-Echo ${xclass}`} id={id}>{lines}</div>\r\n  )\r\n}\r\n\r\nexport const Button = (\r\n    {\r\n      type = 'normal',  // normal, primary\r\n      disabled = false, \r\n      xclass = '', \r\n      onclick, \r\n      name = null, \r\n      ...props\r\n    }, children) => {\r\n  return (\r\n    <button type=\"button\" name={name} class={`wq-Button wq-type-${type} ${xclass}`} disabled={disabled} onclick={onclick} {...props}>{children}</button>\r\n  )\r\n}\r\n\r\nexport const InputGroup = (\r\n    {\r\n      gutter = 'none',  // none, small, mini\r\n      xclass = '', \r\n    }, children) => {\r\n  return (\r\n    <div class={`wq-InputGroup wq-gutter-${gutter} ${xclass}`}>{children}</div>\r\n  )\r\n}\r\n\r\nexport const Control = (\r\n    {\r\n      label, \r\n      required, \r\n      message, \r\n      note, \r\n      requiredText, \r\n      tnOnRemove, \r\n      xclass = '', \r\n      id = null, \r\n      key = null\r\n    }, input) => {\r\n  return (\r\n    <div class={`wq-Control wq-lct-enabled ${xclass}`} id={id} oncreate={tnOnCreate} onremove={tnOnRemove} key={key}>\r\n      <div class={`wq--header ${label ? '' : 'wq-content-empty'}`}>\r\n        <span class=\"wq--label\">{label}</span>\r\n        <span class={`wq--required ${!required ? 'wq-is-optional' : ''}`}>{requiredText}</span>\r\n      </div>\r\n      <div class=\"wq--body\">\r\n        {input}\r\n        {(note) ? (<div class=\"wq--note\">{note}</div>) : null}\r\n        {(message) ? (<div class=\"wq--message wq-lct-enabled\" oncreate={tnOnCreate} onremove={tnOnRemove}>{message}</div>) : null}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":["$8ed3ba04fc179cbe$export$dda1d9f60106f0e9","name","attributes","rest","children","length","arguments","push","node","pop","nodeName","key","$8ed3ba04fc179cbe$export$729c8b7179294ba","state","actions","view","container","skipRender","map","rootElement","oldNode","recycleElement","element","toLowerCase","call","childNodes","nodeType","nodeValue","lifecycle","isRecycling","globalState","clone","wiredActions","wireStateToActions","path","action","data","result","getPartialState","then","scheduleRender","setPartialState","concat","resolveNode","render","patch","setTimeout","target","source","out","i","value","slice","getKey","eventListener","event","currentTarget","events","type","updateAttribute","oldValue","isSvg","style","cssText","setProperty","addEventListener","removeEventListener","setAttribute","removeAttribute","createElement","document","createTextNode","createElementNS","oncreate","appendChild","removeChildren","ondestroy","removeElement","parent","done","removeChild","cb","onremove","newElement","insertBefore","oldAttributes","onupdate","updateElement","oldKeyed","newKeyed","oldElements","oldChildren","oldKey","k","newKey","keyedNode","$85d6f971d9f8aabf$var$YubinBango","YubinBango","Core","$85d6f971d9f8aabf$var$CACHE","inputVal","callback","this","URL","REGION","c","replace","s","String","fromCharCode","charCodeAt","match","join","yubin7","chk7","getAddr","addrDic","prototype","val","region_id","region","locality","street","extended","selectAddr","addr","jsonp","url","fn","window","scriptTag","head","_this","yubin3","substr","$85d6f971d9f8aabf$exports","module","number","decimals","decPoint","thousandsSep","n","isFinite","prec","Math","abs","sep","dec","indexOf","round","arr","split","sig","toFixed","toFixedFix","toString","Array","$e63bd2793d1e4314$var$_number_format","parcelRequire","tnOnCreate","el","classList","add","remove","h","ev","faultMessage","doneCalled","e","alert","Image","_ref","src","_ref$scaling","scaling","_ref$alt","alt","_ref$xclass","xclass","backgroundImage","class","title","_ref2","size","placeholder","_ref2$invalid","invalid","oninput","onblur","_ref2$xclass","isInvalid","id","_ref3","_ref3$size","_ref3$invalid","_ref3$xclass","_ref4","index","checked","_ref4$invalid","onchange","_ref4$xclass","_ref4$inputXclass","inputXclass","for","_ref5","_ref5$invalid","_ref5$xclass","_ref5$id","_ref5$inputXclass","_ref6","options","_ref6$invalid","_ref6$xclass","_ref6$inputXclass","$a1205777b5d508f1$var$_defineProperty","disabled","selected","o","_ref7","min","max","step","_ref7$invalid","_ref7$xclass","_ref7$suffix","suffix","_ref7$inputXclass","steps","_ref8","extensions","multiple","_ref8$invalid","_ref8$inputProps","inputProps","_ref8$xclass","_ref8$inputXclass","props","$a1205777b5d508f1$var$_objectWithoutProperties","$a1205777b5d508f1$var$_excluded","accept","trim","inputId","$a1205777b5d508f1$var$_extends","_ref9","loading","ondelete","deleteText","_ref9$readonly","readonly","tnOnRemove","$a1205777b5d508f1$var$_excluded2","viewable","lastIndexOf","ext","isViewable","$a1205777b5d508f1$var$Image","$a1205777b5d508f1$var$Button","onclick","_ref10","glue","_ref10$xclass","lines","isArray","reduce","line","Button","_ref11","_ref11$type","_ref11$disabled","_ref11$xclass","_ref11$name","$a1205777b5d508f1$var$_excluded3","_ref12","_ref12$gutter","gutter","_ref12$xclass","_ref13","input","label","required","message","note","requiredText","_ref13$xclass","_ref13$id","_ref13$key","$e63bd2793d1e4314$var$sprintf","format","f1","f2","roundNumber","scale","$e63bd2793d1e4314$var$roundNumber","num","nscale","sign","includes","nf","trunc","x","ceil","floor","$e63bd2793d1e4314$var$nf","catalog","amount","$e63bd2793d1e4314$var$rule","$e63bd2793d1e4314$var$catalog","$e63bd2793d1e4314$var$nfap","br","fs","dot","$e63bd2793d1e4314$var$br","_Tv","_T","$e63bd2793d1e4314$var$_Tv","$e63bd2793d1e4314$var$_T","cur","$e63bd2793d1e4314$var$_toConsumableArray","hasOwnProperty","console","ast","isNaN","vars","total","labels","env","expr","evl","findByProp","findQuantity","v","$e63bd2793d1e4314$var$findByProp","ref","q","$e63bd2793d1e4314$var$findQuantity","guard","$e63bd2793d1e4314$var$satisfied","msg","b","pow","a","_a","_b2","_a2","_b3","_a3","_d2","_b4","_a4","_a5","_a6","d","_d3","_a7","_b6","_a8","_i","_b7","_a9","_i2","_i3","_val","count","_i4","_i5","NaN","ex","r","scrollTo","idOrElem","documentElement","scrollTop","$e63bd2793d1e4314$var$scrollTo","pos","behavior","smoothScroll","body","getElementById","getBoundingClientRect","requestAnimationFrame","top","posTop","posBot","_diff","isDetail","elem","$e63bd2793d1e4314$var$showInvalidItem","len","querySelector","findIndexByProp","set","specs","extend","copy","prop","$e63bd2793d1e4314$var$extend","$e63bd2793d1e4314$var$_objectSpread","exclude","$e63bd2793d1e4314$var$exclude","branchNo","fragment","parseInt","replaceElement","arr2","off","idx","lis","$e63bd2793d1e4314$var$indexOf","reduceHash","hash","$e63bd2793d1e4314$var$reduceHash","f","fromTo","$e63bd2793d1e4314$var$emptyString","price","rule","taxPrecision","compare2","lower","lowerIncluded","higherIncluded","higher","jQuery","submitUrl","contentType","selectid","option","qid","iname","enabled","satisfied","detailItems","item","navigator","depends","inputs","initial","$e63bd2793d1e4314$var$Option","image","pricePrefix","priceSuffix","QuantOption","$e63bd2793d1e4314$var$pricePrefix","normalPrice","$e63bd2793d1e4314$var$priceSuffix","ribbons","from","to","$e63bd2793d1e4314$var$fromTo","minimum","maximum","Selector","onoptionchange","selectedOptions","$e63bd2793d1e4314$var$Selector","selector","$e63bd2793d1e4314$var$tnOnRemove","$a1205777b5d508f1$exports","Quantity","$e63bd2793d1e4314$var$QuantOption","quantity","InputGroup","Slider","TextInput","slider","HNavigator","Range","form","ontextinput","ontextblur","onrangeblur","messages","some","$e63bd2793d1e4314$var$Quantity","suspendOtherSurfaces","$e63bd2793d1e4314$var$Slider","resumeOtherSurfaces","overlayOnCreate","overlayOnRemove","$e63bd2793d1e4314$var$overlayOnCreate","myDone","current2","$e63bd2793d1e4314$var$overlayOnRemove","originalOnoptionchange","onWizardNext","onWizardPrev","onWizardOpen","onWizardClose","current","open","flipped","$e63bd2793d1e4314$var$form","messageValues","Object","values","findPrevIndex","Monitor","detailsState","doSidebar","left","monitorPos","width","typr","$e63bd2793d1e4314$var$Monitor","totalwt","defaultTax","confirming","spShown","onHide","wqData","sidebarSelector","taxIncluded","details","detail","unitPrice","normalUnitPrice","normalTotal","$e63bd2793d1e4314$var$normalizePrice","taxRate","subtotal","tax","taxes","sprintf","attrItem_table","MSG_REQUIRED","MSG_INVALID","MSG_TOCHECK","MSG_TOSELECT","MSG_DIFFERENT","MSG_TOOSMALL","MSG_TOOLARGE","MSG_HIRAGANA","MSG_KATAKANA","MSG_UPLOADING","$e63bd2793d1e4314$var$MSG_REQUIRED","Name","divided","names","Control","compile","hiraganaPattern","validate","pattern","$e63bd2793d1e4314$var$attrItem_table","katakanaPattern","createActions","$e63bd2793d1e4314$var$MSG_HIRAGANA","$e63bd2793d1e4314$var$branchNo","_actions","$e63bd2793d1e4314$var$MSG_KATAKANA","_message","Email","repeated","initialState","$e63bd2793d1e4314$var$replaceElement","$e63bd2793d1e4314$var$MSG_INVALID","Tel","phs","_name","every","emptyString","Address","_item","_ref14","curval","autoFill","RegExp","zip","_ref15","_ref16","Checkbox","_ref17","$e63bd2793d1e4314$var$MSG_TOCHECK","Radio","opt","RadioButton","filter","vs","$e63bd2793d1e4314$var$MSG_TOSELECT","_ref18","Dropdown","_value","MultiCheckbox","_ref19","initialValue","_ref20","v0","Text","multiline","TextArea","reCAPTCHA3","siteKey","postfix","token","_state","grecaptcha","execute","File","FileInput","file","dragover","ondragover","onDragOver","ondrop","onDrop","_key","onDelete","_ref21","$e63bd2793d1e4314$var$_objectWithoutProperties","$e63bd2793d1e4314$var$_excluded","onChange","uploadId","dataset","getTime","files","confirm","results","splice","Date","aformsUpload","onChangeK","serverMsg","_ref22","urls","forEach","preventDefault","assembleAttrItems","_process4","cState","cActions","category","effectiveTotal","_env","_form$detailItems$red","subtotals","normalizePrice","$e63bd2793d1e4314$var$processTable","rv","$e63bd2793d1e4314$var$_excluded2","createDetail","quantity0","$e63bd2793d1e4314$var$createDetail","_detail","_details","evalExpr","$e63bd2793d1e4314$var$evalExpr","priceAst","priceVars","Adjustment","PriceWatcher","QuantityWatcher","$e63bd2793d1e4314$var$_defineProperty","AutoQuantity","validateDetailDataForItem","detailData","validate_table","stopMessage","attrs","$e63bd2793d1e4314$var$validate_table","Stop","allowFraction","parseFloat","$e63bd2793d1e4314$var$MSG_TOOSMALL","$e63bd2793d1e4314$var$MSG_TOOLARGE","selectChange","others","_ref24","$e63bd2793d1e4314$var$_excluded3","_ev$target$dataset$pa2","$e63bd2793d1e4314$var$_slicedToArray","sid","oid","_selectedOptions","activeElement","_process","$e63bd2793d1e4314$var$_excluded4","textBlur","_ref25","$e63bd2793d1e4314$var$_excluded5","_ref26","$e63bd2793d1e4314$var$_excluded6","process","_process2","$e63bd2793d1e4314$var$_excluded7","rangeBlur","createDetailState","_ref27","$e63bd2793d1e4314$var$_excluded8","onback","stt","viewMode","attrMessages","_validateDetailData","Auto","detailMessages","$e63bd2793d1e4314$var$_excluded11","attrItems","$e63bd2793d1e4314$var$validateAttrData","cid","keys","extId","kontinue","mode","formId","submit","waitCount","compiledAttrs","$e63bd2793d1e4314$var$mode","ajax","dataType","JSON","stringify","complementAddress","YubinBangoCore","response","xhr","$e63bd2793d1e4314$var$submitCustom","onactionK","$e63bd2793d1e4314$var$submitUrl","submitCustom","customUrl","$e63bd2793d1e4314$var$submit","dataValue","handleOption","aformsDialog","resp","location","res","_x","href","clearLoading","$e63bd2793d1e4314$var$onHideMonitor","findNextIndex","spMonitorShown","indice","wIndex","wIndex2","wizardOpen","wFlipped","$e63bd2793d1e4314$var$findNextIndex","$e63bd2793d1e4314$var$validateDetailDataForItem","onWizardNextK","calcMonitorPos","onWizardPrevK","crect","srect","sidebar","$e63bd2793d1e4314$var$onWizardPrevK","sidebarOffset","vtop","$e63bd2793d1e4314$var$sidebarOffset","onscroll","ch","onresize","$e63bd2793d1e4314$var$calcMonitorPos","$e63bd2793d1e4314$var$onresize","$e63bd2793d1e4314$var$NavBar","_ref28","percentage","position","actionSpecs","actionButtons","onShowMonitor","$e63bd2793d1e4314$var$actionSpecMap","spec","buttonType","novalidate","$e63bd2793d1e4314$var$HNavigator","textInput","$e63bd2793d1e4314$var$WNavigator","onHideMonitor","actionSpecMap","validateAttrData","Echo","$e63bd2793d1e4314$var$viewAttrItemsToConfirm","$e63bd2793d1e4314$var$viewAttrItems","init","createTnOnRemove","_ref23","viewAttrItems","viewAttrItemsToConfirm","_assembleAttrItems","$e63bd2793d1e4314$var$process","onaction","allActions","$e63bd2793d1e4314$var$onShowMonitor"],"version":3,"file":"front.js.map"}