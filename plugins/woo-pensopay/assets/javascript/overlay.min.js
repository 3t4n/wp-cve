/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 1);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _payform = __webpack_require__(4);

var _payform2 = _interopRequireDefault(_payform);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var $ = jQuery;
var PensoPay = window.PensoPay || {};
var wcpp = window.wcpp || {};
_payform2.default.cards = [{
    // Card type, as returned by payform.parseCardType.
    type: 'test',
    // Regex used to identify the card type. For the best experience, this should be
    // the shortest pattern that can guarantee the card is of a particular type.
    pattern: /^\d[0-5]/,
    // Array of valid card number lengths.
    length: [16],
    // Array of valid card CVC lengths.
    cvcLength: [3],
    // Boolean indicating whether a valid card number should satisfy the Luhn check.
    luhn: true,
    // Regex used to format the card number. Each match is joined with a space.
    format: /(\d{1,4})/g
}];

__webpack_require__(7);

var OverlayBase = function () {
    /**
     * @param form
     */
    function OverlayBase(form) {
        _classCallCheck(this, OverlayBase);

        this.isLoading = false;

        this.form = form;

        this.pageWrapper = $('body').children().first();

        this.modal = $('#wcpp-payment-modal');

        this.amount = this.modal.find('.wcpp-modal-header__amount').first();

        this.dialog = this.modal.find('.wcpp-modal__dialog').first();

        this.brands = this.modal.find('.wcpp-card-brand');

        this.inner = this.modal.find('#wcpp-payment-form__inner').first();

        this._setupForm();
        this._setupPensoPay();

        this.styles = {
            modal: 'wcpp-modal--visible wcpp-animated fadeIn',
            dialog: 'wcpp-animated bounceIn',
            pageWrapper: 'wcpp-blur'
        };

        this.formInputs = {
            cardNumberInput: this.modal.find('[data-pensopay="cardnumber"]'),
            expiryInput: this.modal.find('[data-pensopay="expiration"]'),
            cvcInput: this.modal.find('[data-pensopay="cvd"]')
        };

        _payform2.default.cardNumberInput(this.formInputs.cardNumberInput.get(0));
        _payform2.default.expiryInput(this.formInputs.expiryInput.get(0));
        _payform2.default.cvcInput(this.formInputs.cvcInput.get(0));

        if (wcpp.settings.autojump) {
            this.setupAutojump();
        }

        if (this.isAutoOpen()) {
            this.openModal();
        }

        window.payform = _payform2.default;

        $('body').on('wcpp-overlay--amount-changed', this._onAmountUpdated);
    }

    /**
     * Listen on keyup as the PensoPay embed form validator does not validate the fields if listening to input
     */


    _createClass(OverlayBase, [{
        key: 'setupAutojump',
        value: function setupAutojump() {
            var self = this;
            this.formInputs.cardNumberInput.on('keyup.wcpp', function () {
                self.resetValidationErrors();
                if (_payform2.default.validateCardNumber(this.value)) {
                    self.jumpToNextField(this);
                }
            });
            this.formInputs.cvcInput.on('keyup.wcpp', function () {
                self.resetValidationErrors();
                if (_payform2.default.validateCardCVC(this.value)) {
                    self.jumpToNextField(this);
                }
            });
            this.formInputs.expiryInput.on('keyup.wcpp', function () {
                if (this.value && this.value.length && this.value.match('\/')) {
                    self.resetValidationErrors();
                    var expiryParts = this.value.split('/');

                    if (expiryParts[0] && expiryParts[1]) {
                        if (_payform2.default.validateCardExpiry(expiryParts[0], expiryParts[1])) {
                            self.jumpToNextField(this);
                        }
                    }
                }
            });
        }
    }, {
        key: 'jumpToNextField',
        value: function jumpToNextField(currentField) {
            var nextTabIndex = parseInt($(currentField).attr('tabindex')) + 1;
            var nextField = this.modal.find('[tabindex="' + nextTabIndex + '"]');

            if (nextField.length) {
                nextField.focus();
            }
        }
    }, {
        key: 'resetValidationErrors',
        value: function resetValidationErrors() {
            this.modal.find('.form-row').removeClass('woocommerce-invalid');
        }

        /**
         * Checks if autoopen is set on the payment window.
         * @returns {boolean}
         */

    }, {
        key: 'isAutoOpen',
        value: function isAutoOpen() {
            return this.modal.data('autoopen') === 'yes';
        }
    }, {
        key: 'getTotal',
        value: function getTotal() {
            return this.modal.data('total');
        }
    }, {
        key: 'getFormattedTotal',
        value: function getFormattedTotal() {
            return this.modal.data('total-formatted');
        }
    }, {
        key: 'getCurrency',
        value: function getCurrency() {
            return this.modal.data('currency');
        }
    }, {
        key: '_onAmountUpdated',
        value: function _onAmountUpdated() {
            this.amount.html(this.getFormattedTotal());
        }

        /**
         * Blocks the checkout form
         */

    }, {
        key: 'block',
        value: function block() {
            this.form.block({
                message: null,
                overlayCSS: {
                    background: '#fff',
                    opacity: 0.6
                }
            });
        }

        /**
         * Unblocks the checkout form
         */

    }, {
        key: 'unblock',
        value: function unblock() {
            this.form.unblock();
        }

        /**
         * Checks if the payment gateway selected is pensopay.
         *
         * @returns {boolean}
         * @private
         */

    }, {
        key: '_isPensoPayGatewaySelected',
        value: function _isPensoPayGatewaySelected() {
            return $('[name="payment_method"]:checked').val() === 'pensopay';
        }

        /**
         * Open the payment modal
         */

    }, {
        key: 'openModal',
        value: function openModal() {
            this.modal.removeClass('fadeOut');
            this.pageWrapper.addClass(this.styles.pageWrapper);
            this.modal.addClass(this.styles.modal);
            this.dialog.addClass(this.styles.dialog);

            $('#wcpp-loader').remove();
        }

        /**
         * Close the payment modal
         */

    }, {
        key: 'closeModal',
        value: function closeModal() {
            var _this = this;

            var redirect = this.modal.find('.wcpp-modal-header__close').data('close-redirect');

            if (redirect && redirect.length) {
                window.location = redirect;
            } else {
                this.modal.removeClass('animated').fadeOut("fast", function () {
                    setTimeout(function () {
                        _this.pageWrapper.removeClass(_this.styles.pageWrapper);
                        _this.modal.removeClass(_this.styles.modal);
                        _this.dialog.removeClass(_this.styles.dialog);
                        _this.unblock();
                        _this.modal.removeAttr('style');
                        _this._resetCompletedState();
                    }, 100);
                });
            }
        }

        /**
         * Triggers when the checkout form is submitted
         * @param e
         * @returns {boolean}
         * @private
         */

    }, {
        key: '_eventSubmit',
        value: function _eventSubmit(e) {
            if (this._isPensoPayGatewaySelected()) {
                if (!this.tokenField.val().length) {
                    e.preventDefault();

                    if (!this._canValidateCheckoutForm()) {
                        return true;
                    }

                    this.block();
                    this.openModal();

                    return false;
                }
            }
        }

        /**
         * Checks if required fields are valid using the validate event used by WooCommerce
         * @returns {boolean}
         * @private
         */

    }, {
        key: '_canValidateCheckoutForm',
        value: function _canValidateCheckoutForm() {
            var checkoutForm = $('form.checkout');
            var fieldSelector = '[id^="billing_"]';

            // Validate billing fields
            checkoutForm.find('[id^="billing_"]').find('.input-text, select, input:checkbox').trigger('validate');

            // If shipping to a different address is checked, we will run validation on the shipping fields as well.
            if (checkoutForm.find('[name="ship_to_different_address"]').is(':checked')) {
                // Validate billing fields
                fieldSelector += ', [id^="shipping_"]';
            }

            // Trigger validation on required fields
            $(fieldSelector).find('.input-text, select, input:checkbox').trigger('validate');

            // Check for fields with validation error classes
            return $(fieldSelector).filter('.woocommerce-invalid').length === 0;
        }

        /**
         * Triggered when the modal is closed
         * @private
         */

    }, {
        key: '_eventClose',
        value: function _eventClose() {}
    }, {
        key: '_setValidationErrors',
        value: function _setValidationErrors(fields) {
            var _this2 = this;

            $.each(fields, function (index, field) {
                _this2.modal.find('[data-pensopay="' + field + '"]').closest('.form-row').addClass('woocommerce-invalid');
            });
        }

        /**
         * Sets up the checkout form logic
         * @private
         */

    }, {
        key: '_setupForm',
        value: function _setupForm() {
            var _this3 = this;

            this.tokenField = $('<input type="hidden" name="pensopay_token" />');
            this.form.on('click', '#place_order', this._eventSubmit.bind(this));
            this.modal.on('click', '.wcpp-modal-header__close', function () {
                return _this3.closeModal();
            });
            this.form.append(this.tokenField);
            this.modal.removeAttr('style');
            this._onAmountUpdated();
        }
    }, {
        key: '_setCompletedState',
        value: function _setCompletedState() {
            this.modal.find('.wcpp-modal-header').hide();
            this.modal.find('#wcpp-payment-form').hide();
            this.modal.find('.wcpp-modal-completed').fadeIn();
        }
    }, {
        key: '_resetCompletedState',
        value: function _resetCompletedState() {
            this.modal.find('.wcpp-modal-header').show();
            this.modal.find('#wcpp-payment-form').show();
            this.modal.find('.wcpp-modal-completed').hide();
        }

        /**
         * Checks if a specific error message is present in the failure handler error messages object
         *
         * @param message
         * @param failureMessages
         * @returns {boolean}
         * @private
         */

    }, {
        key: '_hasErrorMessage',
        value: function _hasErrorMessage(message, failureMessages) {
            if (!failureMessages.length) {
                return false;
            }
            return failureMessages.filter(function (failureMessage) {
                return failureMessage.toLowerCase() === message.toLowerCase();
            }).length > 0;
        }

        /**
         * Push errors to the UI
         *
         * @param errors
         * @private
         */

    }, {
        key: '_showErrors',
        value: function _showErrors(errors) {
            // Remove existing errors
            this.inner.find('.wcpp-modal-errors').remove();

            var errorContainer = $('<div class="wcpp-modal-errors"></div>').hide();

            $.each(errors, function (index, error) {
                return errorContainer.append($('<div class="wcpp-modal-errors__error"></div>').html(error));
            });

            this.inner.prepend(errorContainer.fadeIn());
        }

        /**
         * Applies PensoPay embedded payment logic
         * @private
         */

    }, {
        key: '_setupPensoPay',
        value: function _setupPensoPay() {
            var _this4 = this;

            PensoPay.Embedded.Form(document.querySelector('#wcpp-payment-form'), {
                payment_link: this.modal.data('link'),
                brandChanged: function brandChanged(brand) {
                    _this4.brands.children().removeClass('is-active');
                    _this4.brands.children('.wcpp-card-brand__' + brand).addClass('is-active');
                },
                beforeCreate: function beforeCreate(form) {
                    if (_this4.isLoading) {
                        return false;
                    }
                    _this4.isLoading = true;

                    _this4.modal.find('button').addClass('is-loading');
                },
                validChanged: function validChanged(form, isValid, fields) {
                    _this4.resetValidationErrors();

                    //this.modal.find('button[type="submit"]').prop('disabled', !isValid)

                    if (!isValid && fields && fields.length) {
                        _this4._setValidationErrors(fields);
                    }
                },
                success: function success(form, data) {
                    _this4._setCompletedState();

                    setTimeout(function () {
                        window.location.href = _this4.modal.data('redirect');
                    }, 2000);

                    return false; // Return false to prevent form submit
                },
                failure: function failure(form, type, messages, data) {
                    _this4.isLoading = false;
                    _this4.modal.find('button').removeClass('is-loading');
                    if ('validation' === type && data && data.length) {
                        _this4._setValidationErrors(data);
                    } else if ('validation' !== type) {
                        if (messages.errors && messages.errors.length) {
                            _this4._showErrors(messages.errors);
                        } else if (messages) {
                            _this4._showErrors([messages]);
                        }
                    }

                    /**
                     * If the payment link was already accepted, we will redirect the customer to the page specified on the form (if present)
                     */
                    if ('invalid_payment_link' === type && _this4._hasErrorMessage('Payment is already accepted', messages.errors) && _this4.modal.data('redirect')) {
                        window.location.href = _this4.modal.data('redirect');
                    }
                }
            });
        }
    }]);

    return OverlayBase;
}();

exports.default = OverlayBase;

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _overlayBase = __webpack_require__(0);

var _overlayBase2 = _interopRequireDefault(_overlayBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Used to perform overlay payments based on payment link authentication
 */
(function ($) {
    var WCPP_Checkout = function (_OverlayBase) {
        _inherits(WCPP_Checkout, _OverlayBase);

        function WCPP_Checkout(form) {
            _classCallCheck(this, WCPP_Checkout);

            return _possibleConstructorReturn(this, (WCPP_Checkout.__proto__ || Object.getPrototypeOf(WCPP_Checkout)).call(this, form));
        }

        return WCPP_Checkout;
    }(_overlayBase2.default);

    new WCPP_Checkout($("form.checkout, form#order_review, form#add_payment_method"));
})(jQuery);

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(false);
// imports


// module
exports.push([module.i, ".wcpp-animated {\n  visibility: visible !important; }\n\n/*!\nAnimate.css - http://daneden.me/animate\nLicensed under the MIT license - http://opensource.org/licenses/MIT\nCopyright (c) 2015 Daniel Eden\n*/\nbody {\n  -webkit-backface-visibility: hidden; }\n\n.animated, .wcpp-animated {\n  -webkit-animation-duration: 1s;\n  animation-duration: 1s;\n  -webkit-animation-fill-mode: both;\n  animation-fill-mode: both; }\n  .animated.infinite, .infinite.wcpp-animated {\n    animation-iteration-count: infinite; }\n  .animated.hinge, .hinge.wcpp-animated {\n    -webkit-animation-duration: 2s;\n    animation-duration: 2s; }\n  .animated.bounceIn, .bounceIn.wcpp-animated, .animated.bounceOut, .bounceOut.wcpp-animated {\n    -webkit-animation-duration: 0.75s;\n    animation-duration: 0.75s; }\n  .animated.flipOutX, .flipOutX.wcpp-animated, .animated.flipOutY, .flipOutY.wcpp-animated {\n    -webkit-animation-duration: 0.75s;\n    animation-duration: 0.75s; }\n\n@-webkit-keyframes shake {\n  0%, 100% {\n    -webkit-transform: translateX(0); }\n  10%, 30%, 50%, 70%, 90% {\n    -webkit-transform: translateX(-10px); }\n  20%, 40%, 60%, 80% {\n    -webkit-transform: translateX(10px); } }\n\n@keyframes shake {\n  0%, 100% {\n    transform: translateX(0); }\n  10%, 30%, 50%, 70%, 90% {\n    transform: translateX(-10px); }\n  20%, 40%, 60%, 80% {\n    transform: translateX(10px); } }\n\n.shake {\n  -webkit-animation-name: shake;\n  animation-name: shake; }\n\n@-webkit-keyframes bounceIn {\n  0% {\n    opacity: 0;\n    -webkit-transform: scale(0.3); }\n  50% {\n    opacity: 1;\n    -webkit-transform: scale(1.05); }\n  70% {\n    -webkit-transform: scale(0.9); }\n  100% {\n    -webkit-transform: scale(1); } }\n\n@keyframes bounceIn {\n  0% {\n    opacity: 0;\n    transform: scale(0.3); }\n  50% {\n    opacity: 1;\n    transform: scale(1.05); }\n  70% {\n    transform: scale(0.9); }\n  100% {\n    transform: scale(1); } }\n\n.bounceIn {\n  -webkit-animation-name: bounceIn;\n  animation-name: bounceIn; }\n\n@-webkit-keyframes fadeIn {\n  0% {\n    opacity: 0; }\n  100% {\n    opacity: 1; } }\n\n@keyframes fadeIn {\n  0% {\n    opacity: 0; }\n  100% {\n    opacity: 1; } }\n\n.fadeIn {\n  -webkit-animation-name: fadeIn;\n  animation-name: fadeIn; }\n\n@-webkit-keyframes fadeOut {\n  0% {\n    opacity: 1; }\n  100% {\n    opacity: 0; } }\n\n@keyframes fadeOut {\n  0% {\n    opacity: 1; }\n  100% {\n    opacity: 0; } }\n\n.fadeOut {\n  -webkit-animation-name: fadeOut;\n  animation-name: fadeOut; }\n\n@keyframes scaleAnimation {\n  0% {\n    opacity: 0;\n    transform: scale(1.5); }\n  100% {\n    opacity: 1;\n    transform: scale(1); } }\n\n@keyframes drawCircle {\n  0% {\n    stroke-dashoffset: 151px; }\n  100% {\n    stroke-dashoffset: 0; } }\n\n@keyframes drawCheck {\n  0% {\n    stroke-dashoffset: 36px; }\n  100% {\n    stroke-dashoffset: 0; } }\n\n@keyframes fadeOut {\n  0% {\n    opacity: 1; }\n  100% {\n    opacity: 0; } }\n\n@keyframes fadeIn {\n  0% {\n    opacity: 0; }\n  100% {\n    opacity: 1; } }\n\n.wcpp-modal-completed__icon__circle {\n  stroke-dasharray: 151px 151px;\n  stroke: #FFF; }\n\n.wcpp-modal-completed__icon__check {\n  stroke-dasharray: 36px 36px;\n  stroke: #FFF; }\n\n.wcpp-modal-completed__icon__result {\n  fill: #FFF;\n  opacity: 0; }\n\n.wcpp-modal-completed__icon.wcpp-animated {\n  animation: 1s ease-out 0s 1 both scaleAnimation; }\n  .wcpp-modal-completed__icon.wcpp-animated .wcpp-modal-completed__icon__circle {\n    animation: 1s cubic-bezier(0.77, 0, 0.175, 1) 0s 1 both drawCircle, 0.3s linear 0.9s 1 both fadeOut; }\n  .wcpp-modal-completed__icon.wcpp-animated .wcpp-modal-completed__icon__check {\n    animation: 1s cubic-bezier(0.77, 0, 0.175, 1) 0s 1 both drawCheck, 0.3s linear 0.9s 1 both fadeOut; }\n  .wcpp-modal-completed__icon.wcpp-animated .wcpp-modal-completed__icon__result {\n    animation: 0.3s linear 0.9s both fadeIn; }\n\n.wcpp-modal-errors {\n  background: #bf2401;\n  padding: 7px 10px !important; }\n  .wcpp-modal-errors__error {\n    color: #FFFFFF !important;\n    font-size: 12px !important; }\n    .wcpp-modal-errors__error:not(:last-child) {\n      margin-bottom: 5px; }\n\n.wcpp-modal {\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: #FFF;\n  background-color: rgba(0, 0, 0, 0.8);\n  position: fixed;\n  z-index: 999999999;\n  visibility: hidden; }\n  .wcpp-modal-title {\n    font-size: 20px;\n    font-weight: bold; }\n  .wcpp-modal__dialog-wrapper {\n    position: fixed;\n    max-width: 430px;\n    width: 100%;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    padding: 0 10px; }\n  .wcpp-modal__dialog {\n    animation-delay: .3s;\n    transform-origin: 50% 50% 0;\n    overflow: hidden;\n    border-radius: 5px;\n    box-shadow: 0px 0px 30px 0px rgba(0, 0, 0, 0.75); }\n  .wcpp-modal iframe {\n    width: 100% !important;\n    border: 0;\n    display: block; }\n    .wcpp-modal iframe div {\n      padding: 10px; }\n\n.wcpp-modal-header {\n  position: relative;\n  text-align: center;\n  display: block;\n  padding: 10px 0;\n  margin: 0;\n  background-image: linear-gradient(120deg, #fdfbfb 0%, #ebedee 100%); }\n  .wcpp-modal-header__amount .woocommerce-Price-amount {\n    position: relative;\n    font-size: 50px;\n    font-weight: bold; }\n  .wcpp-modal-header__amount .woocommerce-Price-currencySymbol {\n    font-weight: normal;\n    font-size: .3em;\n    text-shadow: none;\n    align-self: flex-end;\n    margin-bottom: .7em;\n    margin-left: .3em;\n    position: absolute;\n    bottom: 0;\n    transform: translateX(0.2em); }\n  .wcpp-modal-header__amount.is-left .woocommerce-Price-currencySymbol, .wcpp-modal-header__amount.is-left_space .woocommerce-Price-currencySymbol {\n    margin-left: -.3em;\n    transform: translateX(-100%);\n    left: -.1em; }\n  .wcpp-modal-header__close {\n    position: absolute;\n    top: 13px;\n    right: 13px; }\n    .wcpp-modal-header__close svg {\n      width: 10px;\n      height: 10px;\n      opacity: .6;\n      cursor: pointer;\n      transition: all .3s ease-out; }\n      .wcpp-modal-header__close svg:hover {\n        opacity: 1;\n        transform: rotate(90deg); }\n\n.wcpp-modal-disclaimer {\n  margin-top: 12px;\n  color: #FFFFFF;\n  font-size: 10px;\n  text-align: center;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center; }\n  .wcpp-modal-disclaimer img {\n    width: 80px;\n    display: inline-block;\n    position: relative;\n    margin-left: 5px; }\n\n.wcpp-modal-completed {\n  text-align: center;\n  padding: 70px;\n  border: 0 !important;\n  margin: 0 !important; }\n  .wcpp-modal-completed:before, .wcpp-modal-completed:after {\n    display: none !important; }\n\n@keyframes spinAround {\n  from {\n    transform: rotate(0deg); }\n  to {\n    transform: rotate(359deg); } }\n\n#wcpp-loader {\n  display: none; }\n  #wcpp-loader.is-loading {\n    position: relative !important;\n    color: transparent !important;\n    pointer-events: none !important; }\n    #wcpp-loader.is-loading:after {\n      animation: spinAround 500ms infinite linear !important;\n      position: absolute !important;\n      left: calc(50% - (1em / 2)) !important;\n      top: calc(50% - (1em / 2)) !important;\n      position: absolute !important;\n      border: 2px solid #FFFFFF !important;\n      border-radius: 290486px !important;\n      border-right-color: transparent !important;\n      border-top-color: transparent !important;\n      content: \"\" !important;\n      display: block !important;\n      height: 1em !important;\n      width: 1em !important;\n      margin-left: 0 !important; }\n  #wcpp-loader.is-loading {\n    height: 2rem;\n    display: flex; }\n    #wcpp-loader.is-loading:after {\n      border-color: #000 !important;\n      border-right-color: transparent !important; }\n\n#wcpp-payment-form {\n  margin: 0;\n  padding: 0; }\n  iframe + #wcpp-payment-form {\n    display: none; }\n\n#wcpp-payment-form__inner input[data-pensopay=\"cardnumber\"] {\n  width: 100%; }\n\n.wcpp-card-row {\n  border-bottom: 1px solid #eaeaea;\n  padding: 26px 20px 22px;\n  position: relative;\n  background: #FFF;\n  display: flex;\n  align-items: center;\n  flex-direction: row; }\n  @media only screen and (min-width: 768px) {\n    .wcpp-card-row {\n      padding: 17px 25px 24px; } }\n  .wcpp-card-row:after {\n    content: \"\";\n    display: table;\n    clear: both; }\n  .wcpp-card-row + .wcpp-card-row {\n    border-bottom: 0; }\n  .wcpp-card-row .wcpp-card-column {\n    flex: 1; }\n    .wcpp-card-row .wcpp-card-column.is-card {\n      width: 70%; }\n    .wcpp-card-row .wcpp-card-column.is-brand {\n      width: 30%;\n      flex: none; }\n    .wcpp-card-row .wcpp-card-column.is-exp {\n      padding-right: 1rem; }\n    .wcpp-card-row .wcpp-card-column input {\n      width: 100% !important;\n      max-width: 100% !important; }\n    .wcpp-card-row .wcpp-card-column.has-error label {\n      color: #b92909 !important; }\n    .wcpp-card-row .wcpp-card-column .woocommerce-form__label {\n      font-size: 14px; }\n\n.wcpp-flex {\n  display: flex; }\n\n.woocommerce-Button.wcpp-btn--checkout {\n  display: block;\n  width: 100%; }\n  .woocommerce-Button.wcpp-btn--checkout.is-loading {\n    position: relative !important;\n    color: transparent !important;\n    pointer-events: none !important; }\n    .woocommerce-Button.wcpp-btn--checkout.is-loading:after {\n      animation: spinAround 500ms infinite linear !important;\n      position: absolute !important;\n      left: calc(50% - (1em / 2)) !important;\n      top: calc(50% - (1em / 2)) !important;\n      position: absolute !important;\n      border: 2px solid #FFFFFF !important;\n      border-radius: 290486px !important;\n      border-right-color: transparent !important;\n      border-top-color: transparent !important;\n      content: \"\" !important;\n      display: block !important;\n      height: 1em !important;\n      width: 1em !important;\n      margin-left: 0 !important; }\n\n.wcpp-card-brand {\n  text-align: right; }\n  .wcpp-card-brand svg {\n    display: inline-block;\n    opacity: .5;\n    width: 40px;\n    margin-right: 5px;\n    transition: all .2s ease-out; }\n    .wcpp-card-brand svg + svg {\n      margin-right: 0; }\n    .wcpp-card-brand svg.is-active {\n      opacity: 1; }\n  .wcpp-card-brand.visa .wcpp-card-brand__visa {\n    opacity: 1; }\n  .wcpp-card-brand.mastercard .wcpp-card-brand__mastercard {\n    opacity: 1; }\n", ""]);

// exports


/***/ }),
/* 3 */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function(useSourceMap) {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		return this.map(function (item) {
			var content = cssWithMappingToString(item, useSourceMap);
			if(item[2]) {
				return "@media " + item[2] + "{" + content + "}";
			} else {
				return content;
			}
		}).join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};

function cssWithMappingToString(item, useSourceMap) {
	var content = item[1] || '';
	var cssMapping = item[3];
	if (!cssMapping) {
		return content;
	}

	if (useSourceMap && typeof btoa === 'function') {
		var sourceMapping = toComment(cssMapping);
		var sourceURLs = cssMapping.sources.map(function (source) {
			return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'
		});

		return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
	}

	return [content].join('\n');
}

// Adapted from convert-source-map (MIT)
function toComment(sourceMap) {
	// eslint-disable-next-line no-undef
	var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
	var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;

	return '/*# ' + data + ' */';
}


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {
/*
  Payform Javascript Library

  URL: https://github.com/jondavidjohn/payform
  Author: Jonathan D. Johnson <me@jondavidjohn.com>
  License: MIT
  Version: 1.4.0
 */

(function() {
  var indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  (function(name, definition) {
    if (typeof module !== "undefined" && module !== null) {
      return module.exports = definition();
    } else if (true) {
      return __webpack_require__(8)(name, definition);
    } else {
      return this[name] = definition();
    }
  })('payform', function() {
    var _eventNormalize, _getCaretPos, _off, _on, attachEvents, cardFromNumber, cardFromType, defaultFormat, eventList, formatBackCardNumber, formatBackExpiry, formatCardExpiry, formatCardNumber, formatForwardExpiry, formatForwardSlashAndSpace, getDirectionality, hasTextSelected, keyCodes, luhnCheck, payform, reFormatCVC, reFormatCardNumber, reFormatExpiry, replaceFullWidthChars, restrictCVC, restrictCardNumber, restrictExpiry, restrictNumeric;
    _getCaretPos = function(ele) {
      var r, rc, re;
      if (ele.selectionStart != null) {
        return ele.selectionStart;
      } else if (document.selection != null) {
        ele.focus();
        r = document.selection.createRange();
        re = ele.createTextRange();
        rc = re.duplicate();
        re.moveToBookmark(r.getBookmark());
        rc.setEndPoint('EndToStart', re);
        return rc.text.length;
      }
    };
    _eventNormalize = function(listener) {
      return function(e) {
        var newEvt;
        if (e == null) {
          e = window.event;
        }
        if (e.inputType === 'insertCompositionText' && !e.isComposing) {
          return;
        }
        newEvt = {
          target: e.target || e.srcElement,
          which: e.which || e.keyCode,
          type: e.type,
          metaKey: e.metaKey,
          ctrlKey: e.ctrlKey,
          preventDefault: function() {
            if (e.preventDefault) {
              e.preventDefault();
            } else {
              e.returnValue = false;
            }
          }
        };
        return listener(newEvt);
      };
    };
    _on = function(ele, event, listener) {
      if (ele.addEventListener != null) {
        return ele.addEventListener(event, listener, false);
      } else {
        return ele.attachEvent("on" + event, listener);
      }
    };
    _off = function(ele, event, listener) {
      if (ele.removeEventListener != null) {
        return ele.removeEventListener(event, listener, false);
      } else {
        return ele.detachEvent("on" + event, listener);
      }
    };
    payform = {};
    keyCodes = {
      UNKNOWN: 0,
      BACKSPACE: 8,
      PAGE_UP: 33,
      ARROW_LEFT: 37,
      ARROW_RIGHT: 39
    };
    defaultFormat = /(\d{1,4})/g;
    payform.cards = [
      {
        type: 'elo',
        pattern: /^(4011(78|79)|43(1274|8935)|45(1416|7393|763(1|2))|50(4175|6699|67[0-7][0-9]|9000)|627780|63(6297|6368)|650(03([^4])|04([0-9])|05(0|1)|4(0[5-9]|3[0-9]|8[5-9]|9[0-9])|5([0-2][0-9]|3[0-8])|9([2-6][0-9]|7[0-8])|541|700|720|901)|651652|655000|655021)/,
        format: defaultFormat,
        length: [16],
        cvcLength: [3],
        luhn: true
      }, {
        type: 'visaelectron',
        pattern: /^4(026|17500|405|508|844|91[37])/,
        format: defaultFormat,
        length: [16],
        cvcLength: [3],
        luhn: true
      }, {
        type: 'maestro',
        pattern: /^(5018|5020|5038|6304|6390[0-9]{2}|67[0-9]{4})/,
        format: defaultFormat,
        length: [12, 13, 14, 15, 16, 17, 18, 19],
        cvcLength: [3],
        luhn: true
      }, {
        type: 'forbrugsforeningen',
        pattern: /^600/,
        format: defaultFormat,
        length: [16],
        cvcLength: [3],
        luhn: true
      }, {
        type: 'dankort',
        pattern: /^5019/,
        format: defaultFormat,
        length: [16],
        cvcLength: [3],
        luhn: true
      }, {
        type: 'visa',
        pattern: /^4/,
        format: defaultFormat,
        length: [13, 16, 19],
        cvcLength: [3],
        luhn: true
      }, {
        type: 'mastercard',
        pattern: /^(5[1-5][0-9]{4}|677189)|^(222[1-9]|2[3-6]\d{2}|27[0-1]\d|2720)([0-9]{2})/,
        format: defaultFormat,
        length: [16],
        cvcLength: [3],
        luhn: true
      }, {
        type: 'amex',
        pattern: /^3[47]/,
        format: /(\d{1,4})(\d{1,6})?(\d{1,5})?/,
        length: [15],
        cvcLength: [4],
        luhn: true
      }, {
        type: 'hipercard',
        pattern: /^(384100|384140|384160|606282|637095|637568|60(?!11))/,
        format: defaultFormat,
        length: [14, 15, 16, 17, 18, 19],
        cvcLength: [3],
        luhn: true
      }, {
        type: 'dinersclub',
        pattern: /^(36|38|30[0-5])/,
        format: /(\d{1,4})(\d{1,6})?(\d{1,4})?/,
        length: [14],
        cvcLength: [3],
        luhn: true
      }, {
        type: 'discover',
        pattern: /^(6011|65|64[4-9]|622)/,
        format: defaultFormat,
        length: [16],
        cvcLength: [3],
        luhn: true
      }, {
        type: 'unionpay',
        pattern: /^62/,
        format: defaultFormat,
        length: [16, 17, 18, 19],
        cvcLength: [3],
        luhn: false
      }, {
        type: 'jcb',
        pattern: /^35/,
        format: defaultFormat,
        length: [16, 17, 18, 19],
        cvcLength: [3],
        luhn: true
      }, {
        type: 'laser',
        pattern: /^(6706|6771|6709)/,
        format: defaultFormat,
        length: [16, 17, 18, 19],
        cvcLength: [3],
        luhn: true
      }
    ];
    cardFromNumber = function(num) {
      var card, i, len, ref;
      num = (num + '').replace(/\D/g, '');
      ref = payform.cards;
      for (i = 0, len = ref.length; i < len; i++) {
        card = ref[i];
        if (card.pattern.test(num)) {
          return card;
        }
      }
    };
    cardFromType = function(type) {
      var card, i, len, ref;
      ref = payform.cards;
      for (i = 0, len = ref.length; i < len; i++) {
        card = ref[i];
        if (card.type === type) {
          return card;
        }
      }
    };
    getDirectionality = function(target) {
      var style;
      style = getComputedStyle(target);
      return style && style['direction'] || document.dir;
    };
    luhnCheck = function(num) {
      var digit, digits, i, len, odd, sum;
      odd = true;
      sum = 0;
      digits = (num + '').split('').reverse();
      for (i = 0, len = digits.length; i < len; i++) {
        digit = digits[i];
        digit = parseInt(digit, 10);
        if ((odd = !odd)) {
          digit *= 2;
        }
        if (digit > 9) {
          digit -= 9;
        }
        sum += digit;
      }
      return sum % 10 === 0;
    };
    hasTextSelected = function(target) {
      var ref;
      if ((typeof document !== "undefined" && document !== null ? (ref = document.selection) != null ? ref.createRange : void 0 : void 0) != null) {
        if (document.selection.createRange().text) {
          return true;
        }
      }
      return (target.selectionStart != null) && target.selectionStart !== target.selectionEnd;
    };
    replaceFullWidthChars = function(str) {
      var char, chars, fullWidth, halfWidth, i, idx, len, value;
      if (str == null) {
        str = '';
      }
      fullWidth = '\uff10\uff11\uff12\uff13\uff14\uff15\uff16\uff17\uff18\uff19';
      halfWidth = '0123456789';
      value = '';
      chars = str.split('');
      for (i = 0, len = chars.length; i < len; i++) {
        char = chars[i];
        idx = fullWidth.indexOf(char);
        if (idx > -1) {
          char = halfWidth[idx];
        }
        value += char;
      }
      return value;
    };
    reFormatCardNumber = function(e) {
      var cursor;
      cursor = _getCaretPos(e.target);
      if (e.target.value === "") {
        return;
      }
      if (getDirectionality(e.target) === 'ltr') {
        cursor = _getCaretPos(e.target);
      }
      e.target.value = payform.formatCardNumber(e.target.value);
      if (getDirectionality(e.target) === 'ltr' && cursor !== e.target.selectionStart) {
        cursor = _getCaretPos(e.target);
      }
      if (getDirectionality(e.target) === 'rtl' && e.target.value.indexOf('‎\u200e') === -1) {
        e.target.value = '‎\u200e'.concat(e.target.value);
      }
      cursor = _getCaretPos(e.target);
      if ((cursor != null) && cursor !== 0 && e.type !== 'change') {
        return e.target.setSelectionRange(cursor, cursor);
      }
    };
    formatCardNumber = function(e) {
      var card, cursor, digit, length, re, upperLength, value;
      digit = String.fromCharCode(e.which);
      if (!/^\d+$/.test(digit)) {
        return;
      }
      value = e.target.value;
      card = cardFromNumber(value + digit);
      length = (value.replace(/\D/g, '') + digit).length;
      upperLength = 16;
      if (card) {
        upperLength = card.length[card.length.length - 1];
      }
      if (length >= upperLength) {
        return;
      }
      cursor = _getCaretPos(e.target);
      if (cursor && cursor !== value.length) {
        return;
      }
      if (card && card.type === 'amex') {
        re = /^(\d{4}|\d{4}\s\d{6})$/;
      } else {
        re = /(?:^|\s)(\d{4})$/;
      }
      if (re.test(value)) {
        e.preventDefault();
        return setTimeout(function() {
          return e.target.value = value + " " + digit;
        });
      } else if (re.test(value + digit)) {
        e.preventDefault();
        return setTimeout(function() {
          return e.target.value = (value + digit) + " ";
        });
      }
    };
    formatBackCardNumber = function(e) {
      var cursor, value;
      value = e.target.value;
      if (e.which !== keyCodes.BACKSPACE) {
        return;
      }
      cursor = _getCaretPos(e.target);
      if (cursor && cursor !== value.length) {
        return;
      }
      if ((e.target.selectionEnd - e.target.selectionStart) > 1) {
        return;
      }
      if (/\d\s$/.test(value)) {
        e.preventDefault();
        return setTimeout(function() {
          return e.target.value = value.replace(/\d\s$/, '');
        });
      } else if (/\s\d?$/.test(value)) {
        e.preventDefault();
        return setTimeout(function() {
          return e.target.value = value.replace(/\d$/, '');
        });
      }
    };
    reFormatExpiry = function(e) {
      var cursor;
      if (e.target.value === "") {
        return;
      }
      e.target.value = payform.formatCardExpiry(e.target.value);
      if (getDirectionality(e.target) === 'rtl' && e.target.value.indexOf('‎\u200e') === -1) {
        e.target.value = '‎\u200e'.concat(e.target.value);
      }
      cursor = _getCaretPos(e.target);
      if ((cursor != null) && e.type !== 'change') {
        return e.target.setSelectionRange(cursor, cursor);
      }
    };
    formatCardExpiry = function(e) {
      var digit, val;
      digit = String.fromCharCode(e.which);
      if (!/^\d+$/.test(digit)) {
        return;
      }
      val = e.target.value + digit;
      if (/^\d$/.test(val) && (val !== '0' && val !== '1')) {
        e.preventDefault();
        return setTimeout(function() {
          return e.target.value = "0" + val + " / ";
        });
      } else if (/^\d\d$/.test(val)) {
        e.preventDefault();
        return setTimeout(function() {
          return e.target.value = val + " / ";
        });
      }
    };
    formatForwardExpiry = function(e) {
      var digit, val;
      digit = String.fromCharCode(e.which);
      if (!/^\d+$/.test(digit)) {
        return;
      }
      val = e.target.value;
      if (/^\d\d$/.test(val)) {
        return e.target.value = val + " / ";
      }
    };
    formatForwardSlashAndSpace = function(e) {
      var val, which;
      which = String.fromCharCode(e.which);
      if (!(which === '/' || which === ' ')) {
        return;
      }
      val = e.target.value;
      if (/^\d$/.test(val) && val !== '0') {
        return e.target.value = "0" + val + " / ";
      }
    };
    formatBackExpiry = function(e) {
      var cursor, value;
      value = e.target.value;
      if (e.which !== keyCodes.BACKSPACE) {
        return;
      }
      cursor = _getCaretPos(e.target);
      if (cursor && cursor !== value.length) {
        return;
      }
      if (/\d\s\/\s$/.test(value)) {
        e.preventDefault();
        return setTimeout(function() {
          return e.target.value = value.replace(/\d\s\/\s$/, '');
        });
      }
    };
    reFormatCVC = function(e) {
      var cursor;
      if (e.target.value === "") {
        return;
      }
      cursor = _getCaretPos(e.target);
      e.target.value = replaceFullWidthChars(e.target.value).replace(/\D/g, '').slice(0, 4);
      if ((cursor != null) && e.type !== 'change') {
        return e.target.setSelectionRange(cursor, cursor);
      }
    };
    restrictNumeric = function(e) {
      var input;
      if (e.metaKey || e.ctrlKey) {
        return;
      }
      if ([keyCodes.UNKNOWN, keyCodes.ARROW_LEFT, keyCodes.ARROW_RIGHT].indexOf(e.which) > -1) {
        return;
      }
      if (e.which < keyCodes.PAGE_UP) {
        return;
      }
      input = String.fromCharCode(e.which);
      if (!/^\d+$/.test(input)) {
        return e.preventDefault();
      }
    };
    restrictCardNumber = function(e) {
      var card, digit, maxLength, value;
      digit = String.fromCharCode(e.which);
      if (!/^\d+$/.test(digit)) {
        return;
      }
      if (hasTextSelected(e.target)) {
        return;
      }
      value = (e.target.value + digit).replace(/\D/g, '');
      card = cardFromNumber(value);
      maxLength = card ? card.length[card.length.length - 1] : 16;
      if (value.length > maxLength) {
        return e.preventDefault();
      }
    };
    restrictExpiry = function(e) {
      var digit, value;
      digit = String.fromCharCode(e.which);
      if (!/^\d+$/.test(digit)) {
        return;
      }
      if (hasTextSelected(e.target)) {
        return;
      }
      value = e.target.value + digit;
      value = value.replace(/\D/g, '');
      if (value.length > 6) {
        return e.preventDefault();
      }
    };
    restrictCVC = function(e) {
      var digit, val;
      digit = String.fromCharCode(e.which);
      if (!/^\d+$/.test(digit)) {
        return;
      }
      if (hasTextSelected(e.target)) {
        return;
      }
      val = e.target.value + digit;
      if (val.length > 4) {
        return e.preventDefault();
      }
    };
    eventList = {
      cvcInput: [
        {
          eventName: 'keypress',
          eventHandler: _eventNormalize(restrictNumeric)
        }, {
          eventName: 'keypress',
          eventHandler: _eventNormalize(restrictCVC)
        }, {
          eventName: 'paste',
          eventHandler: _eventNormalize(reFormatCVC)
        }, {
          eventName: 'change',
          eventHandler: _eventNormalize(reFormatCVC)
        }, {
          eventName: 'input',
          eventHandler: _eventNormalize(reFormatCVC)
        }
      ],
      expiryInput: [
        {
          eventName: 'keypress',
          eventHandler: _eventNormalize(restrictNumeric)
        }, {
          eventName: 'keypress',
          eventHandler: _eventNormalize(restrictExpiry)
        }, {
          eventName: 'keypress',
          eventHandler: _eventNormalize(formatCardExpiry)
        }, {
          eventName: 'keypress',
          eventHandler: _eventNormalize(formatForwardSlashAndSpace)
        }, {
          eventName: 'keypress',
          eventHandler: _eventNormalize(formatForwardExpiry)
        }, {
          eventName: 'keydown',
          eventHandler: _eventNormalize(formatBackExpiry)
        }, {
          eventName: 'change',
          eventHandler: _eventNormalize(reFormatExpiry)
        }, {
          eventName: 'input',
          eventHandler: _eventNormalize(reFormatExpiry)
        }
      ],
      cardNumberInput: [
        {
          eventName: 'keypress',
          eventHandler: _eventNormalize(restrictNumeric)
        }, {
          eventName: 'keypress',
          eventHandler: _eventNormalize(restrictCardNumber)
        }, {
          eventName: 'keypress',
          eventHandler: _eventNormalize(formatCardNumber)
        }, {
          eventName: 'keydown',
          eventHandler: _eventNormalize(formatBackCardNumber)
        }, {
          eventName: 'paste',
          eventHandler: _eventNormalize(reFormatCardNumber)
        }, {
          eventName: 'change',
          eventHandler: _eventNormalize(reFormatCardNumber)
        }, {
          eventName: 'input',
          eventHandler: _eventNormalize(reFormatCardNumber)
        }
      ],
      numericInput: [
        {
          eventName: 'keypress',
          eventHandler: _eventNormalize(restrictNumeric)
        }, {
          eventName: 'paste',
          eventHandler: _eventNormalize(restrictNumeric)
        }, {
          eventName: 'change',
          eventHandler: _eventNormalize(restrictNumeric)
        }, {
          eventName: 'input',
          eventHandler: _eventNormalize(restrictNumeric)
        }
      ]
    };
    attachEvents = function(input, events, detach) {
      var evt, i, len;
      for (i = 0, len = events.length; i < len; i++) {
        evt = events[i];
        if (detach) {
          _off(input, evt.eventName, evt.eventHandler);
        } else {
          _on(input, evt.eventName, evt.eventHandler);
        }
      }
    };
    payform.cvcInput = function(input) {
      return attachEvents(input, eventList.cvcInput);
    };
    payform.expiryInput = function(input) {
      return attachEvents(input, eventList.expiryInput);
    };
    payform.cardNumberInput = function(input) {
      return attachEvents(input, eventList.cardNumberInput);
    };
    payform.numericInput = function(input) {
      return attachEvents(input, eventList.numericInput);
    };
    payform.detachCvcInput = function(input) {
      return attachEvents(input, eventList.cvcInput, true);
    };
    payform.detachExpiryInput = function(input) {
      return attachEvents(input, eventList.expiryInput, true);
    };
    payform.detachCardNumberInput = function(input) {
      return attachEvents(input, eventList.cardNumberInput, true);
    };
    payform.detachNumericInput = function(input) {
      return attachEvents(input, eventList.numericInput, true);
    };
    payform.parseCardExpiry = function(value) {
      var month, prefix, ref, year;
      value = value.replace(/\s/g, '');
      ref = value.split('/', 2), month = ref[0], year = ref[1];
      if ((year != null ? year.length : void 0) === 2 && /^\d+$/.test(year)) {
        prefix = (new Date).getFullYear();
        prefix = prefix.toString().slice(0, 2);
        year = prefix + year;
      }
      month = parseInt(month.replace(/[\u200e]/g, ""), 10);
      year = parseInt(year, 10);
      return {
        month: month,
        year: year
      };
    };
    payform.validateCardNumber = function(num) {
      var card, ref;
      num = (num + '').replace(/\s+|-/g, '');
      if (!/^\d+$/.test(num)) {
        return false;
      }
      card = cardFromNumber(num);
      if (!card) {
        return false;
      }
      return (ref = num.length, indexOf.call(card.length, ref) >= 0) && (card.luhn === false || luhnCheck(num));
    };
    payform.validateCardExpiry = function(month, year) {
      var currentTime, expiry, ref;
      if (typeof month === 'object' && 'month' in month) {
        ref = month, month = ref.month, year = ref.year;
      }
      if (!(month && year)) {
        return false;
      }
      month = String(month).trim();
      year = String(year).trim();
      if (!/^\d+$/.test(month)) {
        return false;
      }
      if (!/^\d+$/.test(year)) {
        return false;
      }
      if (!((1 <= month && month <= 12))) {
        return false;
      }
      if (year.length === 2) {
        if (year < 70) {
          year = "20" + year;
        } else {
          year = "19" + year;
        }
      }
      if (year.length !== 4) {
        return false;
      }
      expiry = new Date(year, month);
      currentTime = new Date;
      expiry.setMonth(expiry.getMonth() - 1);
      expiry.setMonth(expiry.getMonth() + 1, 1);
      return expiry > currentTime;
    };
    payform.validateCardCVC = function(cvc, type) {
      var card, ref;
      cvc = String(cvc).trim();
      if (!/^\d+$/.test(cvc)) {
        return false;
      }
      card = cardFromType(type);
      if (card != null) {
        return ref = cvc.length, indexOf.call(card.cvcLength, ref) >= 0;
      } else {
        return cvc.length >= 3 && cvc.length <= 4;
      }
    };
    payform.parseCardType = function(num) {
      var ref;
      if (!num) {
        return null;
      }
      return ((ref = cardFromNumber(num)) != null ? ref.type : void 0) || null;
    };
    payform.formatCardNumber = function(num) {
      var card, groups, ref, upperLength;
      num = replaceFullWidthChars(num);
      num = num.replace(/\D/g, '');
      card = cardFromNumber(num);
      if (!card) {
        return num;
      }
      upperLength = card.length[card.length.length - 1];
      num = num.slice(0, upperLength);
      if (card.format.global) {
        return (ref = num.match(card.format)) != null ? ref.join(' ') : void 0;
      } else {
        groups = card.format.exec(num);
        if (groups == null) {
          return;
        }
        groups.shift();
        groups = groups.filter(Boolean);
        return groups.join(' ');
      }
    };
    payform.formatCardExpiry = function(expiry) {
      var mon, parts, sep, year;
      expiry = replaceFullWidthChars(expiry);
      parts = expiry.match(/^\D*(\d{1,2})(\D+)?(\d{1,4})?/);
      if (!parts) {
        return '';
      }
      mon = parts[1] || '';
      sep = parts[2] || '';
      year = parts[3] || '';
      if (year.length > 0) {
        sep = ' / ';
      } else if (sep === ' /') {
        mon = mon.substring(0, 1);
        sep = '';
      } else if (mon.length === 2 || sep.length > 0) {
        sep = ' / ';
      } else if (mon.length === 1 && (mon !== '0' && mon !== '1')) {
        mon = "0" + mon;
        sep = ' / ';
      }
      return mon + sep + year;
    };
    return payform;
  });

}).call(this);

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9)(module)))

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
var stylesInDom = {},
	memoize = function(fn) {
		var memo;
		return function () {
			if (typeof memo === "undefined") memo = fn.apply(this, arguments);
			return memo;
		};
	},
	isOldIE = memoize(function() {
		// Test for IE <= 9 as proposed by Browserhacks
		// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
		// Tests for existence of standard globals is to allow style-loader 
		// to operate correctly into non-standard environments
		// @see https://github.com/webpack-contrib/style-loader/issues/177
		return window && document && document.all && !window.atob;
	}),
	getElement = (function(fn) {
		var memo = {};
		return function(selector) {
			if (typeof memo[selector] === "undefined") {
				memo[selector] = fn.call(this, selector);
			}
			return memo[selector]
		};
	})(function (styleTarget) {
		return document.querySelector(styleTarget)
	}),
	singletonElement = null,
	singletonCounter = 0,
	styleElementsInsertedAtTop = [],
	fixUrls = __webpack_require__(6);

module.exports = function(list, options) {
	if(typeof DEBUG !== "undefined" && DEBUG) {
		if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
	}

	options = options || {};
	options.attrs = typeof options.attrs === "object" ? options.attrs : {};

	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
	// tags it will allow on a page
	if (typeof options.singleton === "undefined") options.singleton = isOldIE();

	// By default, add <style> tags to the <head> element
	if (typeof options.insertInto === "undefined") options.insertInto = "head";

	// By default, add <style> tags to the bottom of the target
	if (typeof options.insertAt === "undefined") options.insertAt = "bottom";

	var styles = listToStyles(list);
	addStylesToDom(styles, options);

	return function update(newList) {
		var mayRemove = [];
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			domStyle.refs--;
			mayRemove.push(domStyle);
		}
		if(newList) {
			var newStyles = listToStyles(newList);
			addStylesToDom(newStyles, options);
		}
		for(var i = 0; i < mayRemove.length; i++) {
			var domStyle = mayRemove[i];
			if(domStyle.refs === 0) {
				for(var j = 0; j < domStyle.parts.length; j++)
					domStyle.parts[j]();
				delete stylesInDom[domStyle.id];
			}
		}
	};
};

function addStylesToDom(styles, options) {
	for(var i = 0; i < styles.length; i++) {
		var item = styles[i];
		var domStyle = stylesInDom[item.id];
		if(domStyle) {
			domStyle.refs++;
			for(var j = 0; j < domStyle.parts.length; j++) {
				domStyle.parts[j](item.parts[j]);
			}
			for(; j < item.parts.length; j++) {
				domStyle.parts.push(addStyle(item.parts[j], options));
			}
		} else {
			var parts = [];
			for(var j = 0; j < item.parts.length; j++) {
				parts.push(addStyle(item.parts[j], options));
			}
			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
		}
	}
}

function listToStyles(list) {
	var styles = [];
	var newStyles = {};
	for(var i = 0; i < list.length; i++) {
		var item = list[i];
		var id = item[0];
		var css = item[1];
		var media = item[2];
		var sourceMap = item[3];
		var part = {css: css, media: media, sourceMap: sourceMap};
		if(!newStyles[id])
			styles.push(newStyles[id] = {id: id, parts: [part]});
		else
			newStyles[id].parts.push(part);
	}
	return styles;
}

function insertStyleElement(options, styleElement) {
	var styleTarget = getElement(options.insertInto)
	if (!styleTarget) {
		throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
	}
	var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
	if (options.insertAt === "top") {
		if(!lastStyleElementInsertedAtTop) {
			styleTarget.insertBefore(styleElement, styleTarget.firstChild);
		} else if(lastStyleElementInsertedAtTop.nextSibling) {
			styleTarget.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
		} else {
			styleTarget.appendChild(styleElement);
		}
		styleElementsInsertedAtTop.push(styleElement);
	} else if (options.insertAt === "bottom") {
		styleTarget.appendChild(styleElement);
	} else {
		throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
	}
}

function removeStyleElement(styleElement) {
	styleElement.parentNode.removeChild(styleElement);
	var idx = styleElementsInsertedAtTop.indexOf(styleElement);
	if(idx >= 0) {
		styleElementsInsertedAtTop.splice(idx, 1);
	}
}

function createStyleElement(options) {
	var styleElement = document.createElement("style");
	options.attrs.type = "text/css";

	attachTagAttrs(styleElement, options.attrs);
	insertStyleElement(options, styleElement);
	return styleElement;
}

function createLinkElement(options) {
	var linkElement = document.createElement("link");
	options.attrs.type = "text/css";
	options.attrs.rel = "stylesheet";

	attachTagAttrs(linkElement, options.attrs);
	insertStyleElement(options, linkElement);
	return linkElement;
}

function attachTagAttrs(element, attrs) {
	Object.keys(attrs).forEach(function (key) {
		element.setAttribute(key, attrs[key]);
	});
}

function addStyle(obj, options) {
	var styleElement, update, remove;

	if (options.singleton) {
		var styleIndex = singletonCounter++;
		styleElement = singletonElement || (singletonElement = createStyleElement(options));
		update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
		remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
	} else if(obj.sourceMap &&
		typeof URL === "function" &&
		typeof URL.createObjectURL === "function" &&
		typeof URL.revokeObjectURL === "function" &&
		typeof Blob === "function" &&
		typeof btoa === "function") {
		styleElement = createLinkElement(options);
		update = updateLink.bind(null, styleElement, options);
		remove = function() {
			removeStyleElement(styleElement);
			if(styleElement.href)
				URL.revokeObjectURL(styleElement.href);
		};
	} else {
		styleElement = createStyleElement(options);
		update = applyToTag.bind(null, styleElement);
		remove = function() {
			removeStyleElement(styleElement);
		};
	}

	update(obj);

	return function updateStyle(newObj) {
		if(newObj) {
			if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
				return;
			update(obj = newObj);
		} else {
			remove();
		}
	};
}

var replaceText = (function () {
	var textStore = [];

	return function (index, replacement) {
		textStore[index] = replacement;
		return textStore.filter(Boolean).join('\n');
	};
})();

function applyToSingletonTag(styleElement, index, remove, obj) {
	var css = remove ? "" : obj.css;

	if (styleElement.styleSheet) {
		styleElement.styleSheet.cssText = replaceText(index, css);
	} else {
		var cssNode = document.createTextNode(css);
		var childNodes = styleElement.childNodes;
		if (childNodes[index]) styleElement.removeChild(childNodes[index]);
		if (childNodes.length) {
			styleElement.insertBefore(cssNode, childNodes[index]);
		} else {
			styleElement.appendChild(cssNode);
		}
	}
}

function applyToTag(styleElement, obj) {
	var css = obj.css;
	var media = obj.media;

	if(media) {
		styleElement.setAttribute("media", media)
	}

	if(styleElement.styleSheet) {
		styleElement.styleSheet.cssText = css;
	} else {
		while(styleElement.firstChild) {
			styleElement.removeChild(styleElement.firstChild);
		}
		styleElement.appendChild(document.createTextNode(css));
	}
}

function updateLink(linkElement, options, obj) {
	var css = obj.css;
	var sourceMap = obj.sourceMap;

	/* If convertToAbsoluteUrls isn't defined, but sourcemaps are enabled
	and there is no publicPath defined then lets turn convertToAbsoluteUrls
	on by default.  Otherwise default to the convertToAbsoluteUrls option
	directly
	*/
	var autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;

	if (options.convertToAbsoluteUrls || autoFixUrls){
		css = fixUrls(css);
	}

	if(sourceMap) {
		// http://stackoverflow.com/a/26603875
		css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
	}

	var blob = new Blob([css], { type: "text/css" });

	var oldSrc = linkElement.href;

	linkElement.href = URL.createObjectURL(blob);

	if(oldSrc)
		URL.revokeObjectURL(oldSrc);
}


/***/ }),
/* 6 */
/***/ (function(module, exports) {


/**
 * When source maps are enabled, `style-loader` uses a link element with a data-uri to
 * embed the css on the page. This breaks all relative urls because now they are relative to a
 * bundle instead of the current page.
 *
 * One solution is to only use full urls, but that may be impossible.
 *
 * Instead, this function "fixes" the relative urls to be absolute according to the current page location.
 *
 * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.
 *
 */

module.exports = function (css) {
  // get current location
  var location = typeof window !== "undefined" && window.location;

  if (!location) {
    throw new Error("fixUrls requires window.location");
  }

	// blank or null?
	if (!css || typeof css !== "string") {
	  return css;
  }

  var baseUrl = location.protocol + "//" + location.host;
  var currentDir = baseUrl + location.pathname.replace(/\/[^\/]*$/, "/");

	// convert each url(...)
	/*
	This regular expression is just a way to recursively match brackets within
	a string.

	 /url\s*\(  = Match on the word "url" with any whitespace after it and then a parens
	   (  = Start a capturing group
	     (?:  = Start a non-capturing group
	         [^)(]  = Match anything that isn't a parentheses
	         |  = OR
	         \(  = Match a start parentheses
	             (?:  = Start another non-capturing groups
	                 [^)(]+  = Match anything that isn't a parentheses
	                 |  = OR
	                 \(  = Match a start parentheses
	                     [^)(]*  = Match anything that isn't a parentheses
	                 \)  = Match a end parentheses
	             )  = End Group
              *\) = Match anything and then a close parens
          )  = Close non-capturing group
          *  = Match anything
       )  = Close capturing group
	 \)  = Match a close parens

	 /gi  = Get all matches, not the first.  Be case insensitive.
	 */
	var fixedCss = css.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function(fullMatch, origUrl) {
		// strip quotes (if they exist)
		var unquotedOrigUrl = origUrl
			.trim()
			.replace(/^"(.*)"$/, function(o, $1){ return $1; })
			.replace(/^'(.*)'$/, function(o, $1){ return $1; });

		// already a full url? no change
		if (/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(unquotedOrigUrl)) {
		  return fullMatch;
		}

		// convert the url to a full url
		var newUrl;

		if (unquotedOrigUrl.indexOf("//") === 0) {
		  	//TODO: should we add protocol?
			newUrl = unquotedOrigUrl;
		} else if (unquotedOrigUrl.indexOf("/") === 0) {
			// path should be relative to the base url
			newUrl = baseUrl + unquotedOrigUrl; // already starts with '/'
		} else {
			// path should be relative to current directory
			newUrl = currentDir + unquotedOrigUrl.replace(/^\.\//, ""); // Strip leading './'
		}

		// send back the fixed url(...)
		return "url(" + JSON.stringify(newUrl) + ")";
	});

	// send back the fixed css
	return fixedCss;
};


/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(2);
if(typeof content === 'string') content = [[module.i, content, '']];
// add the styles to the DOM
var update = __webpack_require__(5)(content, {});
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./wcpp-checkout.sass", function() {
			var newContent = require("!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./wcpp-checkout.sass");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 8 */
/***/ (function(module, exports) {

module.exports = function() {
	throw new Error("define cannot be used indirect");
};


/***/ }),
/* 9 */
/***/ (function(module, exports) {

module.exports = function(module) {
	if(!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if(!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ })
/******/ ]);