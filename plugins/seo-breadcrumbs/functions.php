<?php 

// Prevent direct file access.
  if ( ! defined( 'ABSPATH' ) ) {
	
    die( 'Nice try, But not here!!!' );
  
  }

if ( ! function_exists( 'crumb_builder' ) ) {

// function for building list items.
  function crumb_builder ( $href, $title, $name, $tag, $pos )
  {
      return sprintf('
	  <li itemprop="itemListElement" class="breadcrumbs-item" itemscope itemtype="http://schema.org/ListItem">
	  <a itemprop="item" href="%1$s" title="%2$s" class="crumb">
	  <%3$s itemprop="name">%4$s</%3$s>
	  <meta itemprop="position" content="%5$s" />
	  </a>
	  </li>'
	  ,$href,$title,$tag,$name,$pos);
  }
  
}


function seo_breadcrumbs_styles () {

$style_id = get_option('sbc_id');
$index = (int)substr($style_id,-1);
$style_json = plugins_url('/json/styles.json',__FILE__);
$json = file_get_contents($style_json);
$styles = json_decode($json,true);

$arr0 = $arr1 = $arr2 = [];
$style_str=""; $x=0; 

foreach($styles as $style) { 
  $arr0[$x] = $style['code'];
  $x++;
} 
	

$arr2 = array('sbc_before_bgcolor','sbc_after_bgcolor','sbc_before_fontcolor','sbc_after_fontcolor','sbc_separator_color');

for( $x=0; $x<count($arr2); $x++) {
$arr1[$x] = get_option($arr2[$x]);
}


$style_str =str_replace($arr2,$arr1,$arr0[$index]);

return sprintf('<style type="text/css">%1$s</style>',$style_str);
}




if ( ! function_exists( 'seo_breadcrumbs' ) ) {

  function seo_breadcrumbs()
 {
	  
	  global $wp;

$start_time = microtime(true);

 echo '<!-- This breadcrumbs Generated by [ SEO Breadcrumbs ] Plugin. -->';

echo seo_breadcrumbs_styles();

    // Options and Settings
    $separator          = "\n".'<span class="separator">'.get_option( 'sbc_separator' ).'</span>'."\n";
    $breadcrumbs_id     = "breadcrumbs-". get_option( 'sbc_id' );
    $breadcrumbs_class  = "breadcrumbs";
    $home_title         = get_option( 'sbc_home' );
    $index              = 1;
		
	  // Getting current page url for last breadcrumb.
	  $current_url = home_url( add_query_arg( array(), $wp->request ) );


    $args = array('public' => true,'_builtin' => false); 

    $output = 'names';
    $operator = 'and';
    $custtaxo = "";
  
    $taxonomies = get_taxonomies( $args, $output, $operator ); 
  
    if ( $taxonomies ) {
	  
      foreach ( $taxonomies  as $taxonomy ) 
      {
	   
        $custtaxo .= ",".$taxonomy;
	
      }
   
    }

    // custom taxonomies
    $custom_taxonomy = $custtaxo;

    // Get the wp, query, post information
    global $wp,$post,$wp_query;

    // Do not display on the homepage
    if ( ! is_front_page() ) {

    echo sprintf('<div class="%1$s"><ol id="%2$s" itemscope itemtype="http://schema.org/BreadcrumbList">',$breadcrumbs_class,$breadcrumbs_id);

    echo crumb_builder( get_home_url(), 'Home', $home_title, 'span', $index );

    $index++;

    echo $separator;


    // author page
   if ( is_author() ) {

      $userdata = ( get_query_var( 'author_name' )) ? get_user_by( 'slug', get_query_var( 'author_name' ) ) : get_userdata( get_query_var( 'author' ) );

      echo crumb_builder(  $userdata->user_url, 'Author : '.$userdata->display_name, 'Author : '.$userdata->display_name, 'strong', $index );

    } 
	
	  elseif ( is_archive() && !is_tax() && !is_category() && !is_tag() ) {

      echo crumb_builder( $current_url, post_type_archive_title($prefix, false), 'strong', $index );
       
	  }
	
	  else if ( is_archive() && is_tax() && !is_category() && !is_tag() ) {

        // If post is a custom post type
        $post_type = get_post_type();

        // If it is a custom post type display name and link
        if($post_type != 'post') {

            $post_type_object = get_post_type_object($post_type);
            $post_type_archive = get_post_type_archive_link($post_type);

		        echo crumb_builder( $post_type_archive, $post_type_object->labels->name, 'span', $index ); 
 
            $index++;
            echo $separator;

        }

          $custom_tax_name = get_queried_object()->name;

          echo crumb_builder( $current_url, $custom_tax_name, $custom_tax_name, 'strong', $index );

    } 
	
	  else if ( is_single() ) {

        // If post is a custom post type
        $post_type = get_post_type();

        // If it is a custom post type display name and link
        if($post_type != 'post') {

            $post_type_object = get_post_type_object( $post_type );
            $post_type_archive = get_post_type_archive_link( $post_type );

            echo crumb_builder( $post_type_archive, $post_type_object->labels->name, $post_type_object->labels->name, 'span', $index );

            $index++;
            echo $separator;

            }

        // Get post category info
        $category = get_the_category();

        if(!empty($category)) {

            // Get last category post is in
            $last_category = end(array_values($category));

            // Get parent any categories and create array
            $get_cat_parents = rtrim( get_category_parents( $last_category->term_id, true, ',' ),',' );
            $cat_parents = explode(',', $get_cat_parents );

            // Loop through parent categories and store in variable $cat_display
            $cat_display = '';
				
            foreach( $cat_parents as $parents ) 
			      {
			            $cat_name=strip_tags($parents);
                  preg_match('/href="(.*)[^\s]"/',$parents,$match);
                  $cat_link=str_replace('href="','',$match[0]);
                  $cat_link=str_replace('"','',$cat_link);
                  $cat_display .= crumb_builder( $cat_link, $cat_name, $cat_name, 'sapn', $index );

                  $index++;
                  $cat_display .= $separator;
                
		        }
        }

        // If it's a custom post type within a custom taxonomy
        $taxonomy_exists = taxonomy_exists($custom_taxonomy);
			
        if( empty( $last_category ) && !empty( $custom_taxonomy ) && $taxonomy_exists ) {

              $taxonomy_terms = get_the_terms( $post->ID, $custom_taxonomy );
              $cat_id         = $taxonomy_terms[0]->term_id;
              $cat_nicename   = $taxonomy_terms[0]->slug;
              $cat_link       = get_term_link( $taxonomy_terms[0]->term_id, $custom_taxonomy );
              $cat_name       = $taxonomy_terms[0]->name;

        }

        // Check if the post is in a category
        if( ! empty( $last_category )) {
			
            echo $cat_display;
            echo crumb_builder( $current_url, get_the_title(), get_the_title(), 'strong', $index );

        } 
		
		    else if( ! empty( $cat_id )) {

            echo   crumb_builder( $cat_link, $cat_name, $cat_name, 'span', $index );

			      $index++;
            echo $separator;

            echo crumb_builder( $current_url, get_the_title(), get_the_title(), 'strong', $index );

            } else {
			
             echo crumb_builder( $current_url, get_the_title(), get_the_title(), 'strong', $index );

            }

        }
		
        else if ( is_category() ) {

            // Category page			
			echo crumb_builder( $current_url, single_cat_title('', false), single_cat_title('', false), 'strong', $index );
			
        }
		else if ( is_page() ) {

        // Standard page
	    if( $post->post_parent ){

            // If child page, get parents
            $anc = get_post_ancestors( $post->ID );

            // Get parents in the right order
            $anc = array_reverse($anc);

            // Parent page loop
            if ( !isset( $parents ) ) { $parents = null; }
                
			foreach ( $anc as $ancestor ) 
			{
                 
             $parents .= crumb_builder( get_permalink($ancestor), get_the_title($ancestor), get_the_title($ancestor), 'span', $index );
              $parents .= $separator;
               $index++;
                
		    }

            // Display parent pages
            echo $parents;

            // Current page
           echo crumb_builder( $current_url, get_the_title(), get_the_title(), 'strong', $index );
			
            } else {

               // Just display current page if not parents
               echo crumb_builder( $current_url, get_the_title(), get_the_title(), 'strong', $index );
            }
        
		} 
		
		else if ( is_tag() ) {

            // Get tag information
            $term_id        = get_query_var( 'tag_id' );
            $taxonomy       = 'post_tag';
            $args           = 'include=' . $term_id;
            $terms          = get_terms( $taxonomy, $args );
            $get_term_id    = $terms[0]->term_id;
            $get_term_slug  = $terms[0]->slug;
            $get_term_name  = $terms[0]->name;

            // Display the tag name
           echo crumb_builder( $current_url, $get_term_name, $get_term_name, 'strong', $index );

        }

        else if ( get_query_var('paged') ) {

            // Paginated archives
            echo crumb_builder( $current_url,'Page : '.get_query_var('paged'),'Page : '.get_query_var('paged'), 'strong', $index );
		
        } 
		
        else if ( is_search() ) {
            // search results page
            echo crumb_builder( $current_url, 'Search results for : '.get_search_query(), 'Search results for : ' . get_search_query(), 'strong', $index );

        } 
		
	      elseif ( is_404() ) {
           // 404 : page not found page
           echo crumb_builder( $current_url, 'Error : 404', 'Error : 404', 'strong', $index );
		
        }

	
$end_time = microtime(true);
echo "\n".'</ol></div>';

echo "\n\n".'<script type="text/javascript">'."\n".'function seo_breadcrumbs(){var elem=document.getElementsByClassName("crumb");elem[elem.length-1].setAttribute("class","current");};seo_breadcrumbs();'."\n".'</script>'."\n\n";

echo "\n"."<!-- This breadcrumbs generated by [ SEO Breadcrumbs ] plugin, with in ".round($end_time-$start_time, 3). " milliseconds. -->"."\n";
  }
}

}
